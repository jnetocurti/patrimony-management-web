// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/components/ui/DataGrid should render correctly 1`] = `
<Memo()
  columns={
    Array [
      Object {
        "field": "name",
        "headerName": "Name",
      },
    ]
  }
  rows={
    Array [
      Object {
        "id": 1,
        "name": "foo",
      },
    ]
  }
>
  <ScrollBar
    className=""
    component="div"
    containerRef={[Function]}
    onSync={[Function]}
  >
    <div>
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "rgb(17, 82, 147)",
                "light": "rgb(71, 145, 219)",
                "main": "#1976d2",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "props": Object {
              "MuiDataGrid": Object {
                "localeText": Object {
                  "MuiTablePagination": Object {
                    "backIconButtonText": "Página anterior",
                    "labelDisplayedRows": [Function],
                    "labelRowsPerPage": "Linhas por página:",
                    "nextIconButtonText": "Próxima página",
                  },
                  "booleanCellFalseLabel": "não",
                  "booleanCellTrueLabel": "sim",
                  "checkboxSelectionHeaderName": "Seleção",
                  "columnHeaderFiltersLabel": "Exibir Filtros",
                  "columnHeaderFiltersTooltipActive": [Function],
                  "columnHeaderSortIconLabel": "Ordenar",
                  "columnMenuFilter": "Filtrar",
                  "columnMenuHideColumn": "Ocultar",
                  "columnMenuLabel": "Menu",
                  "columnMenuShowColumns": "Exibir colunas",
                  "columnMenuSortAsc": "Ordenar do menor para o maior",
                  "columnMenuSortDesc": "Ordenar do maior para o menor",
                  "columnMenuUnsort": "Desfazer ordenação",
                  "columnsPanelDragIconLabel": "Reordenar Coluna",
                  "columnsPanelHideAllButton": "Ocultar todas",
                  "columnsPanelShowAllButton": "Mostrar todas",
                  "columnsPanelTextFieldLabel": "Localizar coluna",
                  "columnsPanelTextFieldPlaceholder": "Título da coluna",
                  "errorOverlayDefaultLabel": "Ocorreu um erro.",
                  "filterOperatorAfter": "após",
                  "filterOperatorBefore": "antes de",
                  "filterOperatorContains": "contém",
                  "filterOperatorEndsWith": "termina com",
                  "filterOperatorEquals": "é igual a",
                  "filterOperatorIs": "é",
                  "filterOperatorNot": "não é",
                  "filterOperatorOnOrAfter": "em ou após",
                  "filterOperatorOnOrBefore": "em ou antes de",
                  "filterOperatorStartsWith": "começa com",
                  "filterPanelAddFilter": "Adicionar filtro",
                  "filterPanelColumns": "Colunas",
                  "filterPanelDeleteIconLabel": "Excluir",
                  "filterPanelInputLabel": "Valor",
                  "filterPanelInputPlaceholder": "Filtrar valor",
                  "filterPanelOperatorAnd": "E",
                  "filterPanelOperatorOr": "Ou",
                  "filterPanelOperators": "Operadores",
                  "footerRowSelected": [Function],
                  "footerTotalRows": "Total de linhas:",
                  "footerTotalVisibleRows": [Function],
                  "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                  "noRowsLabel": "Nenhuma linha",
                  "toolbarColumns": "Colunas",
                  "toolbarColumnsLabel": "Exibir seletor de colunas",
                  "toolbarDensity": "Densidade",
                  "toolbarDensityComfortable": "Confortável",
                  "toolbarDensityCompact": "Compacto",
                  "toolbarDensityLabel": "Densidade",
                  "toolbarDensityStandard": "Padrão",
                  "toolbarExport": "Exportar",
                  "toolbarExportCSV": "Baixar como CSV",
                  "toolbarExportLabel": "Exportar",
                  "toolbarFilters": "Filtros",
                  "toolbarFiltersLabel": "Exibir filtros",
                  "toolbarFiltersTooltipActive": [Function],
                  "toolbarFiltersTooltipHide": "Ocultar filtros",
                  "toolbarFiltersTooltipShow": "Exibir filtros",
                },
              },
            },
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <ForwardRef
          columns={
            Array [
              Object {
                "field": "name",
                "headerName": "Name",
              },
            ]
          }
          rows={
            Array [
              Object {
                "id": 1,
                "name": "foo",
              },
            ]
          }
        >
          <ForwardRef
            checkboxSelectionVisibleOnly={false}
            columnBuffer={2}
            columnTypes={
              Object {
                "__default__": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
                "boolean": Object {
                  "align": "center",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "center",
                  "hide": false,
                  "renderCell": [Function],
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "boolean",
                  "width": 100,
                },
                "date": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "date",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "dateTime": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "dateTime",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "number": Object {
                  "align": "right",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "=",
                      "value": "=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "!=",
                      "value": "!=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">",
                      "value": ">",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">=",
                      "value": ">=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<",
                      "value": "<",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<=",
                      "value": "<=",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "right",
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "number",
                  "valueFormatter": [Function],
                  "valueParser": [Function],
                  "width": 100,
                },
                "singleSelect": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "singleSelect",
                  "width": 100,
                },
                "string": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
              }
            }
            columns={
              Array [
                Object {
                  "field": "name",
                  "headerName": "Name",
                },
              ]
            }
            density="standard"
            disableColumnReorder={true}
            disableColumnResize={true}
            disableMultipleColumnsFiltering={true}
            disableMultipleColumnsSorting={true}
            disableMultipleSelection={true}
            filterMode="client"
            headerHeight={56}
            isRtl={false}
            licenseStatus="Valid"
            localeText={
              Object {
                "MuiTablePagination": Object {
                  "backIconButtonText": "Página anterior",
                  "labelDisplayedRows": [Function],
                  "labelRowsPerPage": "Linhas por página:",
                  "nextIconButtonText": "Próxima página",
                },
                "booleanCellFalseLabel": "não",
                "booleanCellTrueLabel": "sim",
                "checkboxSelectionHeaderName": "Seleção",
                "columnHeaderFiltersLabel": "Exibir Filtros",
                "columnHeaderFiltersTooltipActive": [Function],
                "columnHeaderSortIconLabel": "Ordenar",
                "columnMenuFilter": "Filtrar",
                "columnMenuHideColumn": "Ocultar",
                "columnMenuLabel": "Menu",
                "columnMenuShowColumns": "Exibir colunas",
                "columnMenuSortAsc": "Ordenar do menor para o maior",
                "columnMenuSortDesc": "Ordenar do maior para o menor",
                "columnMenuUnsort": "Desfazer ordenação",
                "columnsPanelDragIconLabel": "Reordenar Coluna",
                "columnsPanelHideAllButton": "Ocultar todas",
                "columnsPanelShowAllButton": "Mostrar todas",
                "columnsPanelTextFieldLabel": "Localizar coluna",
                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                "filterOperatorAfter": "após",
                "filterOperatorBefore": "antes de",
                "filterOperatorContains": "contém",
                "filterOperatorEndsWith": "termina com",
                "filterOperatorEquals": "é igual a",
                "filterOperatorIs": "é",
                "filterOperatorNot": "não é",
                "filterOperatorOnOrAfter": "em ou após",
                "filterOperatorOnOrBefore": "em ou antes de",
                "filterOperatorStartsWith": "começa com",
                "filterPanelAddFilter": "Adicionar filtro",
                "filterPanelColumns": "Colunas",
                "filterPanelDeleteIconLabel": "Excluir",
                "filterPanelInputLabel": "Valor",
                "filterPanelInputPlaceholder": "Filtrar valor",
                "filterPanelOperatorAnd": "E",
                "filterPanelOperatorOr": "Ou",
                "filterPanelOperators": "Operadores",
                "footerRowSelected": [Function],
                "footerTotalRows": "Total de linhas:",
                "footerTotalVisibleRows": [Function],
                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                "noRowsLabel": "Nenhuma linha",
                "toolbarColumns": "Colunas",
                "toolbarColumnsLabel": "Exibir seletor de colunas",
                "toolbarDensity": "Densidade",
                "toolbarDensityComfortable": "Confortável",
                "toolbarDensityCompact": "Compacto",
                "toolbarDensityLabel": "Densidade",
                "toolbarDensityStandard": "Padrão",
                "toolbarExport": "Exportar",
                "toolbarExportCSV": "Baixar como CSV",
                "toolbarExportLabel": "Exportar",
                "toolbarFilters": "Filtros",
                "toolbarFiltersLabel": "Exibir filtros",
                "toolbarFiltersTooltipActive": [Function],
                "toolbarFiltersTooltipHide": "Ocultar filtros",
                "toolbarFiltersTooltipShow": "Exibir filtros",
              }
            }
            logLevel="warn"
            logger={
              BufferedConsole {
                "Console": [Function],
                "_buffer": Array [],
                "_counters": Object {},
                "_groupDepth": 0,
                "_timers": Object {},
                "assert": [Function],
                "clear": [Function],
                "count": [Function],
                "countReset": [Function],
                "debug": [Function],
                "dir": [Function],
                "dirxml": [Function],
                "error": [Function],
                "group": [Function],
                "groupCollapsed": [Function],
                "groupEnd": [Function],
                "info": [Function],
                "log": [Function],
                "table": [Function],
                "time": [Function],
                "timeEnd": [Function],
                "timeLog": [Function],
                "trace": [Function],
                "warn": [Function],
              }
            }
            pageSize={100}
            pagination={true}
            paginationMode="client"
            rowHeight={52}
            rows={
              Array [
                Object {
                  "id": 1,
                  "name": "foo",
                },
              ]
            }
            rowsPerPageOptions={
              Array [
                25,
                50,
                100,
              ]
            }
            scrollEndThreshold={80}
            sortingMode="client"
            sortingOrder={
              Array [
                "asc",
                "desc",
                null,
              ]
            }
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "rgb(17, 82, 147)",
                    "light": "rgb(71, 145, 219)",
                    "main": "#1976d2",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {
                  "MuiDataGrid": Object {
                    "localeText": Object {
                      "MuiTablePagination": Object {
                        "backIconButtonText": "Página anterior",
                        "labelDisplayedRows": [Function],
                        "labelRowsPerPage": "Linhas por página:",
                        "nextIconButtonText": "Próxima página",
                      },
                      "booleanCellFalseLabel": "não",
                      "booleanCellTrueLabel": "sim",
                      "checkboxSelectionHeaderName": "Seleção",
                      "columnHeaderFiltersLabel": "Exibir Filtros",
                      "columnHeaderFiltersTooltipActive": [Function],
                      "columnHeaderSortIconLabel": "Ordenar",
                      "columnMenuFilter": "Filtrar",
                      "columnMenuHideColumn": "Ocultar",
                      "columnMenuLabel": "Menu",
                      "columnMenuShowColumns": "Exibir colunas",
                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                      "columnMenuUnsort": "Desfazer ordenação",
                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                      "columnsPanelHideAllButton": "Ocultar todas",
                      "columnsPanelShowAllButton": "Mostrar todas",
                      "columnsPanelTextFieldLabel": "Localizar coluna",
                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                      "filterOperatorAfter": "após",
                      "filterOperatorBefore": "antes de",
                      "filterOperatorContains": "contém",
                      "filterOperatorEndsWith": "termina com",
                      "filterOperatorEquals": "é igual a",
                      "filterOperatorIs": "é",
                      "filterOperatorNot": "não é",
                      "filterOperatorOnOrAfter": "em ou após",
                      "filterOperatorOnOrBefore": "em ou antes de",
                      "filterOperatorStartsWith": "começa com",
                      "filterPanelAddFilter": "Adicionar filtro",
                      "filterPanelColumns": "Colunas",
                      "filterPanelDeleteIconLabel": "Excluir",
                      "filterPanelInputLabel": "Valor",
                      "filterPanelInputPlaceholder": "Filtrar valor",
                      "filterPanelOperatorAnd": "E",
                      "filterPanelOperatorOr": "Ou",
                      "filterPanelOperators": "Operadores",
                      "footerRowSelected": [Function],
                      "footerTotalRows": "Total de linhas:",
                      "footerTotalVisibleRows": [Function],
                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                      "noRowsLabel": "Nenhuma linha",
                      "toolbarColumns": "Colunas",
                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                      "toolbarDensity": "Densidade",
                      "toolbarDensityComfortable": "Confortável",
                      "toolbarDensityCompact": "Compacto",
                      "toolbarDensityLabel": "Densidade",
                      "toolbarDensityStandard": "Padrão",
                      "toolbarExport": "Exportar",
                      "toolbarExportCSV": "Baixar como CSV",
                      "toolbarExportLabel": "Exportar",
                      "toolbarFilters": "Filtros",
                      "toolbarFiltersLabel": "Exibir filtros",
                      "toolbarFiltersTooltipActive": [Function],
                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                      "toolbarFiltersTooltipShow": "Exibir filtros",
                    },
                  },
                },
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
                Symbol(mui.nested): false,
              }
            }
          >
            <bs
              apiRef={
                Object {
                  "current": Ti {
                    "applyFilter": [Function],
                    "applyFilterLinkOperator": [Function],
                    "applyFilters": [Function],
                    "applySorting": [Function],
                    "columnHeadersContainerElementRef": Object {
                      "current": <div
                        class="MuiDataGrid-columnsContainer"
                        style="min-height: 56px; max-height: 56px; line-height: 56px;"
                      >
                        <div
                          aria-rowindex="1"
                          class="MuiDataGrid-columnHeaderWrapper scroll"
                          role="row"
                          style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                            data-field="name"
                            role="columnheader"
                            style="width: 100px; min-width: 100px; max-width: 100px;"
                            tabindex="0"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderDraggableContainer"
                              draggable="false"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitleContainer"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderTitle"
                                  title=""
                                >
                                  Name
                                </div>
                                <div
                                  class="MuiDataGrid-iconButtonContainer"
                                >
                                  <button
                                    aria-label="Ordenar"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                    tabindex="-1"
                                    title="Ordenar"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                        />
                                      </svg>
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>
                              </div>
                              <div
                                class="MuiDataGrid-menuIcon"
                              >
                                <button
                                  aria-controls="mui-100000"
                                  aria-haspopup="true"
                                  aria-label="Menu"
                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                  id="mui-100000"
                                  tabindex="-1"
                                  title="Menu"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-columnSeparator"
                              style="min-height: 56px; opacity: 1;"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M11 19V5h2v14z"
                                />
                              </svg>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "columnHeadersElementRef": Object {
                      "current": <div
                        aria-rowindex="1"
                        class="MuiDataGrid-columnHeaderWrapper scroll"
                        role="row"
                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                      >
                        <div
                          aria-colindex="1"
                          class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                          data-field="name"
                          role="columnheader"
                          style="width: 100px; min-width: 100px; max-width: 100px;"
                          tabindex="0"
                        >
                          <div
                            class="MuiDataGrid-columnHeaderDraggableContainer"
                            draggable="false"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderTitleContainer"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitle"
                                title=""
                              >
                                Name
                              </div>
                              <div
                                class="MuiDataGrid-iconButtonContainer"
                              >
                                <button
                                  aria-label="Ordenar"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                  tabindex="-1"
                                  title="Ordenar"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-menuIcon"
                            >
                              <button
                                aria-controls="mui-100000"
                                aria-haspopup="true"
                                aria-label="Menu"
                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                id="mui-100000"
                                tabindex="-1"
                                title="Menu"
                                type="button"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                    />
                                  </svg>
                                </span>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </button>
                            </div>
                          </div>
                          <div
                            class="MuiDataGrid-columnSeparator"
                            style="min-height: 56px; opacity: 1;"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M11 19V5h2v14z"
                              />
                            </svg>
                          </div>
                        </div>
                      </div>,
                    },
                    "commitCellChange": [Function],
                    "components": Object {
                      "BooleanCellFalseIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "BooleanCellTrueIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Checkbox": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "checked": [Function],
                            "checkedIcon": [Function],
                            "classes": [Function],
                            "color": [Function],
                            "disableRipple": [Function],
                            "disabled": [Function],
                            "icon": [Function],
                            "id": [Function],
                            "indeterminate": [Function],
                            "indeterminateIcon": [Function],
                            "inputProps": [Function],
                            "inputRef": [Function],
                            "onChange": [Function],
                            "required": [Function],
                            "size": [Function],
                            "value": [Function],
                          },
                          "render": [Function],
                        },
                        "displayName": "WithStyles(ForwardRef(Checkbox))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiCheckbox",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      },
                      "ColumnFilteredIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnMenu": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ColumnMenuIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnResizeIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSelectorIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedAscendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedDescendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnUnsortedIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      },
                      "ColumnsPanel": [Function],
                      "DensityComfortableIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityCompactIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityStandardIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ErrorOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ExportIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "FilterPanel": [Function],
                      "Footer": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Header": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "LoadingOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoResultsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoRowsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "OpenFilterButtonIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Pagination": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Panel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "PreferencesPanel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Toolbar": undefined,
                    },
                    "componentsProps": undefined,
                    "copySelectedRowsToClipboard": [Function],
                    "deleteFilter": [Function],
                    "events": Object {
                      "cellClick": Array [
                        [Function],
                      ],
                      "cellDoubleClick": Array [
                        [Function],
                        [Function],
                      ],
                      "cellDragEnd": Array [
                        [Function],
                      ],
                      "cellDragEnter": Array [
                        [Function],
                      ],
                      "cellDragOver": Array [
                        [Function],
                      ],
                      "cellEditEnter": Array [
                        [Function],
                      ],
                      "cellEditExit": Array [
                        [Function],
                      ],
                      "cellEditPropsChange": Array [
                        [Function],
                      ],
                      "cellEditPropsChangeCommitted": Array [
                        [Function],
                      ],
                      "cellFocusOut": Array [
                        [Function],
                      ],
                      "cellKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "cellModeChange": Array [
                        [Function],
                      ],
                      "cellMouseDown": Array [
                        [Function],
                      ],
                      "cellMouseUp": Array [
                        [Function],
                      ],
                      "cellNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnHeaderBlur": Array [
                        [Function],
                      ],
                      "columnHeaderClick": Array [
                        [Function],
                      ],
                      "columnHeaderDragEnd": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderDragEnter": Array [
                        [Function],
                      ],
                      "columnHeaderDragOver": Array [
                        [Function],
                      ],
                      "columnHeaderDragStart": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderFocus": Array [
                        [Function],
                      ],
                      "columnHeaderKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "columnHeaderNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnResizeStart": Array [
                        [Function],
                      ],
                      "columnResizeStop": Array [
                        [Function],
                      ],
                      "columnSeparatorMouseDown": Array [
                        [Function],
                      ],
                      "columnsChange": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "componentError": Array [
                        [Function],
                      ],
                      "debouncedResize": Array [
                        [Function],
                        [Function],
                      ],
                      "keydown": Array [
                        [Function],
                      ],
                      "resize": Array [
                        [Function],
                      ],
                      "rowClick": Array [
                        [Function],
                      ],
                      "rowsClear": Array [
                        [Function],
                      ],
                      "rowsScroll": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "rowsSet": Array [
                        [Function],
                        [Function],
                      ],
                      "rowsUpdate": Array [
                        [Function],
                        [Function],
                      ],
                      "unmount": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                    },
                    "exportDataAsCsv": [Function],
                    "footerRef": Object {
                      "current": <div>
                        <div
                          class="MuiDataGrid-footerContainer"
                        >
                          <div />
                          <div
                            class="MuiTablePagination-root"
                          >
                            <div
                              class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                            >
                              <div
                                class="MuiTablePagination-spacer"
                              />
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                id="mui-100000"
                              >
                                Linhas por página:
                              </p>
                              <div
                                class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                              >
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="mui-100000 mui-100000"
                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                  id="mui-100000"
                                  role="button"
                                  tabindex="0"
                                >
                                  100
                                </div>
                                <input
                                  aria-hidden="true"
                                  class="MuiSelect-nativeInput"
                                  tabindex="-1"
                                  value="100"
                                />
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </div>
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                              >
                                1-1 de 1
                              </p>
                              <div
                                class="MuiTablePagination-actions"
                              >
                                <button
                                  aria-label="Página anterior"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Página anterior"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                                <button
                                  aria-label="Próxima página"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Próxima página"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "forceUpdate": [Function],
                    "getAllColumns": [Function],
                    "getAllRowIds": [Function],
                    "getCellElement": [Function],
                    "getCellMode": [Function],
                    "getCellParams": [Function],
                    "getCellValue": [Function],
                    "getColumn": [Function],
                    "getColumnHeaderElement": [Function],
                    "getColumnHeaderParams": [Function],
                    "getColumnIndex": [Function],
                    "getColumnPosition": [Function],
                    "getColumnsMeta": [Function],
                    "getContainerPropsState": [Function],
                    "getDataAsCsv": [Function],
                    "getEditCellProps": [Function],
                    "getEditCellPropsParams": [Function],
                    "getEditRowsModel": [Function],
                    "getLocaleText": [Function],
                    "getRenderContextState": [Function],
                    "getRow": [Function],
                    "getRowElement": [Function],
                    "getRowIdFromRowIndex": [Function],
                    "getRowIndex": [Function],
                    "getRowModels": [Function],
                    "getRowParams": [Function],
                    "getRowsCount": [Function],
                    "getScrollPosition": [Function],
                    "getSelectedRows": [Function],
                    "getSortModel": [Function],
                    "getSortedRowIds": [Function],
                    "getSortedRows": [Function],
                    "getState": [Function],
                    "getVisibleColumns": [Function],
                    "getVisibleRowModels": [Function],
                    "headerRef": Object {
                      "current": <div>
                        <div />
                      </div>,
                    },
                    "hideColumnMenu": [Function],
                    "hideFilterPanel": [Function],
                    "hidePreferences": [Function],
                    "isCellEditable": [Function],
                    "isColumnVisibleInWindow": [Function],
                    "maxListeners": 10,
                    "publishEvent": [Function],
                    "renderingZoneRef": Object {
                      "current": <div
                        class="MuiDataGrid-renderingZone"
                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                      >
                        <div
                          aria-rowindex="2"
                          aria-selected="false"
                          class="Mui-even MuiDataGrid-row"
                          data-id="1"
                          data-rowindex="0"
                          role="row"
                          style="max-height: 52px; min-height: 52px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                            data-colindex="0"
                            data-field="name"
                            data-mode="view"
                            data-rowindex="0"
                            data-rowselected="false"
                            data-value="foo"
                            role="cell"
                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                            tabindex="-1"
                          >
                            foo
                          </div>
                        </div>
                      </div>,
                    },
                    "resize": [Function],
                    "rootElementRef": Object {
                      "current": <div
                        aria-colcount="1"
                        aria-multiselectable="false"
                        aria-rowcount="1"
                        class="MuiDataGrid-root MuiDataGrid-root"
                        role="grid"
                      >
                        <div>
                          <div />
                        </div>
                        <div
                          class="MuiDataGrid-main"
                        >
                          <div
                            class="MuiDataGrid-columnsContainer"
                            style="min-height: 56px; max-height: 56px; line-height: 56px;"
                          >
                            <div
                              aria-rowindex="1"
                              class="MuiDataGrid-columnHeaderWrapper scroll"
                              role="row"
                              style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                            >
                              <div
                                aria-colindex="1"
                                class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                                data-field="name"
                                role="columnheader"
                                style="width: 100px; min-width: 100px; max-width: 100px;"
                                tabindex="0"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderDraggableContainer"
                                  draggable="false"
                                >
                                  <div
                                    class="MuiDataGrid-columnHeaderTitleContainer"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderTitle"
                                      title=""
                                    >
                                      Name
                                    </div>
                                    <div
                                      class="MuiDataGrid-iconButtonContainer"
                                    >
                                      <button
                                        aria-label="Ordenar"
                                        class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                        tabindex="-1"
                                        title="Ordenar"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                            />
                                          </svg>
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                  </div>
                                  <div
                                    class="MuiDataGrid-menuIcon"
                                  >
                                    <button
                                      aria-controls="mui-100000"
                                      aria-haspopup="true"
                                      aria-label="Menu"
                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                      id="mui-100000"
                                      tabindex="-1"
                                      title="Menu"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  </div>
                                </div>
                                <div
                                  class="MuiDataGrid-columnSeparator"
                                  style="min-height: 56px; opacity: 1;"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M11 19V5h2v14z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            style="overflow: visible; height: 0px; width: 0px;"
                          >
                            <div
                              class="MuiDataGrid-windowContainer"
                              style="width: 0px; height: 0px;"
                            >
                              <div
                                class="MuiDataGrid-window"
                                style="top: 56px; overflow-y: auto;"
                              >
                                <div
                                  class="MuiDataGrid-dataContainer"
                                  style="min-width: 100px; min-height: 52px;"
                                >
                                  <div
                                    class="MuiDataGrid-viewport"
                                    style="min-width: 0; max-width: 0; max-height: 0;"
                                  >
                                    <div
                                      class="MuiDataGrid-renderingZone"
                                      style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                    >
                                      <div
                                        aria-rowindex="2"
                                        aria-selected="false"
                                        class="Mui-even MuiDataGrid-row"
                                        data-id="1"
                                        data-rowindex="0"
                                        role="row"
                                        style="max-height: 52px; min-height: 52px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                                          data-colindex="0"
                                          data-field="name"
                                          data-mode="view"
                                          data-rowindex="0"
                                          data-rowselected="false"
                                          data-value="foo"
                                          role="cell"
                                          style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                          tabindex="-1"
                                        >
                                          foo
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="Mui-resizeTriggers"
                          >
                            <div
                              class="expand-trigger"
                            >
                              <div
                                style="width: 1px; height: 1px;"
                              />
                            </div>
                            <div
                              class="contract-trigger"
                            />
                          </div>
                        </div>
                        <div>
                          <div
                            class="MuiDataGrid-footerContainer"
                          >
                            <div />
                            <div
                              class="MuiTablePagination-root"
                            >
                              <div
                                class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                              >
                                <div
                                  class="MuiTablePagination-spacer"
                                />
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                  id="mui-100000"
                                >
                                  Linhas por página:
                                </p>
                                <div
                                  class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-100000 mui-100000"
                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-100000"
                                    role="button"
                                    tabindex="0"
                                  >
                                    100
                                  </div>
                                  <input
                                    aria-hidden="true"
                                    class="MuiSelect-nativeInput"
                                    tabindex="-1"
                                    value="100"
                                  />
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </div>
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                >
                                  1-1 de 1
                                </p>
                                <div
                                  class="MuiTablePagination-actions"
                                >
                                  <button
                                    aria-label="Página anterior"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Página anterior"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                  <button
                                    aria-label="Próxima página"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Próxima página"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "scroll": [Function],
                    "scrollToIndexes": [Function],
                    "selectRow": [Function],
                    "selectRows": [Function],
                    "setCellFocus": [Function],
                    "setCellMode": [Function],
                    "setCellValue": [Function],
                    "setColumnHeaderFocus": [Function],
                    "setColumnIndex": [Function],
                    "setColumnVisibility": [Function],
                    "setColumnWidth": [Function],
                    "setDensity": [Function],
                    "setEditCellProps": [Function],
                    "setEditRowsModel": [Function],
                    "setFilterModel": [Function],
                    "setPage": [Function],
                    "setPageSize": [Function],
                    "setRows": [Function],
                    "setSelectionModel": [Function],
                    "setSortModel": [Function],
                    "setState": [Function],
                    "showColumnMenu": [Function],
                    "showError": [Function],
                    "showFilterPanel": [Function],
                    "showPreferences": [Function],
                    "sortColumn": [Function],
                    "state": Object {
                      "columnMenu": Object {
                        "open": false,
                      },
                      "columnReorder": Object {
                        "dragCol": "",
                      },
                      "columnResize": Object {
                        "resizingColumnField": "",
                      },
                      "columns": Object {
                        "all": Array [
                          "name",
                        ],
                        "lookup": Object {
                          "name": Object {
                            "align": "left",
                            "field": "name",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "headerName": "Name",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                        },
                      },
                      "containerSizes": Object {
                        "dataContainerSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "isVirtualized": false,
                        "lastPage": 1,
                        "renderingZone": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "renderingZonePageSize": 1,
                        "renderingZoneScrollHeight": 52,
                        "totalSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "viewportPageSize": 1,
                        "virtualRowsCount": 1,
                        "windowSizes": Object {
                          "height": 0,
                          "width": 0,
                        },
                      },
                      "density": Object {
                        "headerHeight": 56,
                        "rowHeight": 52,
                        "value": "standard",
                      },
                      "editRows": Object {},
                      "error": undefined,
                      "filter": Object {
                        "items": Array [],
                        "linkOperator": "and",
                      },
                      "focus": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "isScrolling": false,
                      "options": Object {
                        "checkboxSelectionVisibleOnly": false,
                        "classes": Object {
                          "cell": "MuiDataGrid-cell",
                          "columnHeader": "MuiDataGrid-columnHeader",
                          "root": "MuiDataGrid-root",
                          "row": "MuiDataGrid-row",
                        },
                        "columnBuffer": 2,
                        "columnTypes": Object {
                          "__default__": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                          "boolean": Object {
                            "align": "center",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "center",
                            "hide": false,
                            "renderCell": [Function],
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "boolean",
                            "width": 100,
                          },
                          "date": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "date",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "dateTime": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "dateTime",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "number": Object {
                            "align": "right",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                          "singleSelect": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "singleSelect",
                            "width": 100,
                          },
                          "string": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                        },
                        "columns": Array [
                          Object {
                            "field": "name",
                            "headerName": "Name",
                          },
                        ],
                        "density": "standard",
                        "disableColumnReorder": true,
                        "disableColumnResize": true,
                        "disableMultipleColumnsFiltering": true,
                        "disableMultipleColumnsSorting": true,
                        "disableMultipleSelection": true,
                        "filterMode": "client",
                        "headerHeight": 56,
                        "isRtl": false,
                        "licenseStatus": "Valid",
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "filterValueAny": "any",
                          "filterValueFalse": "false",
                          "filterValueTrue": "true",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                        "logLevel": "warn",
                        "logger": BufferedConsole {
                          "Console": [Function],
                          "_buffer": Array [],
                          "_counters": Object {},
                          "_groupDepth": 0,
                          "_timers": Object {},
                          "assert": [Function],
                          "clear": [Function],
                          "count": [Function],
                          "countReset": [Function],
                          "debug": [Function],
                          "dir": [Function],
                          "dirxml": [Function],
                          "error": [Function],
                          "group": [Function],
                          "groupCollapsed": [Function],
                          "groupEnd": [Function],
                          "info": [Function],
                          "log": [Function],
                          "table": [Function],
                          "time": [Function],
                          "timeEnd": [Function],
                          "timeLog": [Function],
                          "trace": [Function],
                          "warn": [Function],
                        },
                        "pageSize": 100,
                        "pagination": true,
                        "paginationMode": "client",
                        "rowHeight": 52,
                        "rows": Array [
                          Object {
                            "id": 1,
                            "name": "foo",
                          },
                        ],
                        "rowsPerPageOptions": Array [
                          25,
                          50,
                          100,
                        ],
                        "scrollEndThreshold": 80,
                        "scrollbarSize": 0,
                        "sortingMode": "client",
                        "sortingOrder": Array [
                          "asc",
                          "desc",
                          null,
                        ],
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "rgb(17, 82, 147)",
                              "light": "rgb(71, 145, 219)",
                              "main": "#1976d2",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {
                            "MuiDataGrid": Object {
                              "localeText": Object {
                                "MuiTablePagination": Object {
                                  "backIconButtonText": "Página anterior",
                                  "labelDisplayedRows": [Function],
                                  "labelRowsPerPage": "Linhas por página:",
                                  "nextIconButtonText": "Próxima página",
                                },
                                "booleanCellFalseLabel": "não",
                                "booleanCellTrueLabel": "sim",
                                "checkboxSelectionHeaderName": "Seleção",
                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                "columnHeaderFiltersTooltipActive": [Function],
                                "columnHeaderSortIconLabel": "Ordenar",
                                "columnMenuFilter": "Filtrar",
                                "columnMenuHideColumn": "Ocultar",
                                "columnMenuLabel": "Menu",
                                "columnMenuShowColumns": "Exibir colunas",
                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                "columnMenuUnsort": "Desfazer ordenação",
                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                "columnsPanelHideAllButton": "Ocultar todas",
                                "columnsPanelShowAllButton": "Mostrar todas",
                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                "filterOperatorAfter": "após",
                                "filterOperatorBefore": "antes de",
                                "filterOperatorContains": "contém",
                                "filterOperatorEndsWith": "termina com",
                                "filterOperatorEquals": "é igual a",
                                "filterOperatorIs": "é",
                                "filterOperatorNot": "não é",
                                "filterOperatorOnOrAfter": "em ou após",
                                "filterOperatorOnOrBefore": "em ou antes de",
                                "filterOperatorStartsWith": "começa com",
                                "filterPanelAddFilter": "Adicionar filtro",
                                "filterPanelColumns": "Colunas",
                                "filterPanelDeleteIconLabel": "Excluir",
                                "filterPanelInputLabel": "Valor",
                                "filterPanelInputPlaceholder": "Filtrar valor",
                                "filterPanelOperatorAnd": "E",
                                "filterPanelOperatorOr": "Ou",
                                "filterPanelOperators": "Operadores",
                                "footerRowSelected": [Function],
                                "footerTotalRows": "Total de linhas:",
                                "footerTotalVisibleRows": [Function],
                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                "noRowsLabel": "Nenhuma linha",
                                "toolbarColumns": "Colunas",
                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                "toolbarDensity": "Densidade",
                                "toolbarDensityComfortable": "Confortável",
                                "toolbarDensityCompact": "Compacto",
                                "toolbarDensityLabel": "Densidade",
                                "toolbarDensityStandard": "Padrão",
                                "toolbarExport": "Exportar",
                                "toolbarExportCSV": "Baixar como CSV",
                                "toolbarExportLabel": "Exportar",
                                "toolbarFilters": "Filtros",
                                "toolbarFiltersLabel": "Exibir filtros",
                                "toolbarFiltersTooltipActive": [Function],
                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                "toolbarFiltersTooltipShow": "Exibir filtros",
                              },
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                          Symbol(mui.nested): false,
                        },
                      },
                      "pagination": Object {
                        "page": 0,
                        "pageCount": 1,
                        "pageSize": 100,
                        "paginationMode": "client",
                        "rowCount": 1,
                      },
                      "preferencePanel": Object {
                        "open": false,
                      },
                      "rendering": Object {
                        "realScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "renderContext": Object {
                          "firstColIdx": 0,
                          "firstRowIdx": 0,
                          "lastColIdx": 0,
                          "lastRowIdx": 1,
                          "leftEmptyWidth": 0,
                          "page": 0,
                          "pageSize": 100,
                          "paginationCurrentPage": 0,
                          "rightEmptyWidth": 0,
                        },
                        "renderedSizes": Object {
                          "dataContainerSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "isVirtualized": false,
                          "lastPage": 1,
                          "renderingZone": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "renderingZonePageSize": 1,
                          "renderingZoneScrollHeight": 52,
                          "totalSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "viewportPageSize": 1,
                          "virtualRowsCount": 1,
                          "windowSizes": Object {
                            "height": 0,
                            "width": 0,
                          },
                        },
                        "renderingZoneScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "virtualPage": 0,
                        "virtualRowsCount": 0,
                      },
                      "rows": Object {
                        "allRows": Array [
                          1,
                        ],
                        "idRowsLookup": Object {
                          "1": Object {
                            "id": 1,
                            "name": "foo",
                          },
                        },
                        "totalRowCount": 1,
                      },
                      "scrollBar": Object {
                        "hasScrollX": true,
                        "hasScrollY": true,
                        "scrollBarSize": Object {
                          "x": 0,
                          "y": 0,
                        },
                      },
                      "selection": Object {},
                      "sorting": Object {
                        "sortModel": Array [],
                        "sortedRows": Array [
                          1,
                        ],
                      },
                      "tabIndex": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "viewportSizes": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "visibleRows": Object {
                        "visibleRowsLookup": Object {},
                      },
                    },
                    "subscribeEvent": [Function],
                    "toggleColumnMenu": [Function],
                    "updateColumn": [Function],
                    "updateColumns": [Function],
                    "updateRows": [Function],
                    "updateViewport": [Function],
                    "upsertFilter": [Function],
                    "warnOnce": false,
                    "windowRef": Object {
                      "current": <div
                        class="MuiDataGrid-window"
                        style="top: 56px; overflow-y: auto;"
                      >
                        <div
                          class="MuiDataGrid-dataContainer"
                          style="min-width: 100px; min-height: 52px;"
                        >
                          <div
                            class="MuiDataGrid-viewport"
                            style="min-width: 0; max-width: 0; max-height: 0;"
                          >
                            <div
                              class="MuiDataGrid-renderingZone"
                              style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                            >
                              <div
                                aria-rowindex="2"
                                aria-selected="false"
                                class="Mui-even MuiDataGrid-row"
                                data-id="1"
                                data-rowindex="0"
                                role="row"
                                style="max-height: 52px; min-height: 52px;"
                              >
                                <div
                                  aria-colindex="1"
                                  class="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                                  data-colindex="0"
                                  data-field="name"
                                  data-mode="view"
                                  data-rowindex="0"
                                  data-rowselected="false"
                                  data-value="foo"
                                  role="cell"
                                  style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                  tabindex="-1"
                                >
                                  foo
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                  },
                }
              }
              props={
                Object {
                  "apiRef": undefined,
                  "checkboxSelectionVisibleOnly": false,
                  "columnBuffer": 2,
                  "columnTypes": Object {
                    "__default__": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                    "boolean": Object {
                      "align": "center",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "center",
                      "hide": false,
                      "renderCell": [Function],
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "boolean",
                      "width": 100,
                    },
                    "date": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "date",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "dateTime": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "dateTime",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "number": Object {
                      "align": "right",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "=",
                          "value": "=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "!=",
                          "value": "!=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">",
                          "value": ">",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">=",
                          "value": ">=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<",
                          "value": "<",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<=",
                          "value": "<=",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "right",
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "number",
                      "valueFormatter": [Function],
                      "valueParser": [Function],
                      "width": 100,
                    },
                    "singleSelect": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "singleSelect",
                      "width": 100,
                    },
                    "string": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                  },
                  "columns": Array [
                    Object {
                      "field": "name",
                      "headerName": "Name",
                    },
                  ],
                  "density": "standard",
                  "disableColumnReorder": true,
                  "disableColumnResize": true,
                  "disableMultipleColumnsFiltering": true,
                  "disableMultipleColumnsSorting": true,
                  "disableMultipleSelection": true,
                  "filterMode": "client",
                  "getRowId": undefined,
                  "headerHeight": 56,
                  "isRtl": false,
                  "licenseStatus": "Valid",
                  "localeText": Object {
                    "MuiTablePagination": Object {
                      "backIconButtonText": "Página anterior",
                      "labelDisplayedRows": [Function],
                      "labelRowsPerPage": "Linhas por página:",
                      "nextIconButtonText": "Próxima página",
                    },
                    "booleanCellFalseLabel": "não",
                    "booleanCellTrueLabel": "sim",
                    "checkboxSelectionHeaderName": "Seleção",
                    "columnHeaderFiltersLabel": "Exibir Filtros",
                    "columnHeaderFiltersTooltipActive": [Function],
                    "columnHeaderSortIconLabel": "Ordenar",
                    "columnMenuFilter": "Filtrar",
                    "columnMenuHideColumn": "Ocultar",
                    "columnMenuLabel": "Menu",
                    "columnMenuShowColumns": "Exibir colunas",
                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                    "columnMenuUnsort": "Desfazer ordenação",
                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                    "columnsPanelHideAllButton": "Ocultar todas",
                    "columnsPanelShowAllButton": "Mostrar todas",
                    "columnsPanelTextFieldLabel": "Localizar coluna",
                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                    "filterOperatorAfter": "após",
                    "filterOperatorBefore": "antes de",
                    "filterOperatorContains": "contém",
                    "filterOperatorEndsWith": "termina com",
                    "filterOperatorEquals": "é igual a",
                    "filterOperatorIs": "é",
                    "filterOperatorNot": "não é",
                    "filterOperatorOnOrAfter": "em ou após",
                    "filterOperatorOnOrBefore": "em ou antes de",
                    "filterOperatorStartsWith": "começa com",
                    "filterPanelAddFilter": "Adicionar filtro",
                    "filterPanelColumns": "Colunas",
                    "filterPanelDeleteIconLabel": "Excluir",
                    "filterPanelInputLabel": "Valor",
                    "filterPanelInputPlaceholder": "Filtrar valor",
                    "filterPanelOperatorAnd": "E",
                    "filterPanelOperatorOr": "Ou",
                    "filterPanelOperators": "Operadores",
                    "footerRowSelected": [Function],
                    "footerTotalRows": "Total de linhas:",
                    "footerTotalVisibleRows": [Function],
                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                    "noRowsLabel": "Nenhuma linha",
                    "toolbarColumns": "Colunas",
                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                    "toolbarDensity": "Densidade",
                    "toolbarDensityComfortable": "Confortável",
                    "toolbarDensityCompact": "Compacto",
                    "toolbarDensityLabel": "Densidade",
                    "toolbarDensityStandard": "Padrão",
                    "toolbarExport": "Exportar",
                    "toolbarExportCSV": "Baixar como CSV",
                    "toolbarExportLabel": "Exportar",
                    "toolbarFilters": "Filtros",
                    "toolbarFiltersLabel": "Exibir filtros",
                    "toolbarFiltersTooltipActive": [Function],
                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                    "toolbarFiltersTooltipShow": "Exibir filtros",
                  },
                  "logLevel": "warn",
                  "logger": BufferedConsole {
                    "Console": [Function],
                    "_buffer": Array [],
                    "_counters": Object {},
                    "_groupDepth": 0,
                    "_timers": Object {},
                    "assert": [Function],
                    "clear": [Function],
                    "count": [Function],
                    "countReset": [Function],
                    "debug": [Function],
                    "dir": [Function],
                    "dirxml": [Function],
                    "error": [Function],
                    "group": [Function],
                    "groupCollapsed": [Function],
                    "groupEnd": [Function],
                    "info": [Function],
                    "log": [Function],
                    "table": [Function],
                    "time": [Function],
                    "timeEnd": [Function],
                    "timeLog": [Function],
                    "trace": [Function],
                    "warn": [Function],
                  },
                  "onRowsScrollEnd": undefined,
                  "pageSize": 100,
                  "pagination": true,
                  "paginationMode": "client",
                  "rowHeight": 52,
                  "rows": Array [
                    Object {
                      "id": 1,
                      "name": "foo",
                    },
                  ],
                  "rowsPerPageOptions": Array [
                    25,
                    50,
                    100,
                  ],
                  "scrollEndThreshold": 80,
                  "sortingMode": "client",
                  "sortingOrder": Array [
                    "asc",
                    "desc",
                    null,
                  ],
                  "theme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(17, 82, 147)",
                        "light": "rgb(71, 145, 219)",
                        "main": "#1976d2",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {
                      "MuiDataGrid": Object {
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                      },
                    },
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  },
                }
              }
            >
              <ForwardRef>
                <NoSsr>
                  <div
                    aria-colcount={1}
                    aria-multiselectable={false}
                    aria-rowcount={1}
                    className="MuiDataGrid-root MuiDataGrid-root"
                    role="grid"
                  >
                    <vs>
                      <Cs
                        api={
                          Object {
                            "current": Ti {
                              "applyFilter": [Function],
                              "applyFilterLinkOperator": [Function],
                              "applyFilters": [Function],
                              "applySorting": [Function],
                              "columnHeadersContainerElementRef": Object {
                                "current": <div
                                  class="MuiDataGrid-columnsContainer"
                                  style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                >
                                  <div
                                    aria-rowindex="1"
                                    class="MuiDataGrid-columnHeaderWrapper scroll"
                                    role="row"
                                    style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                                      data-field="name"
                                      role="columnheader"
                                      style="width: 100px; min-width: 100px; max-width: 100px;"
                                      tabindex="0"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderDraggableContainer"
                                        draggable="false"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitleContainer"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderTitle"
                                            title=""
                                          >
                                            Name
                                          </div>
                                          <div
                                            class="MuiDataGrid-iconButtonContainer"
                                          >
                                            <button
                                              aria-label="Ordenar"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                              tabindex="-1"
                                              title="Ordenar"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                  />
                                                </svg>
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </button>
                                          </div>
                                        </div>
                                        <div
                                          class="MuiDataGrid-menuIcon"
                                        >
                                          <button
                                            aria-controls="mui-100000"
                                            aria-haspopup="true"
                                            aria-label="Menu"
                                            class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                            id="mui-100000"
                                            tabindex="-1"
                                            title="Menu"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-columnSeparator"
                                        style="min-height: 56px; opacity: 1;"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M11 19V5h2v14z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "columnHeadersElementRef": Object {
                                "current": <div
                                  aria-rowindex="1"
                                  class="MuiDataGrid-columnHeaderWrapper scroll"
                                  role="row"
                                  style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                >
                                  <div
                                    aria-colindex="1"
                                    class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                                    data-field="name"
                                    role="columnheader"
                                    style="width: 100px; min-width: 100px; max-width: 100px;"
                                    tabindex="0"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderDraggableContainer"
                                      draggable="false"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderTitleContainer"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitle"
                                          title=""
                                        >
                                          Name
                                        </div>
                                        <div
                                          class="MuiDataGrid-iconButtonContainer"
                                        >
                                          <button
                                            aria-label="Ordenar"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                            tabindex="-1"
                                            title="Ordenar"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-menuIcon"
                                      >
                                        <button
                                          aria-controls="mui-100000"
                                          aria-haspopup="true"
                                          aria-label="Menu"
                                          class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                          id="mui-100000"
                                          tabindex="-1"
                                          title="Menu"
                                          type="button"
                                        >
                                          <span
                                            class="MuiIconButton-label"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                    <div
                                      class="MuiDataGrid-columnSeparator"
                                      style="min-height: 56px; opacity: 1;"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11 19V5h2v14z"
                                        />
                                      </svg>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "commitCellChange": [Function],
                              "components": Object {
                                "BooleanCellFalseIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "BooleanCellTrueIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Checkbox": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Naked": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "checked": [Function],
                                      "checkedIcon": [Function],
                                      "classes": [Function],
                                      "color": [Function],
                                      "disableRipple": [Function],
                                      "disabled": [Function],
                                      "icon": [Function],
                                      "id": [Function],
                                      "indeterminate": [Function],
                                      "indeterminateIcon": [Function],
                                      "inputProps": [Function],
                                      "inputRef": [Function],
                                      "onChange": [Function],
                                      "required": [Function],
                                      "size": [Function],
                                      "value": [Function],
                                    },
                                    "render": [Function],
                                  },
                                  "displayName": "WithStyles(ForwardRef(Checkbox))",
                                  "options": Object {
                                    "defaultTheme": Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "activatedOpacity": 0.12,
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "disabledOpacity": 0.38,
                                          "focus": "rgba(0, 0, 0, 0.12)",
                                          "focusOpacity": 0.12,
                                          "hover": "rgba(0, 0, 0, 0.04)",
                                          "hoverOpacity": 0.04,
                                          "selected": "rgba(0, 0, 0, 0.08)",
                                          "selectedOpacity": 0.08,
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "info": Object {
                                          "contrastText": "#fff",
                                          "dark": "#1976d2",
                                          "light": "#64b5f6",
                                          "main": "#2196f3",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                        "warning": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#f57c00",
                                          "light": "#ffb74d",
                                          "main": "#ff9800",
                                        },
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                    },
                                    "name": "MuiCheckbox",
                                  },
                                  "propTypes": Object {
                                    "classes": [Function],
                                    "innerRef": [Function],
                                  },
                                  "render": [Function],
                                  "useStyles": [Function],
                                },
                                "ColumnFilteredIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnMenu": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ColumnMenuIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnResizeIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSelectorIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedAscendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedDescendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnUnsortedIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": [Function],
                                },
                                "ColumnsPanel": [Function],
                                "DensityComfortableIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityCompactIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityStandardIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ErrorOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ExportIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "FilterPanel": [Function],
                                "Footer": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Header": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "LoadingOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoResultsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoRowsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "OpenFilterButtonIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Pagination": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Panel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "PreferencesPanel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Toolbar": undefined,
                              },
                              "componentsProps": undefined,
                              "copySelectedRowsToClipboard": [Function],
                              "deleteFilter": [Function],
                              "events": Object {
                                "cellClick": Array [
                                  [Function],
                                ],
                                "cellDoubleClick": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellDragEnd": Array [
                                  [Function],
                                ],
                                "cellDragEnter": Array [
                                  [Function],
                                ],
                                "cellDragOver": Array [
                                  [Function],
                                ],
                                "cellEditEnter": Array [
                                  [Function],
                                ],
                                "cellEditExit": Array [
                                  [Function],
                                ],
                                "cellEditPropsChange": Array [
                                  [Function],
                                ],
                                "cellEditPropsChangeCommitted": Array [
                                  [Function],
                                ],
                                "cellFocusOut": Array [
                                  [Function],
                                ],
                                "cellKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellModeChange": Array [
                                  [Function],
                                ],
                                "cellMouseDown": Array [
                                  [Function],
                                ],
                                "cellMouseUp": Array [
                                  [Function],
                                ],
                                "cellNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnHeaderBlur": Array [
                                  [Function],
                                ],
                                "columnHeaderClick": Array [
                                  [Function],
                                ],
                                "columnHeaderDragEnd": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderDragEnter": Array [
                                  [Function],
                                ],
                                "columnHeaderDragOver": Array [
                                  [Function],
                                ],
                                "columnHeaderDragStart": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderFocus": Array [
                                  [Function],
                                ],
                                "columnHeaderKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnResizeStart": Array [
                                  [Function],
                                ],
                                "columnResizeStop": Array [
                                  [Function],
                                ],
                                "columnSeparatorMouseDown": Array [
                                  [Function],
                                ],
                                "columnsChange": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "componentError": Array [
                                  [Function],
                                ],
                                "debouncedResize": Array [
                                  [Function],
                                  [Function],
                                ],
                                "keydown": Array [
                                  [Function],
                                ],
                                "resize": Array [
                                  [Function],
                                ],
                                "rowClick": Array [
                                  [Function],
                                ],
                                "rowsClear": Array [
                                  [Function],
                                ],
                                "rowsScroll": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "rowsSet": Array [
                                  [Function],
                                  [Function],
                                ],
                                "rowsUpdate": Array [
                                  [Function],
                                  [Function],
                                ],
                                "unmount": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "exportDataAsCsv": [Function],
                              "footerRef": Object {
                                "current": <div>
                                  <div
                                    class="MuiDataGrid-footerContainer"
                                  >
                                    <div />
                                    <div
                                      class="MuiTablePagination-root"
                                    >
                                      <div
                                        class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          class="MuiTablePagination-spacer"
                                        />
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          id="mui-100000"
                                        >
                                          Linhas por página:
                                        </p>
                                        <div
                                          class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                        >
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-100000 mui-100000"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-100000"
                                            role="button"
                                            tabindex="0"
                                          >
                                            100
                                          </div>
                                          <input
                                            aria-hidden="true"
                                            class="MuiSelect-nativeInput"
                                            tabindex="-1"
                                            value="100"
                                          />
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </div>
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                        >
                                          1-1 de 1
                                        </p>
                                        <div
                                          class="MuiTablePagination-actions"
                                        >
                                          <button
                                            aria-label="Página anterior"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Página anterior"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                          <button
                                            aria-label="Próxima página"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Próxima página"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "forceUpdate": [Function],
                              "getAllColumns": [Function],
                              "getAllRowIds": [Function],
                              "getCellElement": [Function],
                              "getCellMode": [Function],
                              "getCellParams": [Function],
                              "getCellValue": [Function],
                              "getColumn": [Function],
                              "getColumnHeaderElement": [Function],
                              "getColumnHeaderParams": [Function],
                              "getColumnIndex": [Function],
                              "getColumnPosition": [Function],
                              "getColumnsMeta": [Function],
                              "getContainerPropsState": [Function],
                              "getDataAsCsv": [Function],
                              "getEditCellProps": [Function],
                              "getEditCellPropsParams": [Function],
                              "getEditRowsModel": [Function],
                              "getLocaleText": [Function],
                              "getRenderContextState": [Function],
                              "getRow": [Function],
                              "getRowElement": [Function],
                              "getRowIdFromRowIndex": [Function],
                              "getRowIndex": [Function],
                              "getRowModels": [Function],
                              "getRowParams": [Function],
                              "getRowsCount": [Function],
                              "getScrollPosition": [Function],
                              "getSelectedRows": [Function],
                              "getSortModel": [Function],
                              "getSortedRowIds": [Function],
                              "getSortedRows": [Function],
                              "getState": [Function],
                              "getVisibleColumns": [Function],
                              "getVisibleRowModels": [Function],
                              "headerRef": Object {
                                "current": <div>
                                  <div />
                                </div>,
                              },
                              "hideColumnMenu": [Function],
                              "hideFilterPanel": [Function],
                              "hidePreferences": [Function],
                              "isCellEditable": [Function],
                              "isColumnVisibleInWindow": [Function],
                              "maxListeners": 10,
                              "publishEvent": [Function],
                              "renderingZoneRef": Object {
                                "current": <div
                                  class="MuiDataGrid-renderingZone"
                                  style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                >
                                  <div
                                    aria-rowindex="2"
                                    aria-selected="false"
                                    class="Mui-even MuiDataGrid-row"
                                    data-id="1"
                                    data-rowindex="0"
                                    role="row"
                                    style="max-height: 52px; min-height: 52px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                                      data-colindex="0"
                                      data-field="name"
                                      data-mode="view"
                                      data-rowindex="0"
                                      data-rowselected="false"
                                      data-value="foo"
                                      role="cell"
                                      style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                      tabindex="-1"
                                    >
                                      foo
                                    </div>
                                  </div>
                                </div>,
                              },
                              "resize": [Function],
                              "rootElementRef": Object {
                                "current": <div
                                  aria-colcount="1"
                                  aria-multiselectable="false"
                                  aria-rowcount="1"
                                  class="MuiDataGrid-root MuiDataGrid-root"
                                  role="grid"
                                >
                                  <div>
                                    <div />
                                  </div>
                                  <div
                                    class="MuiDataGrid-main"
                                  >
                                    <div
                                      class="MuiDataGrid-columnsContainer"
                                      style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                    >
                                      <div
                                        aria-rowindex="1"
                                        class="MuiDataGrid-columnHeaderWrapper scroll"
                                        role="row"
                                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                                          data-field="name"
                                          role="columnheader"
                                          style="width: 100px; min-width: 100px; max-width: 100px;"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderDraggableContainer"
                                            draggable="false"
                                          >
                                            <div
                                              class="MuiDataGrid-columnHeaderTitleContainer"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderTitle"
                                                title=""
                                              >
                                                Name
                                              </div>
                                              <div
                                                class="MuiDataGrid-iconButtonContainer"
                                              >
                                                <button
                                                  aria-label="Ordenar"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                  tabindex="-1"
                                                  title="Ordenar"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                            <div
                                              class="MuiDataGrid-menuIcon"
                                            >
                                              <button
                                                aria-controls="mui-100000"
                                                aria-haspopup="true"
                                                aria-label="Menu"
                                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                id="mui-100000"
                                                tabindex="-1"
                                                title="Menu"
                                                type="button"
                                              >
                                                <span
                                                  class="MuiIconButton-label"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                    />
                                                  </svg>
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </button>
                                            </div>
                                          </div>
                                          <div
                                            class="MuiDataGrid-columnSeparator"
                                            style="min-height: 56px; opacity: 1;"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M11 19V5h2v14z"
                                              />
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      style="overflow: visible; height: 0px; width: 0px;"
                                    >
                                      <div
                                        class="MuiDataGrid-windowContainer"
                                        style="width: 0px; height: 0px;"
                                      >
                                        <div
                                          class="MuiDataGrid-window"
                                          style="top: 56px; overflow-y: auto;"
                                        >
                                          <div
                                            class="MuiDataGrid-dataContainer"
                                            style="min-width: 100px; min-height: 52px;"
                                          >
                                            <div
                                              class="MuiDataGrid-viewport"
                                              style="min-width: 0; max-width: 0; max-height: 0;"
                                            >
                                              <div
                                                class="MuiDataGrid-renderingZone"
                                                style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                              >
                                                <div
                                                  aria-rowindex="2"
                                                  aria-selected="false"
                                                  class="Mui-even MuiDataGrid-row"
                                                  data-id="1"
                                                  data-rowindex="0"
                                                  role="row"
                                                  style="max-height: 52px; min-height: 52px;"
                                                >
                                                  <div
                                                    aria-colindex="1"
                                                    class="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                                                    data-colindex="0"
                                                    data-field="name"
                                                    data-mode="view"
                                                    data-rowindex="0"
                                                    data-rowselected="false"
                                                    data-value="foo"
                                                    role="cell"
                                                    style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                                    tabindex="-1"
                                                  >
                                                    foo
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="Mui-resizeTriggers"
                                    >
                                      <div
                                        class="expand-trigger"
                                      >
                                        <div
                                          style="width: 1px; height: 1px;"
                                        />
                                      </div>
                                      <div
                                        class="contract-trigger"
                                      />
                                    </div>
                                  </div>
                                  <div>
                                    <div
                                      class="MuiDataGrid-footerContainer"
                                    >
                                      <div />
                                      <div
                                        class="MuiTablePagination-root"
                                      >
                                        <div
                                          class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                        >
                                          <div
                                            class="MuiTablePagination-spacer"
                                          />
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                            id="mui-100000"
                                          >
                                            Linhas por página:
                                          </p>
                                          <div
                                            class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                          >
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-100000 mui-100000"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-100000"
                                              role="button"
                                              tabindex="0"
                                            >
                                              100
                                            </div>
                                            <input
                                              aria-hidden="true"
                                              class="MuiSelect-nativeInput"
                                              tabindex="-1"
                                              value="100"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </div>
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          >
                                            1-1 de 1
                                          </p>
                                          <div
                                            class="MuiTablePagination-actions"
                                          >
                                            <button
                                              aria-label="Página anterior"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Página anterior"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                            <button
                                              aria-label="Próxima página"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Próxima página"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "scroll": [Function],
                              "scrollToIndexes": [Function],
                              "selectRow": [Function],
                              "selectRows": [Function],
                              "setCellFocus": [Function],
                              "setCellMode": [Function],
                              "setCellValue": [Function],
                              "setColumnHeaderFocus": [Function],
                              "setColumnIndex": [Function],
                              "setColumnVisibility": [Function],
                              "setColumnWidth": [Function],
                              "setDensity": [Function],
                              "setEditCellProps": [Function],
                              "setEditRowsModel": [Function],
                              "setFilterModel": [Function],
                              "setPage": [Function],
                              "setPageSize": [Function],
                              "setRows": [Function],
                              "setSelectionModel": [Function],
                              "setSortModel": [Function],
                              "setState": [Function],
                              "showColumnMenu": [Function],
                              "showError": [Function],
                              "showFilterPanel": [Function],
                              "showPreferences": [Function],
                              "sortColumn": [Function],
                              "state": Object {
                                "columnMenu": Object {
                                  "open": false,
                                },
                                "columnReorder": Object {
                                  "dragCol": "",
                                },
                                "columnResize": Object {
                                  "resizingColumnField": "",
                                },
                                "columns": Object {
                                  "all": Array [
                                    "name",
                                  ],
                                  "lookup": Object {
                                    "name": Object {
                                      "align": "left",
                                      "field": "name",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerName": "Name",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                  },
                                },
                                "containerSizes": Object {
                                  "dataContainerSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "isVirtualized": false,
                                  "lastPage": 1,
                                  "renderingZone": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "renderingZonePageSize": 1,
                                  "renderingZoneScrollHeight": 52,
                                  "totalSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "viewportPageSize": 1,
                                  "virtualRowsCount": 1,
                                  "windowSizes": Object {
                                    "height": 0,
                                    "width": 0,
                                  },
                                },
                                "density": Object {
                                  "headerHeight": 56,
                                  "rowHeight": 52,
                                  "value": "standard",
                                },
                                "editRows": Object {},
                                "error": undefined,
                                "filter": Object {
                                  "items": Array [],
                                  "linkOperator": "and",
                                },
                                "focus": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "isScrolling": false,
                                "options": Object {
                                  "checkboxSelectionVisibleOnly": false,
                                  "classes": Object {
                                    "cell": "MuiDataGrid-cell",
                                    "columnHeader": "MuiDataGrid-columnHeader",
                                    "root": "MuiDataGrid-root",
                                    "row": "MuiDataGrid-row",
                                  },
                                  "columnBuffer": 2,
                                  "columnTypes": Object {
                                    "__default__": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                    "boolean": Object {
                                      "align": "center",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "center",
                                      "hide": false,
                                      "renderCell": [Function],
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "boolean",
                                      "width": 100,
                                    },
                                    "date": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "date",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "dateTime": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "dateTime",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "number": Object {
                                      "align": "right",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                    "singleSelect": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "singleSelect",
                                      "width": 100,
                                    },
                                    "string": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                  },
                                  "columns": Array [
                                    Object {
                                      "field": "name",
                                      "headerName": "Name",
                                    },
                                  ],
                                  "density": "standard",
                                  "disableColumnReorder": true,
                                  "disableColumnResize": true,
                                  "disableMultipleColumnsFiltering": true,
                                  "disableMultipleColumnsSorting": true,
                                  "disableMultipleSelection": true,
                                  "filterMode": "client",
                                  "headerHeight": 56,
                                  "isRtl": false,
                                  "licenseStatus": "Valid",
                                  "localeText": Object {
                                    "MuiTablePagination": Object {
                                      "backIconButtonText": "Página anterior",
                                      "labelDisplayedRows": [Function],
                                      "labelRowsPerPage": "Linhas por página:",
                                      "nextIconButtonText": "Próxima página",
                                    },
                                    "booleanCellFalseLabel": "não",
                                    "booleanCellTrueLabel": "sim",
                                    "checkboxSelectionHeaderName": "Seleção",
                                    "columnHeaderFiltersLabel": "Exibir Filtros",
                                    "columnHeaderFiltersTooltipActive": [Function],
                                    "columnHeaderSortIconLabel": "Ordenar",
                                    "columnMenuFilter": "Filtrar",
                                    "columnMenuHideColumn": "Ocultar",
                                    "columnMenuLabel": "Menu",
                                    "columnMenuShowColumns": "Exibir colunas",
                                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                                    "columnMenuUnsort": "Desfazer ordenação",
                                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                                    "columnsPanelHideAllButton": "Ocultar todas",
                                    "columnsPanelShowAllButton": "Mostrar todas",
                                    "columnsPanelTextFieldLabel": "Localizar coluna",
                                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                    "filterOperatorAfter": "após",
                                    "filterOperatorBefore": "antes de",
                                    "filterOperatorContains": "contém",
                                    "filterOperatorEndsWith": "termina com",
                                    "filterOperatorEquals": "é igual a",
                                    "filterOperatorIs": "é",
                                    "filterOperatorNot": "não é",
                                    "filterOperatorOnOrAfter": "em ou após",
                                    "filterOperatorOnOrBefore": "em ou antes de",
                                    "filterOperatorStartsWith": "começa com",
                                    "filterPanelAddFilter": "Adicionar filtro",
                                    "filterPanelColumns": "Colunas",
                                    "filterPanelDeleteIconLabel": "Excluir",
                                    "filterPanelInputLabel": "Valor",
                                    "filterPanelInputPlaceholder": "Filtrar valor",
                                    "filterPanelOperatorAnd": "E",
                                    "filterPanelOperatorOr": "Ou",
                                    "filterPanelOperators": "Operadores",
                                    "filterValueAny": "any",
                                    "filterValueFalse": "false",
                                    "filterValueTrue": "true",
                                    "footerRowSelected": [Function],
                                    "footerTotalRows": "Total de linhas:",
                                    "footerTotalVisibleRows": [Function],
                                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                    "noRowsLabel": "Nenhuma linha",
                                    "toolbarColumns": "Colunas",
                                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                                    "toolbarDensity": "Densidade",
                                    "toolbarDensityComfortable": "Confortável",
                                    "toolbarDensityCompact": "Compacto",
                                    "toolbarDensityLabel": "Densidade",
                                    "toolbarDensityStandard": "Padrão",
                                    "toolbarExport": "Exportar",
                                    "toolbarExportCSV": "Baixar como CSV",
                                    "toolbarExportLabel": "Exportar",
                                    "toolbarFilters": "Filtros",
                                    "toolbarFiltersLabel": "Exibir filtros",
                                    "toolbarFiltersTooltipActive": [Function],
                                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                                    "toolbarFiltersTooltipShow": "Exibir filtros",
                                  },
                                  "logLevel": "warn",
                                  "logger": BufferedConsole {
                                    "Console": [Function],
                                    "_buffer": Array [],
                                    "_counters": Object {},
                                    "_groupDepth": 0,
                                    "_timers": Object {},
                                    "assert": [Function],
                                    "clear": [Function],
                                    "count": [Function],
                                    "countReset": [Function],
                                    "debug": [Function],
                                    "dir": [Function],
                                    "dirxml": [Function],
                                    "error": [Function],
                                    "group": [Function],
                                    "groupCollapsed": [Function],
                                    "groupEnd": [Function],
                                    "info": [Function],
                                    "log": [Function],
                                    "table": [Function],
                                    "time": [Function],
                                    "timeEnd": [Function],
                                    "timeLog": [Function],
                                    "trace": [Function],
                                    "warn": [Function],
                                  },
                                  "pageSize": 100,
                                  "pagination": true,
                                  "paginationMode": "client",
                                  "rowHeight": 52,
                                  "rows": Array [
                                    Object {
                                      "id": 1,
                                      "name": "foo",
                                    },
                                  ],
                                  "rowsPerPageOptions": Array [
                                    25,
                                    50,
                                    100,
                                  ],
                                  "scrollEndThreshold": 80,
                                  "scrollbarSize": 0,
                                  "sortingMode": "client",
                                  "sortingOrder": Array [
                                    "asc",
                                    "desc",
                                    null,
                                  ],
                                  "theme": Object {
                                    "breakpoints": Object {
                                      "between": [Function],
                                      "down": [Function],
                                      "keys": Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ],
                                      "only": [Function],
                                      "up": [Function],
                                      "values": Object {
                                        "lg": 1280,
                                        "md": 960,
                                        "sm": 600,
                                        "xl": 1920,
                                        "xs": 0,
                                      },
                                      "width": [Function],
                                    },
                                    "direction": "ltr",
                                    "mixins": Object {
                                      "gutters": [Function],
                                      "toolbar": Object {
                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                          "minHeight": 48,
                                        },
                                        "@media (min-width:600px)": Object {
                                          "minHeight": 64,
                                        },
                                        "minHeight": 56,
                                      },
                                    },
                                    "overrides": Object {},
                                    "palette": Object {
                                      "action": Object {
                                        "activatedOpacity": 0.12,
                                        "active": "rgba(0, 0, 0, 0.54)",
                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                        "disabledOpacity": 0.38,
                                        "focus": "rgba(0, 0, 0, 0.12)",
                                        "focusOpacity": 0.12,
                                        "hover": "rgba(0, 0, 0, 0.04)",
                                        "hoverOpacity": 0.04,
                                        "selected": "rgba(0, 0, 0, 0.08)",
                                        "selectedOpacity": 0.08,
                                      },
                                      "augmentColor": [Function],
                                      "background": Object {
                                        "default": "#fafafa",
                                        "paper": "#fff",
                                      },
                                      "common": Object {
                                        "black": "#000",
                                        "white": "#fff",
                                      },
                                      "contrastThreshold": 3,
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "error": Object {
                                        "contrastText": "#fff",
                                        "dark": "#d32f2f",
                                        "light": "#e57373",
                                        "main": "#f44336",
                                      },
                                      "getContrastText": [Function],
                                      "grey": Object {
                                        "100": "#f5f5f5",
                                        "200": "#eeeeee",
                                        "300": "#e0e0e0",
                                        "400": "#bdbdbd",
                                        "50": "#fafafa",
                                        "500": "#9e9e9e",
                                        "600": "#757575",
                                        "700": "#616161",
                                        "800": "#424242",
                                        "900": "#212121",
                                        "A100": "#d5d5d5",
                                        "A200": "#aaaaaa",
                                        "A400": "#303030",
                                        "A700": "#616161",
                                      },
                                      "info": Object {
                                        "contrastText": "#fff",
                                        "dark": "#1976d2",
                                        "light": "#64b5f6",
                                        "main": "#2196f3",
                                      },
                                      "primary": Object {
                                        "contrastText": "#fff",
                                        "dark": "rgb(17, 82, 147)",
                                        "light": "rgb(71, 145, 219)",
                                        "main": "#1976d2",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#c51162",
                                        "light": "#ff4081",
                                        "main": "#f50057",
                                      },
                                      "success": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#388e3c",
                                        "light": "#81c784",
                                        "main": "#4caf50",
                                      },
                                      "text": Object {
                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                        "hint": "rgba(0, 0, 0, 0.38)",
                                        "primary": "rgba(0, 0, 0, 0.87)",
                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                      },
                                      "tonalOffset": 0.2,
                                      "type": "light",
                                      "warning": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#f57c00",
                                        "light": "#ffb74d",
                                        "main": "#ff9800",
                                      },
                                    },
                                    "props": Object {
                                      "MuiDataGrid": Object {
                                        "localeText": Object {
                                          "MuiTablePagination": Object {
                                            "backIconButtonText": "Página anterior",
                                            "labelDisplayedRows": [Function],
                                            "labelRowsPerPage": "Linhas por página:",
                                            "nextIconButtonText": "Próxima página",
                                          },
                                          "booleanCellFalseLabel": "não",
                                          "booleanCellTrueLabel": "sim",
                                          "checkboxSelectionHeaderName": "Seleção",
                                          "columnHeaderFiltersLabel": "Exibir Filtros",
                                          "columnHeaderFiltersTooltipActive": [Function],
                                          "columnHeaderSortIconLabel": "Ordenar",
                                          "columnMenuFilter": "Filtrar",
                                          "columnMenuHideColumn": "Ocultar",
                                          "columnMenuLabel": "Menu",
                                          "columnMenuShowColumns": "Exibir colunas",
                                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                                          "columnMenuUnsort": "Desfazer ordenação",
                                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                                          "columnsPanelHideAllButton": "Ocultar todas",
                                          "columnsPanelShowAllButton": "Mostrar todas",
                                          "columnsPanelTextFieldLabel": "Localizar coluna",
                                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                          "filterOperatorAfter": "após",
                                          "filterOperatorBefore": "antes de",
                                          "filterOperatorContains": "contém",
                                          "filterOperatorEndsWith": "termina com",
                                          "filterOperatorEquals": "é igual a",
                                          "filterOperatorIs": "é",
                                          "filterOperatorNot": "não é",
                                          "filterOperatorOnOrAfter": "em ou após",
                                          "filterOperatorOnOrBefore": "em ou antes de",
                                          "filterOperatorStartsWith": "começa com",
                                          "filterPanelAddFilter": "Adicionar filtro",
                                          "filterPanelColumns": "Colunas",
                                          "filterPanelDeleteIconLabel": "Excluir",
                                          "filterPanelInputLabel": "Valor",
                                          "filterPanelInputPlaceholder": "Filtrar valor",
                                          "filterPanelOperatorAnd": "E",
                                          "filterPanelOperatorOr": "Ou",
                                          "filterPanelOperators": "Operadores",
                                          "footerRowSelected": [Function],
                                          "footerTotalRows": "Total de linhas:",
                                          "footerTotalVisibleRows": [Function],
                                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                          "noRowsLabel": "Nenhuma linha",
                                          "toolbarColumns": "Colunas",
                                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                                          "toolbarDensity": "Densidade",
                                          "toolbarDensityComfortable": "Confortável",
                                          "toolbarDensityCompact": "Compacto",
                                          "toolbarDensityLabel": "Densidade",
                                          "toolbarDensityStandard": "Padrão",
                                          "toolbarExport": "Exportar",
                                          "toolbarExportCSV": "Baixar como CSV",
                                          "toolbarExportLabel": "Exportar",
                                          "toolbarFilters": "Filtros",
                                          "toolbarFiltersLabel": "Exibir filtros",
                                          "toolbarFiltersTooltipActive": [Function],
                                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                                          "toolbarFiltersTooltipShow": "Exibir filtros",
                                        },
                                      },
                                    },
                                    "shadows": Array [
                                      "none",
                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                    ],
                                    "shape": Object {
                                      "borderRadius": 4,
                                    },
                                    "spacing": [Function],
                                    "transitions": Object {
                                      "create": [Function],
                                      "duration": Object {
                                        "complex": 375,
                                        "enteringScreen": 225,
                                        "leavingScreen": 195,
                                        "short": 250,
                                        "shorter": 200,
                                        "shortest": 150,
                                        "standard": 300,
                                      },
                                      "easing": Object {
                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                      },
                                      "getAutoHeightDuration": [Function],
                                    },
                                    "typography": Object {
                                      "body1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.5,
                                      },
                                      "body2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.01071em",
                                        "lineHeight": 1.43,
                                      },
                                      "button": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.02857em",
                                        "lineHeight": 1.75,
                                        "textTransform": "uppercase",
                                      },
                                      "caption": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.03333em",
                                        "lineHeight": 1.66,
                                      },
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": 14,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.01562em",
                                        "lineHeight": 1.167,
                                      },
                                      "h2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.00833em",
                                        "lineHeight": 1.2,
                                      },
                                      "h3": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.167,
                                      },
                                      "h4": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00735em",
                                        "lineHeight": 1.235,
                                      },
                                      "h5": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.334,
                                      },
                                      "h6": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.25rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.0075em",
                                        "lineHeight": 1.6,
                                      },
                                      "htmlFontSize": 16,
                                      "overline": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.08333em",
                                        "lineHeight": 2.66,
                                        "textTransform": "uppercase",
                                      },
                                      "pxToRem": [Function],
                                      "round": [Function],
                                      "subtitle1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.75,
                                      },
                                      "subtitle2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.00714em",
                                        "lineHeight": 1.57,
                                      },
                                    },
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "drawer": 1200,
                                      "mobileStepper": 1000,
                                      "modal": 1300,
                                      "snackbar": 1400,
                                      "speedDial": 1050,
                                      "tooltip": 1500,
                                    },
                                    Symbol(mui.nested): false,
                                  },
                                },
                                "pagination": Object {
                                  "page": 0,
                                  "pageCount": 1,
                                  "pageSize": 100,
                                  "paginationMode": "client",
                                  "rowCount": 1,
                                },
                                "preferencePanel": Object {
                                  "open": false,
                                },
                                "rendering": Object {
                                  "realScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "renderContext": Object {
                                    "firstColIdx": 0,
                                    "firstRowIdx": 0,
                                    "lastColIdx": 0,
                                    "lastRowIdx": 1,
                                    "leftEmptyWidth": 0,
                                    "page": 0,
                                    "pageSize": 100,
                                    "paginationCurrentPage": 0,
                                    "rightEmptyWidth": 0,
                                  },
                                  "renderedSizes": Object {
                                    "dataContainerSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "isVirtualized": false,
                                    "lastPage": 1,
                                    "renderingZone": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "renderingZonePageSize": 1,
                                    "renderingZoneScrollHeight": 52,
                                    "totalSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "viewportPageSize": 1,
                                    "virtualRowsCount": 1,
                                    "windowSizes": Object {
                                      "height": 0,
                                      "width": 0,
                                    },
                                  },
                                  "renderingZoneScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "virtualPage": 0,
                                  "virtualRowsCount": 0,
                                },
                                "rows": Object {
                                  "allRows": Array [
                                    1,
                                  ],
                                  "idRowsLookup": Object {
                                    "1": Object {
                                      "id": 1,
                                      "name": "foo",
                                    },
                                  },
                                  "totalRowCount": 1,
                                },
                                "scrollBar": Object {
                                  "hasScrollX": true,
                                  "hasScrollY": true,
                                  "scrollBarSize": Object {
                                    "x": 0,
                                    "y": 0,
                                  },
                                },
                                "selection": Object {},
                                "sorting": Object {
                                  "sortModel": Array [],
                                  "sortedRows": Array [
                                    1,
                                  ],
                                },
                                "tabIndex": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "viewportSizes": Object {
                                  "height": 0,
                                  "width": 0,
                                },
                                "visibleRows": Object {
                                  "visibleRowsLookup": Object {},
                                },
                              },
                              "subscribeEvent": [Function],
                              "toggleColumnMenu": [Function],
                              "updateColumn": [Function],
                              "updateColumns": [Function],
                              "updateRows": [Function],
                              "updateViewport": [Function],
                              "upsertFilter": [Function],
                              "warnOnce": false,
                              "windowRef": Object {
                                "current": <div
                                  class="MuiDataGrid-window"
                                  style="top: 56px; overflow-y: auto;"
                                >
                                  <div
                                    class="MuiDataGrid-dataContainer"
                                    style="min-width: 100px; min-height: 52px;"
                                  >
                                    <div
                                      class="MuiDataGrid-viewport"
                                      style="min-width: 0; max-width: 0; max-height: 0;"
                                    >
                                      <div
                                        class="MuiDataGrid-renderingZone"
                                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                      >
                                        <div
                                          aria-rowindex="2"
                                          aria-selected="false"
                                          class="Mui-even MuiDataGrid-row"
                                          data-id="1"
                                          data-rowindex="0"
                                          role="row"
                                          style="max-height: 52px; min-height: 52px;"
                                        >
                                          <div
                                            aria-colindex="1"
                                            class="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                                            data-colindex="0"
                                            data-field="name"
                                            data-mode="view"
                                            data-rowindex="0"
                                            data-rowselected="false"
                                            data-value="foo"
                                            role="cell"
                                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                            tabindex="-1"
                                          >
                                            foo
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                            },
                          }
                        }
                        hasError={false}
                        logger={
                          Object {
                            "debug": [Function],
                            "error": [Function],
                            "info": [Function],
                            "warn": [Function],
                          }
                        }
                        render={[Function]}
                      >
                        <Es>
                          <div>
                            <ForwardRef>
                              <div>
                                <ForwardRef>
                                  <ForwardRef
                                    open={false}
                                  >
                                    <ForwardRef(Popper)
                                      anchorEl={
                                        <div
                                          class="MuiDataGrid-columnsContainer"
                                          style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                        >
                                          <div
                                            aria-rowindex="1"
                                            class="MuiDataGrid-columnHeaderWrapper scroll"
                                            role="row"
                                            style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                          >
                                            <div
                                              aria-colindex="1"
                                              class="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                                              data-field="name"
                                              role="columnheader"
                                              style="width: 100px; min-width: 100px; max-width: 100px;"
                                              tabindex="0"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderDraggableContainer"
                                                draggable="false"
                                              >
                                                <div
                                                  class="MuiDataGrid-columnHeaderTitleContainer"
                                                >
                                                  <div
                                                    class="MuiDataGrid-columnHeaderTitle"
                                                    title=""
                                                  >
                                                    Name
                                                  </div>
                                                  <div
                                                    class="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <button
                                                      aria-label="Ordenar"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                      tabindex="-1"
                                                      title="Ordenar"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiDataGrid-menuIcon"
                                                >
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDataGrid-columnSeparator"
                                                style="min-height: 56px; opacity: 1;"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M11 19V5h2v14z"
                                                  />
                                                </svg>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      className="MuiGridPanel-root"
                                      modifiers={
                                        Object {
                                          "flip": Object {
                                            "enabled": false,
                                          },
                                        }
                                      }
                                      open={false}
                                      placement="bottom-start"
                                    />
                                  </ForwardRef>
                                </ForwardRef>
                              </div>
                            </ForwardRef>
                          </div>
                        </Es>
                        <Ss>
                          <hs>
                            <div
                              className="MuiDataGrid-main"
                            >
                              <ws />
                              <ni
                                licenseStatus="Valid"
                              />
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-columnsContainer"
                                  style={
                                    Object {
                                      "lineHeight": "56px",
                                      "maxHeight": 56,
                                      "minHeight": 56,
                                    }
                                  }
                                >
                                  <ForwardRef>
                                    <Memo()
                                      scrollDirection="left"
                                    />
                                    <div
                                      aria-rowindex={1}
                                      className="MuiDataGrid-columnHeaderWrapper scroll"
                                      role="row"
                                      style={
                                        Object {
                                          "minWidth": 100,
                                        }
                                      }
                                    >
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                      <ia
                                        columns={
                                          Array [
                                            Object {
                                              "align": "left",
                                              "field": "name",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "contains",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "equals",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "startsWith",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "endsWith",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerName": "Name",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "string",
                                              "width": 100,
                                            },
                                          ]
                                        }
                                      >
                                        <Zn
                                          colIndex={0}
                                          column={
                                            Object {
                                              "align": "left",
                                              "field": "name",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "contains",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "equals",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "startsWith",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "getApplyFilterFn": [Function],
                                                  "value": "endsWith",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerName": "Name",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "string",
                                              "width": 100,
                                            }
                                          }
                                          columnMenuOpen={false}
                                          hasFocus={false}
                                          headerHeight={56}
                                          isDragging={false}
                                          isResizing={false}
                                          key="name"
                                          options={
                                            Object {
                                              "checkboxSelectionVisibleOnly": false,
                                              "classes": Object {
                                                "cell": "MuiDataGrid-cell",
                                                "columnHeader": "MuiDataGrid-columnHeader",
                                                "root": "MuiDataGrid-root",
                                                "row": "MuiDataGrid-row",
                                              },
                                              "columnBuffer": 2,
                                              "columnTypes": Object {
                                                "__default__": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                                "boolean": Object {
                                                  "align": "center",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "center",
                                                  "hide": false,
                                                  "renderCell": [Function],
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "boolean",
                                                  "width": 100,
                                                },
                                                "date": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "date",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "dateTime": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "dateTime",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "number": Object {
                                                  "align": "right",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "=",
                                                      "value": "=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "!=",
                                                      "value": "!=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">",
                                                      "value": ">",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">=",
                                                      "value": ">=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<",
                                                      "value": "<",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<=",
                                                      "value": "<=",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "right",
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                  "valueParser": [Function],
                                                  "width": 100,
                                                },
                                                "singleSelect": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "singleSelect",
                                                  "width": 100,
                                                },
                                                "string": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                              },
                                              "columns": Array [
                                                Object {
                                                  "field": "name",
                                                  "headerName": "Name",
                                                },
                                              ],
                                              "density": "standard",
                                              "disableColumnReorder": true,
                                              "disableColumnResize": true,
                                              "disableMultipleColumnsFiltering": true,
                                              "disableMultipleColumnsSorting": true,
                                              "disableMultipleSelection": true,
                                              "filterMode": "client",
                                              "headerHeight": 56,
                                              "isRtl": false,
                                              "licenseStatus": "Valid",
                                              "localeText": Object {
                                                "MuiTablePagination": Object {
                                                  "backIconButtonText": "Página anterior",
                                                  "labelDisplayedRows": [Function],
                                                  "labelRowsPerPage": "Linhas por página:",
                                                  "nextIconButtonText": "Próxima página",
                                                },
                                                "booleanCellFalseLabel": "não",
                                                "booleanCellTrueLabel": "sim",
                                                "checkboxSelectionHeaderName": "Seleção",
                                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                                "columnHeaderFiltersTooltipActive": [Function],
                                                "columnHeaderSortIconLabel": "Ordenar",
                                                "columnMenuFilter": "Filtrar",
                                                "columnMenuHideColumn": "Ocultar",
                                                "columnMenuLabel": "Menu",
                                                "columnMenuShowColumns": "Exibir colunas",
                                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                "columnMenuUnsort": "Desfazer ordenação",
                                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                "columnsPanelHideAllButton": "Ocultar todas",
                                                "columnsPanelShowAllButton": "Mostrar todas",
                                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                "filterOperatorAfter": "após",
                                                "filterOperatorBefore": "antes de",
                                                "filterOperatorContains": "contém",
                                                "filterOperatorEndsWith": "termina com",
                                                "filterOperatorEquals": "é igual a",
                                                "filterOperatorIs": "é",
                                                "filterOperatorNot": "não é",
                                                "filterOperatorOnOrAfter": "em ou após",
                                                "filterOperatorOnOrBefore": "em ou antes de",
                                                "filterOperatorStartsWith": "começa com",
                                                "filterPanelAddFilter": "Adicionar filtro",
                                                "filterPanelColumns": "Colunas",
                                                "filterPanelDeleteIconLabel": "Excluir",
                                                "filterPanelInputLabel": "Valor",
                                                "filterPanelInputPlaceholder": "Filtrar valor",
                                                "filterPanelOperatorAnd": "E",
                                                "filterPanelOperatorOr": "Ou",
                                                "filterPanelOperators": "Operadores",
                                                "filterValueAny": "any",
                                                "filterValueFalse": "false",
                                                "filterValueTrue": "true",
                                                "footerRowSelected": [Function],
                                                "footerTotalRows": "Total de linhas:",
                                                "footerTotalVisibleRows": [Function],
                                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                "noRowsLabel": "Nenhuma linha",
                                                "toolbarColumns": "Colunas",
                                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                "toolbarDensity": "Densidade",
                                                "toolbarDensityComfortable": "Confortável",
                                                "toolbarDensityCompact": "Compacto",
                                                "toolbarDensityLabel": "Densidade",
                                                "toolbarDensityStandard": "Padrão",
                                                "toolbarExport": "Exportar",
                                                "toolbarExportCSV": "Baixar como CSV",
                                                "toolbarExportLabel": "Exportar",
                                                "toolbarFilters": "Filtros",
                                                "toolbarFiltersLabel": "Exibir filtros",
                                                "toolbarFiltersTooltipActive": [Function],
                                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                "toolbarFiltersTooltipShow": "Exibir filtros",
                                              },
                                              "logLevel": "warn",
                                              "logger": BufferedConsole {
                                                "Console": [Function],
                                                "_buffer": Array [],
                                                "_counters": Object {},
                                                "_groupDepth": 0,
                                                "_timers": Object {},
                                                "assert": [Function],
                                                "clear": [Function],
                                                "count": [Function],
                                                "countReset": [Function],
                                                "debug": [Function],
                                                "dir": [Function],
                                                "dirxml": [Function],
                                                "error": [Function],
                                                "group": [Function],
                                                "groupCollapsed": [Function],
                                                "groupEnd": [Function],
                                                "info": [Function],
                                                "log": [Function],
                                                "table": [Function],
                                                "time": [Function],
                                                "timeEnd": [Function],
                                                "timeLog": [Function],
                                                "trace": [Function],
                                                "warn": [Function],
                                              },
                                              "pageSize": 100,
                                              "pagination": true,
                                              "paginationMode": "client",
                                              "rowHeight": 52,
                                              "rows": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "foo",
                                                },
                                              ],
                                              "rowsPerPageOptions": Array [
                                                25,
                                                50,
                                                100,
                                              ],
                                              "scrollEndThreshold": 80,
                                              "scrollbarSize": 0,
                                              "sortingMode": "client",
                                              "sortingOrder": Array [
                                                "asc",
                                                "desc",
                                                null,
                                              ],
                                              "theme": Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1280,
                                                    "md": 960,
                                                    "sm": 600,
                                                    "xl": 1920,
                                                    "xs": 0,
                                                  },
                                                  "width": [Function],
                                                },
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "gutters": [Function],
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "overrides": Object {},
                                                "palette": Object {
                                                  "action": Object {
                                                    "activatedOpacity": 0.12,
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "disabledOpacity": 0.38,
                                                    "focus": "rgba(0, 0, 0, 0.12)",
                                                    "focusOpacity": 0.12,
                                                    "hover": "rgba(0, 0, 0, 0.04)",
                                                    "hoverOpacity": 0.04,
                                                    "selected": "rgba(0, 0, 0, 0.08)",
                                                    "selectedOpacity": 0.08,
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#fafafa",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#d32f2f",
                                                    "light": "#e57373",
                                                    "main": "#f44336",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#d5d5d5",
                                                    "A200": "#aaaaaa",
                                                    "A400": "#303030",
                                                    "A700": "#616161",
                                                  },
                                                  "info": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#1976d2",
                                                    "light": "#64b5f6",
                                                    "main": "#2196f3",
                                                  },
                                                  "primary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "rgb(17, 82, 147)",
                                                    "light": "rgb(71, 145, 219)",
                                                    "main": "#1976d2",
                                                  },
                                                  "secondary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "success": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#388e3c",
                                                    "light": "#81c784",
                                                    "main": "#4caf50",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "type": "light",
                                                  "warning": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#f57c00",
                                                    "light": "#ffb74d",
                                                    "main": "#ff9800",
                                                  },
                                                },
                                                "props": Object {
                                                  "MuiDataGrid": Object {
                                                    "localeText": Object {
                                                      "MuiTablePagination": Object {
                                                        "backIconButtonText": "Página anterior",
                                                        "labelDisplayedRows": [Function],
                                                        "labelRowsPerPage": "Linhas por página:",
                                                        "nextIconButtonText": "Próxima página",
                                                      },
                                                      "booleanCellFalseLabel": "não",
                                                      "booleanCellTrueLabel": "sim",
                                                      "checkboxSelectionHeaderName": "Seleção",
                                                      "columnHeaderFiltersLabel": "Exibir Filtros",
                                                      "columnHeaderFiltersTooltipActive": [Function],
                                                      "columnHeaderSortIconLabel": "Ordenar",
                                                      "columnMenuFilter": "Filtrar",
                                                      "columnMenuHideColumn": "Ocultar",
                                                      "columnMenuLabel": "Menu",
                                                      "columnMenuShowColumns": "Exibir colunas",
                                                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                      "columnMenuUnsort": "Desfazer ordenação",
                                                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                      "columnsPanelHideAllButton": "Ocultar todas",
                                                      "columnsPanelShowAllButton": "Mostrar todas",
                                                      "columnsPanelTextFieldLabel": "Localizar coluna",
                                                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                      "filterOperatorAfter": "após",
                                                      "filterOperatorBefore": "antes de",
                                                      "filterOperatorContains": "contém",
                                                      "filterOperatorEndsWith": "termina com",
                                                      "filterOperatorEquals": "é igual a",
                                                      "filterOperatorIs": "é",
                                                      "filterOperatorNot": "não é",
                                                      "filterOperatorOnOrAfter": "em ou após",
                                                      "filterOperatorOnOrBefore": "em ou antes de",
                                                      "filterOperatorStartsWith": "começa com",
                                                      "filterPanelAddFilter": "Adicionar filtro",
                                                      "filterPanelColumns": "Colunas",
                                                      "filterPanelDeleteIconLabel": "Excluir",
                                                      "filterPanelInputLabel": "Valor",
                                                      "filterPanelInputPlaceholder": "Filtrar valor",
                                                      "filterPanelOperatorAnd": "E",
                                                      "filterPanelOperatorOr": "Ou",
                                                      "filterPanelOperators": "Operadores",
                                                      "footerRowSelected": [Function],
                                                      "footerTotalRows": "Total de linhas:",
                                                      "footerTotalVisibleRows": [Function],
                                                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                      "noRowsLabel": "Nenhuma linha",
                                                      "toolbarColumns": "Colunas",
                                                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                      "toolbarDensity": "Densidade",
                                                      "toolbarDensityComfortable": "Confortável",
                                                      "toolbarDensityCompact": "Compacto",
                                                      "toolbarDensityLabel": "Densidade",
                                                      "toolbarDensityStandard": "Padrão",
                                                      "toolbarExport": "Exportar",
                                                      "toolbarExportCSV": "Baixar como CSV",
                                                      "toolbarExportLabel": "Exportar",
                                                      "toolbarFilters": "Filtros",
                                                      "toolbarFiltersLabel": "Exibir filtros",
                                                      "toolbarFiltersTooltipActive": [Function],
                                                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                      "toolbarFiltersTooltipShow": "Exibir filtros",
                                                    },
                                                  },
                                                },
                                                "shadows": Array [
                                                  "none",
                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1.2,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.235,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.334,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "round": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "speedDial": 1050,
                                                  "tooltip": 1500,
                                                },
                                                Symbol(mui.nested): false,
                                              },
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <div
                                            aria-colindex={1}
                                            className="MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader"
                                            data-field="name"
                                            key="name"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDoubleClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOut={[Function]}
                                            onMouseOver={[Function]}
                                            role="columnheader"
                                            style={
                                              Object {
                                                "maxWidth": 100,
                                                "minWidth": 100,
                                                "width": 100,
                                              }
                                            }
                                            tabIndex={0}
                                          >
                                            <div
                                              className="MuiDataGrid-columnHeaderDraggableContainer"
                                              draggable={false}
                                              onDragEnd={[Function]}
                                              onDragEnter={[Function]}
                                              onDragOver={[Function]}
                                              onDragStart={[Function]}
                                            >
                                              <div
                                                className="MuiDataGrid-columnHeaderTitleContainer"
                                              >
                                                <An
                                                  columnWidth={100}
                                                  label="Name"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    title=""
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      title=""
                                                    >
                                                      <ForwardRef
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseOver={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        title=""
                                                      >
                                                        <div
                                                          aria-describedby={null}
                                                          className="MuiDataGrid-columnHeaderTitle"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOver={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          title=""
                                                        >
                                                          Name
                                                        </div>
                                                      </ForwardRef>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class="MuiDataGrid-columnHeaderTitle"
                                                            title=""
                                                          >
                                                            Name
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper"
                                                        id={null}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </An>
                                                <Bn />
                                                <Memo()>
                                                  <div
                                                    className="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Ordenar"
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Ordenar"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Ordenar"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        size="small"
                                                        tabIndex={-1}
                                                        title="Ordenar"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Ordenar"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          tabIndex={-1}
                                                          title="Ordenar"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Ordenar"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            tabIndex={-1}
                                                            title="Ordenar"
                                                          >
                                                            <button
                                                              aria-label="Ordenar"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Ordenar"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <Memo()
                                                                  className="MuiDataGrid-sortIcon"
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(ArrowUpwardIcon)
                                                                    className="MuiDataGrid-sortIcon"
                                                                    fontSize="small"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiDataGrid-sortIcon"
                                                                      fontSize="small"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiDataGrid-sortIcon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        fontSize="small"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowUpwardIcon)>
                                                                </Memo()>
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={true}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={true}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </Memo()>
                                              </div>
                                              <Memo()
                                                column={
                                                  Object {
                                                    "align": "left",
                                                    "field": "name",
                                                    "filterOperators": Array [
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "getApplyFilterFn": [Function],
                                                        "value": "contains",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "getApplyFilterFn": [Function],
                                                        "value": "equals",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "getApplyFilterFn": [Function],
                                                        "value": "startsWith",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "getApplyFilterFn": [Function],
                                                        "value": "endsWith",
                                                      },
                                                    ],
                                                    "filterable": true,
                                                    "headerName": "Name",
                                                    "hide": false,
                                                    "renderEditCell": [Function],
                                                    "resizable": true,
                                                    "sortComparator": [Function],
                                                    "sortable": true,
                                                    "type": "string",
                                                    "width": 100,
                                                  }
                                                }
                                                columnMenuButtonId="mui-100000"
                                                columnMenuId="mui-100000"
                                                iconButtonRef={
                                                  Object {
                                                    "current": <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>,
                                                  }
                                                }
                                                open={false}
                                              >
                                                <div
                                                  className="MuiDataGrid-menuIcon"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    className="MuiDataGrid-menuIconButton"
                                                    id="mui-100000"
                                                    onClick={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                    title="Menu"
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      className="MuiDataGrid-menuIconButton"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      id="mui-100000"
                                                      onClick={[Function]}
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Menu"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-controls="mui-100000"
                                                        aria-haspopup="true"
                                                        aria-label="Menu"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        id="mui-100000"
                                                        onClick={[Function]}
                                                        tabIndex={-1}
                                                        title="Menu"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-controls="mui-100000"
                                                          aria-haspopup="true"
                                                          aria-label="Menu"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusRipple={true}
                                                          id="mui-100000"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Menu"
                                                        >
                                                          <button
                                                            aria-controls="mui-100000"
                                                            aria-haspopup="true"
                                                            aria-label="Menu"
                                                            className="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                            disabled={false}
                                                            id="mui-100000"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={-1}
                                                            title="Menu"
                                                            type="button"
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(TripleDotsVerticalIcon)
                                                                fontSize="small"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    fontSize="small"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(TripleDotsVerticalIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </Memo()>
                                            </div>
                                            <Memo()
                                              height={56}
                                              onMouseDown={[Function]}
                                              resizable={false}
                                              resizing={false}
                                            >
                                              <div
                                                className="MuiDataGrid-columnSeparator"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "minHeight": 56,
                                                    "opacity": 1,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SeparatorIcon)
                                                  className="MuiDataGrid-iconSeparator"
                                                >
                                                  <WithStyles(ForwardRef(SvgIcon))
                                                    className="MuiDataGrid-iconSeparator"
                                                  >
                                                    <ForwardRef(SvgIcon)
                                                      className="MuiDataGrid-iconSeparator"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M11 19V5h2v14z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(SeparatorIcon)>
                                              </div>
                                            </Memo()>
                                            <qn
                                              ContentComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              columnMenuButtonId="mui-100000"
                                              columnMenuId="mui-100000"
                                              field="name"
                                              open={false}
                                              target={
                                                <button
                                                  aria-controls="mui-100000"
                                                  aria-haspopup="true"
                                                  aria-label="Menu"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                  id="mui-100000"
                                                  tabindex="-1"
                                                  title="Menu"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              }
                                            >
                                              <Kn
                                                onClickAway={[Function]}
                                                open={false}
                                                placement="bottom-end"
                                                target={
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                }
                                              >
                                                <ForwardRef(Popper)
                                                  anchorEl={
                                                    <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  }
                                                  className="MuiGridMenu-root"
                                                  open={false}
                                                  placement="bottom-end"
                                                  transition={true}
                                                />
                                              </Kn>
                                            </qn>
                                          </div>
                                        </Zn>
                                      </ia>
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                    </div>
                                    <Memo()
                                      scrollDirection="right"
                                    />
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                              <ForwardRef
                                onResize={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "visible",
                                      "width": 0,
                                    }
                                  }
                                >
                                  <ForwardRef
                                    size={
                                      Object {
                                        "height": 0,
                                        "width": 0,
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDataGrid-windowContainer"
                                      style={
                                        Object {
                                          "height": 0,
                                          "width": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDataGrid-window"
                                        style={
                                          Object {
                                            "overflowY": "auto",
                                            "top": 56,
                                          }
                                        }
                                      >
                                        <ForwardRef>
                                          <Zl>
                                            <div
                                              className="MuiDataGrid-dataContainer"
                                              style={
                                                Object {
                                                  "minHeight": 52,
                                                  "minWidth": 100,
                                                }
                                              }
                                            >
                                              <ti
                                                height={0}
                                                width={0}
                                              >
                                                <div
                                                  className="MuiDataGrid-viewport"
                                                  style={
                                                    Object {
                                                      "maxHeight": 0,
                                                      "maxWidth": 0,
                                                      "minWidth": 0,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    height={52}
                                                    width={100}
                                                  >
                                                    <div
                                                      className="MuiDataGrid-renderingZone"
                                                      style={
                                                        Object {
                                                          "maxHeight": 52,
                                                          "width": 100,
                                                        }
                                                      }
                                                    >
                                                      <ei
                                                        className="Mui-even"
                                                        id={1}
                                                        key="1"
                                                        rowIndex={0}
                                                        selected={false}
                                                      >
                                                        <div
                                                          aria-rowindex={2}
                                                          aria-selected={false}
                                                          className="Mui-even MuiDataGrid-row"
                                                          data-id={1}
                                                          data-rowindex={0}
                                                          key="1"
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOut={[Function]}
                                                          onMouseOver={[Function]}
                                                          role="row"
                                                          style={
                                                            Object {
                                                              "maxHeight": 52,
                                                              "minHeight": 52,
                                                            }
                                                          }
                                                        >
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                          <Memo()
                                                            cellClassName="MuiDataGrid-cell"
                                                            cellFocus={null}
                                                            cellTabIndex={null}
                                                            columns={
                                                              Array [
                                                                Object {
                                                                  "align": "left",
                                                                  "field": "name",
                                                                  "filterOperators": Array [
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "getApplyFilterFn": [Function],
                                                                      "value": "contains",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "getApplyFilterFn": [Function],
                                                                      "value": "equals",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "getApplyFilterFn": [Function],
                                                                      "value": "startsWith",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "getApplyFilterFn": [Function],
                                                                      "value": "endsWith",
                                                                    },
                                                                  ],
                                                                  "filterable": true,
                                                                  "headerName": "Name",
                                                                  "hide": false,
                                                                  "renderEditCell": [Function],
                                                                  "resizable": true,
                                                                  "sortComparator": [Function],
                                                                  "sortable": true,
                                                                  "type": "string",
                                                                  "width": 100,
                                                                },
                                                              ]
                                                            }
                                                            extendRowFullWidth={true}
                                                            firstColIdx={0}
                                                            hasScrollX={true}
                                                            hasScrollY={true}
                                                            height={52}
                                                            id={1}
                                                            isSelected={false}
                                                            lastColIdx={0}
                                                            row={
                                                              Object {
                                                                "id": 1,
                                                                "name": "foo",
                                                              }
                                                            }
                                                            rowIndex={0}
                                                            showCellRightBorder={false}
                                                          >
                                                            <Memo()
                                                              align="left"
                                                              cellMode="view"
                                                              className="MuiDataGrid-cell"
                                                              colIndex={0}
                                                              extendRowFullWidth={true}
                                                              field="name"
                                                              formattedValue="foo"
                                                              hasFocus={false}
                                                              height={52}
                                                              isSelected={false}
                                                              key="name"
                                                              row={
                                                                Object {
                                                                  "id": 1,
                                                                  "name": "foo",
                                                                }
                                                              }
                                                              rowId={1}
                                                              rowIndex={0}
                                                              showRightBorder={false}
                                                              tabIndex={-1}
                                                              value="foo"
                                                              width={100}
                                                            >
                                                              <div
                                                                aria-colindex={1}
                                                                className="MuiDataGrid-cell MuiDataGrid-cell--textLeft"
                                                                data-colindex={0}
                                                                data-field="name"
                                                                data-mode="view"
                                                                data-rowindex={0}
                                                                data-rowselected={false}
                                                                data-value="foo"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDoubleClick={[Function]}
                                                                onDragEnter={[Function]}
                                                                onDragOver={[Function]}
                                                                onDragStart={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                                onMouseUp={[Function]}
                                                                role="cell"
                                                                style={
                                                                  Object {
                                                                    "lineHeight": "51px",
                                                                    "maxHeight": 52,
                                                                    "maxWidth": 100,
                                                                    "minHeight": 52,
                                                                    "minWidth": 100,
                                                                  }
                                                                }
                                                                tabIndex={-1}
                                                              >
                                                                foo
                                                              </div>
                                                            </Memo()>
                                                          </Memo()>
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                        </div>
                                                      </ei>
                                                    </div>
                                                  </ForwardRef>
                                                </div>
                                              </ti>
                                            </div>
                                          </Zl>
                                        </ForwardRef>
                                      </div>
                                    </div>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </div>
                          </hs>
                        </Ss>
                        <Os>
                          <div>
                            <ForwardRef>
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-footerContainer"
                                >
                                  <div />
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(TablePagination))
                                      backIconButtonText="Página anterior"
                                      classes={
                                        Object {
                                          "caption": "makeStyles-caption-2",
                                          "input": "makeStyles-input-3",
                                        }
                                      }
                                      component="div"
                                      count={1}
                                      labelDisplayedRows={[Function]}
                                      labelRowsPerPage="Linhas por página:"
                                      nextIconButtonText="Próxima página"
                                      onChangePage={[Function]}
                                      onChangeRowsPerPage={[Function]}
                                      page={0}
                                      rowsPerPage={100}
                                      rowsPerPageOptions={
                                        Array [
                                          25,
                                          50,
                                          100,
                                        ]
                                      }
                                    >
                                      <ForwardRef(TablePagination)
                                        backIconButtonText="Página anterior"
                                        classes={
                                          Object {
                                            "actions": "MuiTablePagination-actions",
                                            "caption": "MuiTablePagination-caption makeStyles-caption-2",
                                            "input": "MuiTablePagination-input makeStyles-input-3",
                                            "menuItem": "MuiTablePagination-menuItem",
                                            "root": "MuiTablePagination-root",
                                            "select": "MuiTablePagination-select",
                                            "selectIcon": "MuiTablePagination-selectIcon",
                                            "selectRoot": "MuiTablePagination-selectRoot",
                                            "spacer": "MuiTablePagination-spacer",
                                            "toolbar": "MuiTablePagination-toolbar",
                                          }
                                        }
                                        component="div"
                                        count={1}
                                        labelDisplayedRows={[Function]}
                                        labelRowsPerPage="Linhas por página:"
                                        nextIconButtonText="Próxima página"
                                        onChangePage={[Function]}
                                        onChangeRowsPerPage={[Function]}
                                        page={0}
                                        rowsPerPage={100}
                                        rowsPerPageOptions={
                                          Array [
                                            25,
                                            50,
                                            100,
                                          ]
                                        }
                                      >
                                        <div
                                          className="MuiTablePagination-root"
                                        >
                                          <WithStyles(ForwardRef(Toolbar))
                                            className="MuiTablePagination-toolbar"
                                          >
                                            <ForwardRef(Toolbar)
                                              className="MuiTablePagination-toolbar"
                                              classes={
                                                Object {
                                                  "dense": "MuiToolbar-dense",
                                                  "gutters": "MuiToolbar-gutters",
                                                  "regular": "MuiToolbar-regular",
                                                  "root": "MuiToolbar-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                              >
                                                <div
                                                  className="MuiTablePagination-spacer"
                                                />
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  id="mui-100000"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    id="mui-100000"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                      id="mui-100000"
                                                    >
                                                      Linhas por página:
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Select))
                                                  classes={
                                                    Object {
                                                      "icon": "MuiTablePagination-selectIcon",
                                                      "select": "MuiTablePagination-select",
                                                    }
                                                  }
                                                  id="mui-100000"
                                                  input={
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                    />
                                                  }
                                                  labelId="mui-100000"
                                                  onChange={[Function]}
                                                  value={100}
                                                >
                                                  <ForwardRef(Select)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    id="mui-100000"
                                                    input={
                                                      <WithStyles(ForwardRef(InputBase))
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      />
                                                    }
                                                    labelId="mui-100000"
                                                    onChange={[Function]}
                                                    value={100}
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      inputComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": [Function],
                                                            "SelectDisplayProps": [Function],
                                                            "aria-label": [Function],
                                                            "autoFocus": [Function],
                                                            "autoWidth": [Function],
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "defaultValue": [Function],
                                                            "disabled": [Function],
                                                            "displayEmpty": [Function],
                                                            "inputRef": [Function],
                                                            "labelId": [Function],
                                                            "multiple": [Function],
                                                            "name": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onClose": [Function],
                                                            "onFocus": [Function],
                                                            "onOpen": [Function],
                                                            "open": [Function],
                                                            "readOnly": [Function],
                                                            "renderValue": [Function],
                                                            "tabIndex": [Function],
                                                            "type": [Function],
                                                            "value": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      inputProps={
                                                        Object {
                                                          "IconComponent": Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          },
                                                          "MenuProps": undefined,
                                                          "SelectDisplayProps": Object {
                                                            "id": "mui-100000",
                                                          },
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={25}
                                                            >
                                                              25
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={50}
                                                            >
                                                              50
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={100}
                                                            >
                                                              100
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select MuiTablePagination-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          },
                                                          "displayEmpty": false,
                                                          "labelId": "mui-100000",
                                                          "multiple": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                          "type": undefined,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      value={100}
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputBase-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth",
                                                            "input": "MuiInputBase-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense",
                                                            "multiline": "MuiInputBase-multiline",
                                                            "root": "MuiInputBase-root",
                                                          }
                                                        }
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": "mui-100000",
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={25}
                                                              >
                                                                25
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={50}
                                                              >
                                                                50
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={100}
                                                              >
                                                                100
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select MuiTablePagination-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": "mui-100000",
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        value={100}
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(SelectInput)
                                                            IconComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              }
                                                            }
                                                            SelectDisplayProps={
                                                              Object {
                                                                "id": "mui-100000",
                                                              }
                                                            }
                                                            autoWidth={false}
                                                            className="MuiInputBase-input"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              }
                                                            }
                                                            displayEmpty={false}
                                                            inputRef={[Function]}
                                                            labelId="mui-100000"
                                                            multiple={false}
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value={100}
                                                            variant="standard"
                                                          >
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-100000 mui-100000"
                                                              className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-100000"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              100
                                                            </div>
                                                            <input
                                                              aria-hidden={true}
                                                              className="MuiSelect-nativeInput"
                                                              onAnimationStart={[Function]}
                                                              onChange={[Function]}
                                                              tabIndex={-1}
                                                              value={100}
                                                            />
                                                            <ForwardRef(ArrowDropDownIcon)
                                                              className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M7 10l5 5 5-5z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef(ArrowDropDownIcon)>
                                                            <WithStyles(ForwardRef(Menu))
                                                              MenuListProps={
                                                                Object {
                                                                  "aria-labelledby": "mui-100000",
                                                                  "disableListWrap": true,
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={
                                                                <div
                                                                  aria-haspopup="listbox"
                                                                  aria-labelledby="mui-100000 mui-100000"
                                                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                  id="mui-100000"
                                                                  role="button"
                                                                  tabindex="0"
                                                                >
                                                                  100
                                                                </div>
                                                              }
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <ForwardRef(Menu)
                                                                MenuListProps={
                                                                  Object {
                                                                    "aria-labelledby": "mui-100000",
                                                                    "disableListWrap": true,
                                                                    "role": "listbox",
                                                                  }
                                                                }
                                                                PaperProps={
                                                                  Object {
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                anchorEl={
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    aria-labelledby="mui-100000 mui-100000"
                                                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                    id="mui-100000"
                                                                    role="button"
                                                                    tabindex="0"
                                                                  >
                                                                    100
                                                                  </div>
                                                                }
                                                                classes={
                                                                  Object {
                                                                    "list": "MuiMenu-list",
                                                                    "paper": "MuiMenu-paper",
                                                                  }
                                                                }
                                                                id="menu-"
                                                                onClose={[Function]}
                                                                open={false}
                                                              >
                                                                <WithStyles(ForwardRef(Popover))
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  anchorEl={
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-100000 mui-100000"
                                                                      class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                      id="mui-100000"
                                                                      role="button"
                                                                      tabindex="0"
                                                                    >
                                                                      100
                                                                    </div>
                                                                  }
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-"
                                                                  onClose={[Function]}
                                                                  onEntering={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <ForwardRef(Popover)
                                                                    PaperProps={
                                                                      Object {
                                                                        "classes": Object {
                                                                          "root": "MuiMenu-paper",
                                                                        },
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        aria-labelledby="mui-100000 mui-100000"
                                                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                        id="mui-100000"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        100
                                                                      </div>
                                                                    }
                                                                    anchorOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "paper": "MuiPopover-paper",
                                                                        "root": "MuiPopover-root",
                                                                      }
                                                                    }
                                                                    getContentAnchorEl={[Function]}
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    onEntering={[Function]}
                                                                    open={false}
                                                                    transformOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    transitionDuration="auto"
                                                                  >
                                                                    <ForwardRef(Modal)
                                                                      BackdropProps={
                                                                        Object {
                                                                          "invisible": true,
                                                                        }
                                                                      }
                                                                      className="MuiPopover-root"
                                                                      container={<body />}
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    />
                                                                  </ForwardRef(Popover)>
                                                                </WithStyles(ForwardRef(Popover))>
                                                              </ForwardRef(Menu)>
                                                            </WithStyles(ForwardRef(Menu))>
                                                          </ForwardRef(SelectInput)>
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Select)>
                                                </WithStyles(ForwardRef(Select))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                    >
                                                      1-1 de 1
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <ForwardRef(TablePaginationActions)
                                                  backIconButtonProps={
                                                    Object {
                                                      "aria-label": "Página anterior",
                                                      "title": "Página anterior",
                                                    }
                                                  }
                                                  className="MuiTablePagination-actions"
                                                  count={1}
                                                  nextIconButtonProps={
                                                    Object {
                                                      "aria-label": "Próxima página",
                                                      "title": "Próxima página",
                                                    }
                                                  }
                                                  onChangePage={[Function]}
                                                  page={0}
                                                  rowsPerPage={100}
                                                >
                                                  <div
                                                    className="MuiTablePagination-actions"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Página anterior"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Página anterior"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Página anterior"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Página anterior"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Página anterior"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Página anterior"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Página anterior"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Página anterior"
                                                          >
                                                            <button
                                                              aria-label="Página anterior"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Página anterior"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowLeftIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowLeftIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Próxima página"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Próxima página"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Próxima página"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Próxima página"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Próxima página"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Próxima página"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Próxima página"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Próxima página"
                                                          >
                                                            <button
                                                              aria-label="Próxima página"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Próxima página"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowRightIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowRightIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(TablePaginationActions)>
                                              </div>
                                            </ForwardRef(Toolbar)>
                                          </WithStyles(ForwardRef(Toolbar))>
                                        </div>
                                      </ForwardRef(TablePagination)>
                                    </WithStyles(ForwardRef(TablePagination))>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </ForwardRef>
                          </div>
                        </Os>
                      </Cs>
                    </vs>
                  </div>
                </NoSsr>
              </ForwardRef>
            </bs>
          </ForwardRef>
        </ForwardRef>
      </ThemeProvider>
    </div>
  </ScrollBar>
</Memo()>
`;

exports[`src/components/ui/DataGrid should render correctly decimalTwoPlaces 1`] = `
<Memo()
  columns={
    Array [
      Object {
        "cellClassName": "font-tabular-nums",
        "field": "decimalTwoPlaces",
        "headerName": "Decimal Two Places",
        "type": "number",
        "valueFormatter": [Function],
      },
    ]
  }
  rows={
    Array [
      Object {
        "decimalTwoPlaces": 0.34456,
        "id": 1,
      },
    ]
  }
>
  <ScrollBar
    className=""
    component="div"
    containerRef={[Function]}
    onSync={[Function]}
  >
    <div>
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "rgb(17, 82, 147)",
                "light": "rgb(71, 145, 219)",
                "main": "#1976d2",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "props": Object {
              "MuiDataGrid": Object {
                "localeText": Object {
                  "MuiTablePagination": Object {
                    "backIconButtonText": "Página anterior",
                    "labelDisplayedRows": [Function],
                    "labelRowsPerPage": "Linhas por página:",
                    "nextIconButtonText": "Próxima página",
                  },
                  "booleanCellFalseLabel": "não",
                  "booleanCellTrueLabel": "sim",
                  "checkboxSelectionHeaderName": "Seleção",
                  "columnHeaderFiltersLabel": "Exibir Filtros",
                  "columnHeaderFiltersTooltipActive": [Function],
                  "columnHeaderSortIconLabel": "Ordenar",
                  "columnMenuFilter": "Filtrar",
                  "columnMenuHideColumn": "Ocultar",
                  "columnMenuLabel": "Menu",
                  "columnMenuShowColumns": "Exibir colunas",
                  "columnMenuSortAsc": "Ordenar do menor para o maior",
                  "columnMenuSortDesc": "Ordenar do maior para o menor",
                  "columnMenuUnsort": "Desfazer ordenação",
                  "columnsPanelDragIconLabel": "Reordenar Coluna",
                  "columnsPanelHideAllButton": "Ocultar todas",
                  "columnsPanelShowAllButton": "Mostrar todas",
                  "columnsPanelTextFieldLabel": "Localizar coluna",
                  "columnsPanelTextFieldPlaceholder": "Título da coluna",
                  "errorOverlayDefaultLabel": "Ocorreu um erro.",
                  "filterOperatorAfter": "após",
                  "filterOperatorBefore": "antes de",
                  "filterOperatorContains": "contém",
                  "filterOperatorEndsWith": "termina com",
                  "filterOperatorEquals": "é igual a",
                  "filterOperatorIs": "é",
                  "filterOperatorNot": "não é",
                  "filterOperatorOnOrAfter": "em ou após",
                  "filterOperatorOnOrBefore": "em ou antes de",
                  "filterOperatorStartsWith": "começa com",
                  "filterPanelAddFilter": "Adicionar filtro",
                  "filterPanelColumns": "Colunas",
                  "filterPanelDeleteIconLabel": "Excluir",
                  "filterPanelInputLabel": "Valor",
                  "filterPanelInputPlaceholder": "Filtrar valor",
                  "filterPanelOperatorAnd": "E",
                  "filterPanelOperatorOr": "Ou",
                  "filterPanelOperators": "Operadores",
                  "footerRowSelected": [Function],
                  "footerTotalRows": "Total de linhas:",
                  "footerTotalVisibleRows": [Function],
                  "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                  "noRowsLabel": "Nenhuma linha",
                  "toolbarColumns": "Colunas",
                  "toolbarColumnsLabel": "Exibir seletor de colunas",
                  "toolbarDensity": "Densidade",
                  "toolbarDensityComfortable": "Confortável",
                  "toolbarDensityCompact": "Compacto",
                  "toolbarDensityLabel": "Densidade",
                  "toolbarDensityStandard": "Padrão",
                  "toolbarExport": "Exportar",
                  "toolbarExportCSV": "Baixar como CSV",
                  "toolbarExportLabel": "Exportar",
                  "toolbarFilters": "Filtros",
                  "toolbarFiltersLabel": "Exibir filtros",
                  "toolbarFiltersTooltipActive": [Function],
                  "toolbarFiltersTooltipHide": "Ocultar filtros",
                  "toolbarFiltersTooltipShow": "Exibir filtros",
                },
              },
            },
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <ForwardRef
          columns={
            Array [
              Object {
                "cellClassName": "font-tabular-nums",
                "field": "decimalTwoPlaces",
                "headerName": "Decimal Two Places",
                "type": "number",
                "valueFormatter": [Function],
              },
            ]
          }
          rows={
            Array [
              Object {
                "decimalTwoPlaces": 0.34456,
                "id": 1,
              },
            ]
          }
        >
          <ForwardRef
            checkboxSelectionVisibleOnly={false}
            columnBuffer={2}
            columnTypes={
              Object {
                "__default__": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
                "boolean": Object {
                  "align": "center",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "center",
                  "hide": false,
                  "renderCell": [Function],
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "boolean",
                  "width": 100,
                },
                "date": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "date",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "dateTime": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "dateTime",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "number": Object {
                  "align": "right",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "=",
                      "value": "=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "!=",
                      "value": "!=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">",
                      "value": ">",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">=",
                      "value": ">=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<",
                      "value": "<",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<=",
                      "value": "<=",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "right",
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "number",
                  "valueFormatter": [Function],
                  "valueParser": [Function],
                  "width": 100,
                },
                "singleSelect": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "singleSelect",
                  "width": 100,
                },
                "string": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
              }
            }
            columns={
              Array [
                Object {
                  "cellClassName": "font-tabular-nums",
                  "field": "decimalTwoPlaces",
                  "headerName": "Decimal Two Places",
                  "type": "number",
                  "valueFormatter": [Function],
                },
              ]
            }
            density="standard"
            disableColumnReorder={true}
            disableColumnResize={true}
            disableMultipleColumnsFiltering={true}
            disableMultipleColumnsSorting={true}
            disableMultipleSelection={true}
            filterMode="client"
            headerHeight={56}
            isRtl={false}
            licenseStatus="Valid"
            localeText={
              Object {
                "MuiTablePagination": Object {
                  "backIconButtonText": "Página anterior",
                  "labelDisplayedRows": [Function],
                  "labelRowsPerPage": "Linhas por página:",
                  "nextIconButtonText": "Próxima página",
                },
                "booleanCellFalseLabel": "não",
                "booleanCellTrueLabel": "sim",
                "checkboxSelectionHeaderName": "Seleção",
                "columnHeaderFiltersLabel": "Exibir Filtros",
                "columnHeaderFiltersTooltipActive": [Function],
                "columnHeaderSortIconLabel": "Ordenar",
                "columnMenuFilter": "Filtrar",
                "columnMenuHideColumn": "Ocultar",
                "columnMenuLabel": "Menu",
                "columnMenuShowColumns": "Exibir colunas",
                "columnMenuSortAsc": "Ordenar do menor para o maior",
                "columnMenuSortDesc": "Ordenar do maior para o menor",
                "columnMenuUnsort": "Desfazer ordenação",
                "columnsPanelDragIconLabel": "Reordenar Coluna",
                "columnsPanelHideAllButton": "Ocultar todas",
                "columnsPanelShowAllButton": "Mostrar todas",
                "columnsPanelTextFieldLabel": "Localizar coluna",
                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                "filterOperatorAfter": "após",
                "filterOperatorBefore": "antes de",
                "filterOperatorContains": "contém",
                "filterOperatorEndsWith": "termina com",
                "filterOperatorEquals": "é igual a",
                "filterOperatorIs": "é",
                "filterOperatorNot": "não é",
                "filterOperatorOnOrAfter": "em ou após",
                "filterOperatorOnOrBefore": "em ou antes de",
                "filterOperatorStartsWith": "começa com",
                "filterPanelAddFilter": "Adicionar filtro",
                "filterPanelColumns": "Colunas",
                "filterPanelDeleteIconLabel": "Excluir",
                "filterPanelInputLabel": "Valor",
                "filterPanelInputPlaceholder": "Filtrar valor",
                "filterPanelOperatorAnd": "E",
                "filterPanelOperatorOr": "Ou",
                "filterPanelOperators": "Operadores",
                "footerRowSelected": [Function],
                "footerTotalRows": "Total de linhas:",
                "footerTotalVisibleRows": [Function],
                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                "noRowsLabel": "Nenhuma linha",
                "toolbarColumns": "Colunas",
                "toolbarColumnsLabel": "Exibir seletor de colunas",
                "toolbarDensity": "Densidade",
                "toolbarDensityComfortable": "Confortável",
                "toolbarDensityCompact": "Compacto",
                "toolbarDensityLabel": "Densidade",
                "toolbarDensityStandard": "Padrão",
                "toolbarExport": "Exportar",
                "toolbarExportCSV": "Baixar como CSV",
                "toolbarExportLabel": "Exportar",
                "toolbarFilters": "Filtros",
                "toolbarFiltersLabel": "Exibir filtros",
                "toolbarFiltersTooltipActive": [Function],
                "toolbarFiltersTooltipHide": "Ocultar filtros",
                "toolbarFiltersTooltipShow": "Exibir filtros",
              }
            }
            logLevel="warn"
            logger={
              BufferedConsole {
                "Console": [Function],
                "_buffer": Array [],
                "_counters": Object {},
                "_groupDepth": 0,
                "_timers": Object {},
                "assert": [Function],
                "clear": [Function],
                "count": [Function],
                "countReset": [Function],
                "debug": [Function],
                "dir": [Function],
                "dirxml": [Function],
                "error": [Function],
                "group": [Function],
                "groupCollapsed": [Function],
                "groupEnd": [Function],
                "info": [Function],
                "log": [Function],
                "table": [Function],
                "time": [Function],
                "timeEnd": [Function],
                "timeLog": [Function],
                "trace": [Function],
                "warn": [Function],
              }
            }
            pageSize={100}
            pagination={true}
            paginationMode="client"
            rowHeight={52}
            rows={
              Array [
                Object {
                  "decimalTwoPlaces": 0.34456,
                  "id": 1,
                },
              ]
            }
            rowsPerPageOptions={
              Array [
                25,
                50,
                100,
              ]
            }
            scrollEndThreshold={80}
            sortingMode="client"
            sortingOrder={
              Array [
                "asc",
                "desc",
                null,
              ]
            }
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "rgb(17, 82, 147)",
                    "light": "rgb(71, 145, 219)",
                    "main": "#1976d2",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {
                  "MuiDataGrid": Object {
                    "localeText": Object {
                      "MuiTablePagination": Object {
                        "backIconButtonText": "Página anterior",
                        "labelDisplayedRows": [Function],
                        "labelRowsPerPage": "Linhas por página:",
                        "nextIconButtonText": "Próxima página",
                      },
                      "booleanCellFalseLabel": "não",
                      "booleanCellTrueLabel": "sim",
                      "checkboxSelectionHeaderName": "Seleção",
                      "columnHeaderFiltersLabel": "Exibir Filtros",
                      "columnHeaderFiltersTooltipActive": [Function],
                      "columnHeaderSortIconLabel": "Ordenar",
                      "columnMenuFilter": "Filtrar",
                      "columnMenuHideColumn": "Ocultar",
                      "columnMenuLabel": "Menu",
                      "columnMenuShowColumns": "Exibir colunas",
                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                      "columnMenuUnsort": "Desfazer ordenação",
                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                      "columnsPanelHideAllButton": "Ocultar todas",
                      "columnsPanelShowAllButton": "Mostrar todas",
                      "columnsPanelTextFieldLabel": "Localizar coluna",
                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                      "filterOperatorAfter": "após",
                      "filterOperatorBefore": "antes de",
                      "filterOperatorContains": "contém",
                      "filterOperatorEndsWith": "termina com",
                      "filterOperatorEquals": "é igual a",
                      "filterOperatorIs": "é",
                      "filterOperatorNot": "não é",
                      "filterOperatorOnOrAfter": "em ou após",
                      "filterOperatorOnOrBefore": "em ou antes de",
                      "filterOperatorStartsWith": "começa com",
                      "filterPanelAddFilter": "Adicionar filtro",
                      "filterPanelColumns": "Colunas",
                      "filterPanelDeleteIconLabel": "Excluir",
                      "filterPanelInputLabel": "Valor",
                      "filterPanelInputPlaceholder": "Filtrar valor",
                      "filterPanelOperatorAnd": "E",
                      "filterPanelOperatorOr": "Ou",
                      "filterPanelOperators": "Operadores",
                      "footerRowSelected": [Function],
                      "footerTotalRows": "Total de linhas:",
                      "footerTotalVisibleRows": [Function],
                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                      "noRowsLabel": "Nenhuma linha",
                      "toolbarColumns": "Colunas",
                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                      "toolbarDensity": "Densidade",
                      "toolbarDensityComfortable": "Confortável",
                      "toolbarDensityCompact": "Compacto",
                      "toolbarDensityLabel": "Densidade",
                      "toolbarDensityStandard": "Padrão",
                      "toolbarExport": "Exportar",
                      "toolbarExportCSV": "Baixar como CSV",
                      "toolbarExportLabel": "Exportar",
                      "toolbarFilters": "Filtros",
                      "toolbarFiltersLabel": "Exibir filtros",
                      "toolbarFiltersTooltipActive": [Function],
                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                      "toolbarFiltersTooltipShow": "Exibir filtros",
                    },
                  },
                },
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
                Symbol(mui.nested): false,
              }
            }
          >
            <bs
              apiRef={
                Object {
                  "current": Ti {
                    "applyFilter": [Function],
                    "applyFilterLinkOperator": [Function],
                    "applyFilters": [Function],
                    "applySorting": [Function],
                    "columnHeadersContainerElementRef": Object {
                      "current": <div
                        class="MuiDataGrid-columnsContainer"
                        style="min-height: 56px; max-height: 56px; line-height: 56px;"
                      >
                        <div
                          aria-rowindex="1"
                          class="MuiDataGrid-columnHeaderWrapper scroll"
                          role="row"
                          style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                            data-field="decimalTwoPlaces"
                            role="columnheader"
                            style="width: 100px; min-width: 100px; max-width: 100px;"
                            tabindex="0"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderDraggableContainer"
                              draggable="false"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitleContainer"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderTitle"
                                  title=""
                                >
                                  Decimal Two Places
                                </div>
                                <div
                                  class="MuiDataGrid-iconButtonContainer"
                                >
                                  <button
                                    aria-label="Ordenar"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                    tabindex="-1"
                                    title="Ordenar"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                        />
                                      </svg>
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>
                              </div>
                              <div
                                class="MuiDataGrid-menuIcon"
                              >
                                <button
                                  aria-controls="mui-100000"
                                  aria-haspopup="true"
                                  aria-label="Menu"
                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                  id="mui-100000"
                                  tabindex="-1"
                                  title="Menu"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-columnSeparator"
                              style="min-height: 56px; opacity: 1;"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M11 19V5h2v14z"
                                />
                              </svg>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "columnHeadersElementRef": Object {
                      "current": <div
                        aria-rowindex="1"
                        class="MuiDataGrid-columnHeaderWrapper scroll"
                        role="row"
                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                      >
                        <div
                          aria-colindex="1"
                          class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                          data-field="decimalTwoPlaces"
                          role="columnheader"
                          style="width: 100px; min-width: 100px; max-width: 100px;"
                          tabindex="0"
                        >
                          <div
                            class="MuiDataGrid-columnHeaderDraggableContainer"
                            draggable="false"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderTitleContainer"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitle"
                                title=""
                              >
                                Decimal Two Places
                              </div>
                              <div
                                class="MuiDataGrid-iconButtonContainer"
                              >
                                <button
                                  aria-label="Ordenar"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                  tabindex="-1"
                                  title="Ordenar"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-menuIcon"
                            >
                              <button
                                aria-controls="mui-100000"
                                aria-haspopup="true"
                                aria-label="Menu"
                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                id="mui-100000"
                                tabindex="-1"
                                title="Menu"
                                type="button"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                    />
                                  </svg>
                                </span>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </button>
                            </div>
                          </div>
                          <div
                            class="MuiDataGrid-columnSeparator"
                            style="min-height: 56px; opacity: 1;"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M11 19V5h2v14z"
                              />
                            </svg>
                          </div>
                        </div>
                      </div>,
                    },
                    "commitCellChange": [Function],
                    "components": Object {
                      "BooleanCellFalseIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "BooleanCellTrueIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Checkbox": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "checked": [Function],
                            "checkedIcon": [Function],
                            "classes": [Function],
                            "color": [Function],
                            "disableRipple": [Function],
                            "disabled": [Function],
                            "icon": [Function],
                            "id": [Function],
                            "indeterminate": [Function],
                            "indeterminateIcon": [Function],
                            "inputProps": [Function],
                            "inputRef": [Function],
                            "onChange": [Function],
                            "required": [Function],
                            "size": [Function],
                            "value": [Function],
                          },
                          "render": [Function],
                        },
                        "displayName": "WithStyles(ForwardRef(Checkbox))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiCheckbox",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      },
                      "ColumnFilteredIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnMenu": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ColumnMenuIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnResizeIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSelectorIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedAscendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedDescendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnUnsortedIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      },
                      "ColumnsPanel": [Function],
                      "DensityComfortableIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityCompactIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityStandardIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ErrorOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ExportIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "FilterPanel": [Function],
                      "Footer": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Header": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "LoadingOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoResultsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoRowsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "OpenFilterButtonIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Pagination": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Panel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "PreferencesPanel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Toolbar": undefined,
                    },
                    "componentsProps": undefined,
                    "copySelectedRowsToClipboard": [Function],
                    "deleteFilter": [Function],
                    "events": Object {
                      "cellClick": Array [
                        [Function],
                      ],
                      "cellDoubleClick": Array [
                        [Function],
                        [Function],
                      ],
                      "cellDragEnd": Array [
                        [Function],
                      ],
                      "cellDragEnter": Array [
                        [Function],
                      ],
                      "cellDragOver": Array [
                        [Function],
                      ],
                      "cellEditEnter": Array [
                        [Function],
                      ],
                      "cellEditExit": Array [
                        [Function],
                      ],
                      "cellEditPropsChange": Array [
                        [Function],
                      ],
                      "cellEditPropsChangeCommitted": Array [
                        [Function],
                      ],
                      "cellFocusOut": Array [
                        [Function],
                      ],
                      "cellKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "cellModeChange": Array [
                        [Function],
                      ],
                      "cellMouseDown": Array [
                        [Function],
                      ],
                      "cellMouseUp": Array [
                        [Function],
                      ],
                      "cellNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnHeaderBlur": Array [
                        [Function],
                      ],
                      "columnHeaderClick": Array [
                        [Function],
                      ],
                      "columnHeaderDragEnd": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderDragEnter": Array [
                        [Function],
                      ],
                      "columnHeaderDragOver": Array [
                        [Function],
                      ],
                      "columnHeaderDragStart": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderFocus": Array [
                        [Function],
                      ],
                      "columnHeaderKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "columnHeaderNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnResizeStart": Array [
                        [Function],
                      ],
                      "columnResizeStop": Array [
                        [Function],
                      ],
                      "columnSeparatorMouseDown": Array [
                        [Function],
                      ],
                      "columnsChange": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "componentError": Array [
                        [Function],
                      ],
                      "debouncedResize": Array [
                        [Function],
                        [Function],
                      ],
                      "keydown": Array [
                        [Function],
                      ],
                      "resize": Array [
                        [Function],
                      ],
                      "rowClick": Array [
                        [Function],
                      ],
                      "rowsClear": Array [
                        [Function],
                      ],
                      "rowsScroll": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "rowsSet": Array [
                        [Function],
                        [Function],
                      ],
                      "rowsUpdate": Array [
                        [Function],
                        [Function],
                      ],
                      "unmount": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                    },
                    "exportDataAsCsv": [Function],
                    "footerRef": Object {
                      "current": <div>
                        <div
                          class="MuiDataGrid-footerContainer"
                        >
                          <div />
                          <div
                            class="MuiTablePagination-root"
                          >
                            <div
                              class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                            >
                              <div
                                class="MuiTablePagination-spacer"
                              />
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                id="mui-100000"
                              >
                                Linhas por página:
                              </p>
                              <div
                                class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                              >
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="mui-100000 mui-100000"
                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                  id="mui-100000"
                                  role="button"
                                  tabindex="0"
                                >
                                  100
                                </div>
                                <input
                                  aria-hidden="true"
                                  class="MuiSelect-nativeInput"
                                  tabindex="-1"
                                  value="100"
                                />
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </div>
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                              >
                                1-1 de 1
                              </p>
                              <div
                                class="MuiTablePagination-actions"
                              >
                                <button
                                  aria-label="Página anterior"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Página anterior"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                                <button
                                  aria-label="Próxima página"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Próxima página"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "forceUpdate": [Function],
                    "getAllColumns": [Function],
                    "getAllRowIds": [Function],
                    "getCellElement": [Function],
                    "getCellMode": [Function],
                    "getCellParams": [Function],
                    "getCellValue": [Function],
                    "getColumn": [Function],
                    "getColumnHeaderElement": [Function],
                    "getColumnHeaderParams": [Function],
                    "getColumnIndex": [Function],
                    "getColumnPosition": [Function],
                    "getColumnsMeta": [Function],
                    "getContainerPropsState": [Function],
                    "getDataAsCsv": [Function],
                    "getEditCellProps": [Function],
                    "getEditCellPropsParams": [Function],
                    "getEditRowsModel": [Function],
                    "getLocaleText": [Function],
                    "getRenderContextState": [Function],
                    "getRow": [Function],
                    "getRowElement": [Function],
                    "getRowIdFromRowIndex": [Function],
                    "getRowIndex": [Function],
                    "getRowModels": [Function],
                    "getRowParams": [Function],
                    "getRowsCount": [Function],
                    "getScrollPosition": [Function],
                    "getSelectedRows": [Function],
                    "getSortModel": [Function],
                    "getSortedRowIds": [Function],
                    "getSortedRows": [Function],
                    "getState": [Function],
                    "getVisibleColumns": [Function],
                    "getVisibleRowModels": [Function],
                    "headerRef": Object {
                      "current": <div>
                        <div />
                      </div>,
                    },
                    "hideColumnMenu": [Function],
                    "hideFilterPanel": [Function],
                    "hidePreferences": [Function],
                    "isCellEditable": [Function],
                    "isColumnVisibleInWindow": [Function],
                    "maxListeners": 10,
                    "publishEvent": [Function],
                    "renderingZoneRef": Object {
                      "current": <div
                        class="MuiDataGrid-renderingZone"
                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                      >
                        <div
                          aria-rowindex="2"
                          aria-selected="false"
                          class="Mui-even MuiDataGrid-row"
                          data-id="1"
                          data-rowindex="0"
                          role="row"
                          style="max-height: 52px; min-height: 52px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                            data-colindex="0"
                            data-field="decimalTwoPlaces"
                            data-mode="view"
                            data-rowindex="0"
                            data-rowselected="false"
                            data-value="0.34456"
                            role="cell"
                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                            tabindex="-1"
                          >
                            0.34
                          </div>
                        </div>
                      </div>,
                    },
                    "resize": [Function],
                    "rootElementRef": Object {
                      "current": <div
                        aria-colcount="1"
                        aria-multiselectable="false"
                        aria-rowcount="1"
                        class="MuiDataGrid-root MuiDataGrid-root"
                        role="grid"
                      >
                        <div>
                          <div />
                        </div>
                        <div
                          class="MuiDataGrid-main"
                        >
                          <div
                            class="MuiDataGrid-columnsContainer"
                            style="min-height: 56px; max-height: 56px; line-height: 56px;"
                          >
                            <div
                              aria-rowindex="1"
                              class="MuiDataGrid-columnHeaderWrapper scroll"
                              role="row"
                              style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                            >
                              <div
                                aria-colindex="1"
                                class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                data-field="decimalTwoPlaces"
                                role="columnheader"
                                style="width: 100px; min-width: 100px; max-width: 100px;"
                                tabindex="0"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderDraggableContainer"
                                  draggable="false"
                                >
                                  <div
                                    class="MuiDataGrid-columnHeaderTitleContainer"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderTitle"
                                      title=""
                                    >
                                      Decimal Two Places
                                    </div>
                                    <div
                                      class="MuiDataGrid-iconButtonContainer"
                                    >
                                      <button
                                        aria-label="Ordenar"
                                        class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                        tabindex="-1"
                                        title="Ordenar"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                            />
                                          </svg>
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                  </div>
                                  <div
                                    class="MuiDataGrid-menuIcon"
                                  >
                                    <button
                                      aria-controls="mui-100000"
                                      aria-haspopup="true"
                                      aria-label="Menu"
                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                      id="mui-100000"
                                      tabindex="-1"
                                      title="Menu"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  </div>
                                </div>
                                <div
                                  class="MuiDataGrid-columnSeparator"
                                  style="min-height: 56px; opacity: 1;"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M11 19V5h2v14z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            style="overflow: visible; height: 0px; width: 0px;"
                          >
                            <div
                              class="MuiDataGrid-windowContainer"
                              style="width: 0px; height: 0px;"
                            >
                              <div
                                class="MuiDataGrid-window"
                                style="top: 56px; overflow-y: auto;"
                              >
                                <div
                                  class="MuiDataGrid-dataContainer"
                                  style="min-width: 100px; min-height: 52px;"
                                >
                                  <div
                                    class="MuiDataGrid-viewport"
                                    style="min-width: 0; max-width: 0; max-height: 0;"
                                  >
                                    <div
                                      class="MuiDataGrid-renderingZone"
                                      style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                    >
                                      <div
                                        aria-rowindex="2"
                                        aria-selected="false"
                                        class="Mui-even MuiDataGrid-row"
                                        data-id="1"
                                        data-rowindex="0"
                                        role="row"
                                        style="max-height: 52px; min-height: 52px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                          data-colindex="0"
                                          data-field="decimalTwoPlaces"
                                          data-mode="view"
                                          data-rowindex="0"
                                          data-rowselected="false"
                                          data-value="0.34456"
                                          role="cell"
                                          style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                          tabindex="-1"
                                        >
                                          0.34
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="Mui-resizeTriggers"
                          >
                            <div
                              class="expand-trigger"
                            >
                              <div
                                style="width: 1px; height: 1px;"
                              />
                            </div>
                            <div
                              class="contract-trigger"
                            />
                          </div>
                        </div>
                        <div>
                          <div
                            class="MuiDataGrid-footerContainer"
                          >
                            <div />
                            <div
                              class="MuiTablePagination-root"
                            >
                              <div
                                class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                              >
                                <div
                                  class="MuiTablePagination-spacer"
                                />
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                  id="mui-100000"
                                >
                                  Linhas por página:
                                </p>
                                <div
                                  class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-100000 mui-100000"
                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-100000"
                                    role="button"
                                    tabindex="0"
                                  >
                                    100
                                  </div>
                                  <input
                                    aria-hidden="true"
                                    class="MuiSelect-nativeInput"
                                    tabindex="-1"
                                    value="100"
                                  />
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </div>
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                >
                                  1-1 de 1
                                </p>
                                <div
                                  class="MuiTablePagination-actions"
                                >
                                  <button
                                    aria-label="Página anterior"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Página anterior"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                  <button
                                    aria-label="Próxima página"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Próxima página"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "scroll": [Function],
                    "scrollToIndexes": [Function],
                    "selectRow": [Function],
                    "selectRows": [Function],
                    "setCellFocus": [Function],
                    "setCellMode": [Function],
                    "setCellValue": [Function],
                    "setColumnHeaderFocus": [Function],
                    "setColumnIndex": [Function],
                    "setColumnVisibility": [Function],
                    "setColumnWidth": [Function],
                    "setDensity": [Function],
                    "setEditCellProps": [Function],
                    "setEditRowsModel": [Function],
                    "setFilterModel": [Function],
                    "setPage": [Function],
                    "setPageSize": [Function],
                    "setRows": [Function],
                    "setSelectionModel": [Function],
                    "setSortModel": [Function],
                    "setState": [Function],
                    "showColumnMenu": [Function],
                    "showError": [Function],
                    "showFilterPanel": [Function],
                    "showPreferences": [Function],
                    "sortColumn": [Function],
                    "state": Object {
                      "columnMenu": Object {
                        "open": false,
                      },
                      "columnReorder": Object {
                        "dragCol": "",
                      },
                      "columnResize": Object {
                        "resizingColumnField": "",
                      },
                      "columns": Object {
                        "all": Array [
                          "decimalTwoPlaces",
                        ],
                        "lookup": Object {
                          "decimalTwoPlaces": Object {
                            "align": "right",
                            "cellClassName": "font-tabular-nums",
                            "field": "decimalTwoPlaces",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "headerName": "Decimal Two Places",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                        },
                      },
                      "containerSizes": Object {
                        "dataContainerSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "isVirtualized": false,
                        "lastPage": 1,
                        "renderingZone": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "renderingZonePageSize": 1,
                        "renderingZoneScrollHeight": 52,
                        "totalSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "viewportPageSize": 1,
                        "virtualRowsCount": 1,
                        "windowSizes": Object {
                          "height": 0,
                          "width": 0,
                        },
                      },
                      "density": Object {
                        "headerHeight": 56,
                        "rowHeight": 52,
                        "value": "standard",
                      },
                      "editRows": Object {},
                      "error": undefined,
                      "filter": Object {
                        "items": Array [],
                        "linkOperator": "and",
                      },
                      "focus": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "isScrolling": false,
                      "options": Object {
                        "checkboxSelectionVisibleOnly": false,
                        "classes": Object {
                          "cell": "MuiDataGrid-cell",
                          "columnHeader": "MuiDataGrid-columnHeader",
                          "root": "MuiDataGrid-root",
                          "row": "MuiDataGrid-row",
                        },
                        "columnBuffer": 2,
                        "columnTypes": Object {
                          "__default__": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                          "boolean": Object {
                            "align": "center",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "center",
                            "hide": false,
                            "renderCell": [Function],
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "boolean",
                            "width": 100,
                          },
                          "date": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "date",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "dateTime": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "dateTime",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "number": Object {
                            "align": "right",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                          "singleSelect": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "singleSelect",
                            "width": 100,
                          },
                          "string": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                        },
                        "columns": Array [
                          Object {
                            "cellClassName": "font-tabular-nums",
                            "field": "decimalTwoPlaces",
                            "headerName": "Decimal Two Places",
                            "type": "number",
                            "valueFormatter": [Function],
                          },
                        ],
                        "density": "standard",
                        "disableColumnReorder": true,
                        "disableColumnResize": true,
                        "disableMultipleColumnsFiltering": true,
                        "disableMultipleColumnsSorting": true,
                        "disableMultipleSelection": true,
                        "filterMode": "client",
                        "headerHeight": 56,
                        "isRtl": false,
                        "licenseStatus": "Valid",
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "filterValueAny": "any",
                          "filterValueFalse": "false",
                          "filterValueTrue": "true",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                        "logLevel": "warn",
                        "logger": BufferedConsole {
                          "Console": [Function],
                          "_buffer": Array [],
                          "_counters": Object {},
                          "_groupDepth": 0,
                          "_timers": Object {},
                          "assert": [Function],
                          "clear": [Function],
                          "count": [Function],
                          "countReset": [Function],
                          "debug": [Function],
                          "dir": [Function],
                          "dirxml": [Function],
                          "error": [Function],
                          "group": [Function],
                          "groupCollapsed": [Function],
                          "groupEnd": [Function],
                          "info": [Function],
                          "log": [Function],
                          "table": [Function],
                          "time": [Function],
                          "timeEnd": [Function],
                          "timeLog": [Function],
                          "trace": [Function],
                          "warn": [Function],
                        },
                        "pageSize": 100,
                        "pagination": true,
                        "paginationMode": "client",
                        "rowHeight": 52,
                        "rows": Array [
                          Object {
                            "decimalTwoPlaces": 0.34456,
                            "id": 1,
                          },
                        ],
                        "rowsPerPageOptions": Array [
                          25,
                          50,
                          100,
                        ],
                        "scrollEndThreshold": 80,
                        "scrollbarSize": 0,
                        "sortingMode": "client",
                        "sortingOrder": Array [
                          "asc",
                          "desc",
                          null,
                        ],
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "rgb(17, 82, 147)",
                              "light": "rgb(71, 145, 219)",
                              "main": "#1976d2",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {
                            "MuiDataGrid": Object {
                              "localeText": Object {
                                "MuiTablePagination": Object {
                                  "backIconButtonText": "Página anterior",
                                  "labelDisplayedRows": [Function],
                                  "labelRowsPerPage": "Linhas por página:",
                                  "nextIconButtonText": "Próxima página",
                                },
                                "booleanCellFalseLabel": "não",
                                "booleanCellTrueLabel": "sim",
                                "checkboxSelectionHeaderName": "Seleção",
                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                "columnHeaderFiltersTooltipActive": [Function],
                                "columnHeaderSortIconLabel": "Ordenar",
                                "columnMenuFilter": "Filtrar",
                                "columnMenuHideColumn": "Ocultar",
                                "columnMenuLabel": "Menu",
                                "columnMenuShowColumns": "Exibir colunas",
                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                "columnMenuUnsort": "Desfazer ordenação",
                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                "columnsPanelHideAllButton": "Ocultar todas",
                                "columnsPanelShowAllButton": "Mostrar todas",
                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                "filterOperatorAfter": "após",
                                "filterOperatorBefore": "antes de",
                                "filterOperatorContains": "contém",
                                "filterOperatorEndsWith": "termina com",
                                "filterOperatorEquals": "é igual a",
                                "filterOperatorIs": "é",
                                "filterOperatorNot": "não é",
                                "filterOperatorOnOrAfter": "em ou após",
                                "filterOperatorOnOrBefore": "em ou antes de",
                                "filterOperatorStartsWith": "começa com",
                                "filterPanelAddFilter": "Adicionar filtro",
                                "filterPanelColumns": "Colunas",
                                "filterPanelDeleteIconLabel": "Excluir",
                                "filterPanelInputLabel": "Valor",
                                "filterPanelInputPlaceholder": "Filtrar valor",
                                "filterPanelOperatorAnd": "E",
                                "filterPanelOperatorOr": "Ou",
                                "filterPanelOperators": "Operadores",
                                "footerRowSelected": [Function],
                                "footerTotalRows": "Total de linhas:",
                                "footerTotalVisibleRows": [Function],
                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                "noRowsLabel": "Nenhuma linha",
                                "toolbarColumns": "Colunas",
                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                "toolbarDensity": "Densidade",
                                "toolbarDensityComfortable": "Confortável",
                                "toolbarDensityCompact": "Compacto",
                                "toolbarDensityLabel": "Densidade",
                                "toolbarDensityStandard": "Padrão",
                                "toolbarExport": "Exportar",
                                "toolbarExportCSV": "Baixar como CSV",
                                "toolbarExportLabel": "Exportar",
                                "toolbarFilters": "Filtros",
                                "toolbarFiltersLabel": "Exibir filtros",
                                "toolbarFiltersTooltipActive": [Function],
                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                "toolbarFiltersTooltipShow": "Exibir filtros",
                              },
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                          Symbol(mui.nested): false,
                        },
                      },
                      "pagination": Object {
                        "page": 0,
                        "pageCount": 1,
                        "pageSize": 100,
                        "paginationMode": "client",
                        "rowCount": 1,
                      },
                      "preferencePanel": Object {
                        "open": false,
                      },
                      "rendering": Object {
                        "realScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "renderContext": Object {
                          "firstColIdx": 0,
                          "firstRowIdx": 0,
                          "lastColIdx": 0,
                          "lastRowIdx": 1,
                          "leftEmptyWidth": 0,
                          "page": 0,
                          "pageSize": 100,
                          "paginationCurrentPage": 0,
                          "rightEmptyWidth": 0,
                        },
                        "renderedSizes": Object {
                          "dataContainerSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "isVirtualized": false,
                          "lastPage": 1,
                          "renderingZone": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "renderingZonePageSize": 1,
                          "renderingZoneScrollHeight": 52,
                          "totalSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "viewportPageSize": 1,
                          "virtualRowsCount": 1,
                          "windowSizes": Object {
                            "height": 0,
                            "width": 0,
                          },
                        },
                        "renderingZoneScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "virtualPage": 0,
                        "virtualRowsCount": 0,
                      },
                      "rows": Object {
                        "allRows": Array [
                          1,
                        ],
                        "idRowsLookup": Object {
                          "1": Object {
                            "decimalTwoPlaces": 0.34456,
                            "id": 1,
                          },
                        },
                        "totalRowCount": 1,
                      },
                      "scrollBar": Object {
                        "hasScrollX": true,
                        "hasScrollY": true,
                        "scrollBarSize": Object {
                          "x": 0,
                          "y": 0,
                        },
                      },
                      "selection": Object {},
                      "sorting": Object {
                        "sortModel": Array [],
                        "sortedRows": Array [
                          1,
                        ],
                      },
                      "tabIndex": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "viewportSizes": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "visibleRows": Object {
                        "visibleRowsLookup": Object {},
                      },
                    },
                    "subscribeEvent": [Function],
                    "toggleColumnMenu": [Function],
                    "updateColumn": [Function],
                    "updateColumns": [Function],
                    "updateRows": [Function],
                    "updateViewport": [Function],
                    "upsertFilter": [Function],
                    "warnOnce": false,
                    "windowRef": Object {
                      "current": <div
                        class="MuiDataGrid-window"
                        style="top: 56px; overflow-y: auto;"
                      >
                        <div
                          class="MuiDataGrid-dataContainer"
                          style="min-width: 100px; min-height: 52px;"
                        >
                          <div
                            class="MuiDataGrid-viewport"
                            style="min-width: 0; max-width: 0; max-height: 0;"
                          >
                            <div
                              class="MuiDataGrid-renderingZone"
                              style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                            >
                              <div
                                aria-rowindex="2"
                                aria-selected="false"
                                class="Mui-even MuiDataGrid-row"
                                data-id="1"
                                data-rowindex="0"
                                role="row"
                                style="max-height: 52px; min-height: 52px;"
                              >
                                <div
                                  aria-colindex="1"
                                  class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                  data-colindex="0"
                                  data-field="decimalTwoPlaces"
                                  data-mode="view"
                                  data-rowindex="0"
                                  data-rowselected="false"
                                  data-value="0.34456"
                                  role="cell"
                                  style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                  tabindex="-1"
                                >
                                  0.34
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                  },
                }
              }
              props={
                Object {
                  "apiRef": undefined,
                  "checkboxSelectionVisibleOnly": false,
                  "columnBuffer": 2,
                  "columnTypes": Object {
                    "__default__": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                    "boolean": Object {
                      "align": "center",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "center",
                      "hide": false,
                      "renderCell": [Function],
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "boolean",
                      "width": 100,
                    },
                    "date": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "date",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "dateTime": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "dateTime",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "number": Object {
                      "align": "right",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "=",
                          "value": "=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "!=",
                          "value": "!=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">",
                          "value": ">",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">=",
                          "value": ">=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<",
                          "value": "<",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<=",
                          "value": "<=",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "right",
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "number",
                      "valueFormatter": [Function],
                      "valueParser": [Function],
                      "width": 100,
                    },
                    "singleSelect": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "singleSelect",
                      "width": 100,
                    },
                    "string": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                  },
                  "columns": Array [
                    Object {
                      "cellClassName": "font-tabular-nums",
                      "field": "decimalTwoPlaces",
                      "headerName": "Decimal Two Places",
                      "type": "number",
                      "valueFormatter": [Function],
                    },
                  ],
                  "density": "standard",
                  "disableColumnReorder": true,
                  "disableColumnResize": true,
                  "disableMultipleColumnsFiltering": true,
                  "disableMultipleColumnsSorting": true,
                  "disableMultipleSelection": true,
                  "filterMode": "client",
                  "getRowId": undefined,
                  "headerHeight": 56,
                  "isRtl": false,
                  "licenseStatus": "Valid",
                  "localeText": Object {
                    "MuiTablePagination": Object {
                      "backIconButtonText": "Página anterior",
                      "labelDisplayedRows": [Function],
                      "labelRowsPerPage": "Linhas por página:",
                      "nextIconButtonText": "Próxima página",
                    },
                    "booleanCellFalseLabel": "não",
                    "booleanCellTrueLabel": "sim",
                    "checkboxSelectionHeaderName": "Seleção",
                    "columnHeaderFiltersLabel": "Exibir Filtros",
                    "columnHeaderFiltersTooltipActive": [Function],
                    "columnHeaderSortIconLabel": "Ordenar",
                    "columnMenuFilter": "Filtrar",
                    "columnMenuHideColumn": "Ocultar",
                    "columnMenuLabel": "Menu",
                    "columnMenuShowColumns": "Exibir colunas",
                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                    "columnMenuUnsort": "Desfazer ordenação",
                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                    "columnsPanelHideAllButton": "Ocultar todas",
                    "columnsPanelShowAllButton": "Mostrar todas",
                    "columnsPanelTextFieldLabel": "Localizar coluna",
                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                    "filterOperatorAfter": "após",
                    "filterOperatorBefore": "antes de",
                    "filterOperatorContains": "contém",
                    "filterOperatorEndsWith": "termina com",
                    "filterOperatorEquals": "é igual a",
                    "filterOperatorIs": "é",
                    "filterOperatorNot": "não é",
                    "filterOperatorOnOrAfter": "em ou após",
                    "filterOperatorOnOrBefore": "em ou antes de",
                    "filterOperatorStartsWith": "começa com",
                    "filterPanelAddFilter": "Adicionar filtro",
                    "filterPanelColumns": "Colunas",
                    "filterPanelDeleteIconLabel": "Excluir",
                    "filterPanelInputLabel": "Valor",
                    "filterPanelInputPlaceholder": "Filtrar valor",
                    "filterPanelOperatorAnd": "E",
                    "filterPanelOperatorOr": "Ou",
                    "filterPanelOperators": "Operadores",
                    "footerRowSelected": [Function],
                    "footerTotalRows": "Total de linhas:",
                    "footerTotalVisibleRows": [Function],
                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                    "noRowsLabel": "Nenhuma linha",
                    "toolbarColumns": "Colunas",
                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                    "toolbarDensity": "Densidade",
                    "toolbarDensityComfortable": "Confortável",
                    "toolbarDensityCompact": "Compacto",
                    "toolbarDensityLabel": "Densidade",
                    "toolbarDensityStandard": "Padrão",
                    "toolbarExport": "Exportar",
                    "toolbarExportCSV": "Baixar como CSV",
                    "toolbarExportLabel": "Exportar",
                    "toolbarFilters": "Filtros",
                    "toolbarFiltersLabel": "Exibir filtros",
                    "toolbarFiltersTooltipActive": [Function],
                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                    "toolbarFiltersTooltipShow": "Exibir filtros",
                  },
                  "logLevel": "warn",
                  "logger": BufferedConsole {
                    "Console": [Function],
                    "_buffer": Array [],
                    "_counters": Object {},
                    "_groupDepth": 0,
                    "_timers": Object {},
                    "assert": [Function],
                    "clear": [Function],
                    "count": [Function],
                    "countReset": [Function],
                    "debug": [Function],
                    "dir": [Function],
                    "dirxml": [Function],
                    "error": [Function],
                    "group": [Function],
                    "groupCollapsed": [Function],
                    "groupEnd": [Function],
                    "info": [Function],
                    "log": [Function],
                    "table": [Function],
                    "time": [Function],
                    "timeEnd": [Function],
                    "timeLog": [Function],
                    "trace": [Function],
                    "warn": [Function],
                  },
                  "onRowsScrollEnd": undefined,
                  "pageSize": 100,
                  "pagination": true,
                  "paginationMode": "client",
                  "rowHeight": 52,
                  "rows": Array [
                    Object {
                      "decimalTwoPlaces": 0.34456,
                      "id": 1,
                    },
                  ],
                  "rowsPerPageOptions": Array [
                    25,
                    50,
                    100,
                  ],
                  "scrollEndThreshold": 80,
                  "sortingMode": "client",
                  "sortingOrder": Array [
                    "asc",
                    "desc",
                    null,
                  ],
                  "theme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(17, 82, 147)",
                        "light": "rgb(71, 145, 219)",
                        "main": "#1976d2",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {
                      "MuiDataGrid": Object {
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                      },
                    },
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  },
                }
              }
            >
              <ForwardRef>
                <NoSsr>
                  <div
                    aria-colcount={1}
                    aria-multiselectable={false}
                    aria-rowcount={1}
                    className="MuiDataGrid-root MuiDataGrid-root"
                    role="grid"
                  >
                    <vs>
                      <Cs
                        api={
                          Object {
                            "current": Ti {
                              "applyFilter": [Function],
                              "applyFilterLinkOperator": [Function],
                              "applyFilters": [Function],
                              "applySorting": [Function],
                              "columnHeadersContainerElementRef": Object {
                                "current": <div
                                  class="MuiDataGrid-columnsContainer"
                                  style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                >
                                  <div
                                    aria-rowindex="1"
                                    class="MuiDataGrid-columnHeaderWrapper scroll"
                                    role="row"
                                    style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                      data-field="decimalTwoPlaces"
                                      role="columnheader"
                                      style="width: 100px; min-width: 100px; max-width: 100px;"
                                      tabindex="0"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderDraggableContainer"
                                        draggable="false"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitleContainer"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderTitle"
                                            title=""
                                          >
                                            Decimal Two Places
                                          </div>
                                          <div
                                            class="MuiDataGrid-iconButtonContainer"
                                          >
                                            <button
                                              aria-label="Ordenar"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                              tabindex="-1"
                                              title="Ordenar"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                  />
                                                </svg>
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </button>
                                          </div>
                                        </div>
                                        <div
                                          class="MuiDataGrid-menuIcon"
                                        >
                                          <button
                                            aria-controls="mui-100000"
                                            aria-haspopup="true"
                                            aria-label="Menu"
                                            class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                            id="mui-100000"
                                            tabindex="-1"
                                            title="Menu"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-columnSeparator"
                                        style="min-height: 56px; opacity: 1;"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M11 19V5h2v14z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "columnHeadersElementRef": Object {
                                "current": <div
                                  aria-rowindex="1"
                                  class="MuiDataGrid-columnHeaderWrapper scroll"
                                  role="row"
                                  style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                >
                                  <div
                                    aria-colindex="1"
                                    class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                    data-field="decimalTwoPlaces"
                                    role="columnheader"
                                    style="width: 100px; min-width: 100px; max-width: 100px;"
                                    tabindex="0"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderDraggableContainer"
                                      draggable="false"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderTitleContainer"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitle"
                                          title=""
                                        >
                                          Decimal Two Places
                                        </div>
                                        <div
                                          class="MuiDataGrid-iconButtonContainer"
                                        >
                                          <button
                                            aria-label="Ordenar"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                            tabindex="-1"
                                            title="Ordenar"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-menuIcon"
                                      >
                                        <button
                                          aria-controls="mui-100000"
                                          aria-haspopup="true"
                                          aria-label="Menu"
                                          class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                          id="mui-100000"
                                          tabindex="-1"
                                          title="Menu"
                                          type="button"
                                        >
                                          <span
                                            class="MuiIconButton-label"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                    <div
                                      class="MuiDataGrid-columnSeparator"
                                      style="min-height: 56px; opacity: 1;"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11 19V5h2v14z"
                                        />
                                      </svg>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "commitCellChange": [Function],
                              "components": Object {
                                "BooleanCellFalseIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "BooleanCellTrueIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Checkbox": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Naked": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "checked": [Function],
                                      "checkedIcon": [Function],
                                      "classes": [Function],
                                      "color": [Function],
                                      "disableRipple": [Function],
                                      "disabled": [Function],
                                      "icon": [Function],
                                      "id": [Function],
                                      "indeterminate": [Function],
                                      "indeterminateIcon": [Function],
                                      "inputProps": [Function],
                                      "inputRef": [Function],
                                      "onChange": [Function],
                                      "required": [Function],
                                      "size": [Function],
                                      "value": [Function],
                                    },
                                    "render": [Function],
                                  },
                                  "displayName": "WithStyles(ForwardRef(Checkbox))",
                                  "options": Object {
                                    "defaultTheme": Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "activatedOpacity": 0.12,
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "disabledOpacity": 0.38,
                                          "focus": "rgba(0, 0, 0, 0.12)",
                                          "focusOpacity": 0.12,
                                          "hover": "rgba(0, 0, 0, 0.04)",
                                          "hoverOpacity": 0.04,
                                          "selected": "rgba(0, 0, 0, 0.08)",
                                          "selectedOpacity": 0.08,
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "info": Object {
                                          "contrastText": "#fff",
                                          "dark": "#1976d2",
                                          "light": "#64b5f6",
                                          "main": "#2196f3",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                        "warning": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#f57c00",
                                          "light": "#ffb74d",
                                          "main": "#ff9800",
                                        },
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                    },
                                    "name": "MuiCheckbox",
                                  },
                                  "propTypes": Object {
                                    "classes": [Function],
                                    "innerRef": [Function],
                                  },
                                  "render": [Function],
                                  "useStyles": [Function],
                                },
                                "ColumnFilteredIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnMenu": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ColumnMenuIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnResizeIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSelectorIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedAscendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedDescendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnUnsortedIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": [Function],
                                },
                                "ColumnsPanel": [Function],
                                "DensityComfortableIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityCompactIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityStandardIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ErrorOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ExportIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "FilterPanel": [Function],
                                "Footer": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Header": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "LoadingOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoResultsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoRowsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "OpenFilterButtonIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Pagination": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Panel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "PreferencesPanel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Toolbar": undefined,
                              },
                              "componentsProps": undefined,
                              "copySelectedRowsToClipboard": [Function],
                              "deleteFilter": [Function],
                              "events": Object {
                                "cellClick": Array [
                                  [Function],
                                ],
                                "cellDoubleClick": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellDragEnd": Array [
                                  [Function],
                                ],
                                "cellDragEnter": Array [
                                  [Function],
                                ],
                                "cellDragOver": Array [
                                  [Function],
                                ],
                                "cellEditEnter": Array [
                                  [Function],
                                ],
                                "cellEditExit": Array [
                                  [Function],
                                ],
                                "cellEditPropsChange": Array [
                                  [Function],
                                ],
                                "cellEditPropsChangeCommitted": Array [
                                  [Function],
                                ],
                                "cellFocusOut": Array [
                                  [Function],
                                ],
                                "cellKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellModeChange": Array [
                                  [Function],
                                ],
                                "cellMouseDown": Array [
                                  [Function],
                                ],
                                "cellMouseUp": Array [
                                  [Function],
                                ],
                                "cellNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnHeaderBlur": Array [
                                  [Function],
                                ],
                                "columnHeaderClick": Array [
                                  [Function],
                                ],
                                "columnHeaderDragEnd": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderDragEnter": Array [
                                  [Function],
                                ],
                                "columnHeaderDragOver": Array [
                                  [Function],
                                ],
                                "columnHeaderDragStart": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderFocus": Array [
                                  [Function],
                                ],
                                "columnHeaderKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnResizeStart": Array [
                                  [Function],
                                ],
                                "columnResizeStop": Array [
                                  [Function],
                                ],
                                "columnSeparatorMouseDown": Array [
                                  [Function],
                                ],
                                "columnsChange": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "componentError": Array [
                                  [Function],
                                ],
                                "debouncedResize": Array [
                                  [Function],
                                  [Function],
                                ],
                                "keydown": Array [
                                  [Function],
                                ],
                                "resize": Array [
                                  [Function],
                                ],
                                "rowClick": Array [
                                  [Function],
                                ],
                                "rowsClear": Array [
                                  [Function],
                                ],
                                "rowsScroll": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "rowsSet": Array [
                                  [Function],
                                  [Function],
                                ],
                                "rowsUpdate": Array [
                                  [Function],
                                  [Function],
                                ],
                                "unmount": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "exportDataAsCsv": [Function],
                              "footerRef": Object {
                                "current": <div>
                                  <div
                                    class="MuiDataGrid-footerContainer"
                                  >
                                    <div />
                                    <div
                                      class="MuiTablePagination-root"
                                    >
                                      <div
                                        class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          class="MuiTablePagination-spacer"
                                        />
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          id="mui-100000"
                                        >
                                          Linhas por página:
                                        </p>
                                        <div
                                          class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                        >
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-100000 mui-100000"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-100000"
                                            role="button"
                                            tabindex="0"
                                          >
                                            100
                                          </div>
                                          <input
                                            aria-hidden="true"
                                            class="MuiSelect-nativeInput"
                                            tabindex="-1"
                                            value="100"
                                          />
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </div>
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                        >
                                          1-1 de 1
                                        </p>
                                        <div
                                          class="MuiTablePagination-actions"
                                        >
                                          <button
                                            aria-label="Página anterior"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Página anterior"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                          <button
                                            aria-label="Próxima página"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Próxima página"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "forceUpdate": [Function],
                              "getAllColumns": [Function],
                              "getAllRowIds": [Function],
                              "getCellElement": [Function],
                              "getCellMode": [Function],
                              "getCellParams": [Function],
                              "getCellValue": [Function],
                              "getColumn": [Function],
                              "getColumnHeaderElement": [Function],
                              "getColumnHeaderParams": [Function],
                              "getColumnIndex": [Function],
                              "getColumnPosition": [Function],
                              "getColumnsMeta": [Function],
                              "getContainerPropsState": [Function],
                              "getDataAsCsv": [Function],
                              "getEditCellProps": [Function],
                              "getEditCellPropsParams": [Function],
                              "getEditRowsModel": [Function],
                              "getLocaleText": [Function],
                              "getRenderContextState": [Function],
                              "getRow": [Function],
                              "getRowElement": [Function],
                              "getRowIdFromRowIndex": [Function],
                              "getRowIndex": [Function],
                              "getRowModels": [Function],
                              "getRowParams": [Function],
                              "getRowsCount": [Function],
                              "getScrollPosition": [Function],
                              "getSelectedRows": [Function],
                              "getSortModel": [Function],
                              "getSortedRowIds": [Function],
                              "getSortedRows": [Function],
                              "getState": [Function],
                              "getVisibleColumns": [Function],
                              "getVisibleRowModels": [Function],
                              "headerRef": Object {
                                "current": <div>
                                  <div />
                                </div>,
                              },
                              "hideColumnMenu": [Function],
                              "hideFilterPanel": [Function],
                              "hidePreferences": [Function],
                              "isCellEditable": [Function],
                              "isColumnVisibleInWindow": [Function],
                              "maxListeners": 10,
                              "publishEvent": [Function],
                              "renderingZoneRef": Object {
                                "current": <div
                                  class="MuiDataGrid-renderingZone"
                                  style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                >
                                  <div
                                    aria-rowindex="2"
                                    aria-selected="false"
                                    class="Mui-even MuiDataGrid-row"
                                    data-id="1"
                                    data-rowindex="0"
                                    role="row"
                                    style="max-height: 52px; min-height: 52px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                      data-colindex="0"
                                      data-field="decimalTwoPlaces"
                                      data-mode="view"
                                      data-rowindex="0"
                                      data-rowselected="false"
                                      data-value="0.34456"
                                      role="cell"
                                      style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                      tabindex="-1"
                                    >
                                      0.34
                                    </div>
                                  </div>
                                </div>,
                              },
                              "resize": [Function],
                              "rootElementRef": Object {
                                "current": <div
                                  aria-colcount="1"
                                  aria-multiselectable="false"
                                  aria-rowcount="1"
                                  class="MuiDataGrid-root MuiDataGrid-root"
                                  role="grid"
                                >
                                  <div>
                                    <div />
                                  </div>
                                  <div
                                    class="MuiDataGrid-main"
                                  >
                                    <div
                                      class="MuiDataGrid-columnsContainer"
                                      style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                    >
                                      <div
                                        aria-rowindex="1"
                                        class="MuiDataGrid-columnHeaderWrapper scroll"
                                        role="row"
                                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                          data-field="decimalTwoPlaces"
                                          role="columnheader"
                                          style="width: 100px; min-width: 100px; max-width: 100px;"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderDraggableContainer"
                                            draggable="false"
                                          >
                                            <div
                                              class="MuiDataGrid-columnHeaderTitleContainer"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderTitle"
                                                title=""
                                              >
                                                Decimal Two Places
                                              </div>
                                              <div
                                                class="MuiDataGrid-iconButtonContainer"
                                              >
                                                <button
                                                  aria-label="Ordenar"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                  tabindex="-1"
                                                  title="Ordenar"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                            <div
                                              class="MuiDataGrid-menuIcon"
                                            >
                                              <button
                                                aria-controls="mui-100000"
                                                aria-haspopup="true"
                                                aria-label="Menu"
                                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                id="mui-100000"
                                                tabindex="-1"
                                                title="Menu"
                                                type="button"
                                              >
                                                <span
                                                  class="MuiIconButton-label"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                    />
                                                  </svg>
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </button>
                                            </div>
                                          </div>
                                          <div
                                            class="MuiDataGrid-columnSeparator"
                                            style="min-height: 56px; opacity: 1;"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M11 19V5h2v14z"
                                              />
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      style="overflow: visible; height: 0px; width: 0px;"
                                    >
                                      <div
                                        class="MuiDataGrid-windowContainer"
                                        style="width: 0px; height: 0px;"
                                      >
                                        <div
                                          class="MuiDataGrid-window"
                                          style="top: 56px; overflow-y: auto;"
                                        >
                                          <div
                                            class="MuiDataGrid-dataContainer"
                                            style="min-width: 100px; min-height: 52px;"
                                          >
                                            <div
                                              class="MuiDataGrid-viewport"
                                              style="min-width: 0; max-width: 0; max-height: 0;"
                                            >
                                              <div
                                                class="MuiDataGrid-renderingZone"
                                                style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                              >
                                                <div
                                                  aria-rowindex="2"
                                                  aria-selected="false"
                                                  class="Mui-even MuiDataGrid-row"
                                                  data-id="1"
                                                  data-rowindex="0"
                                                  role="row"
                                                  style="max-height: 52px; min-height: 52px;"
                                                >
                                                  <div
                                                    aria-colindex="1"
                                                    class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                                    data-colindex="0"
                                                    data-field="decimalTwoPlaces"
                                                    data-mode="view"
                                                    data-rowindex="0"
                                                    data-rowselected="false"
                                                    data-value="0.34456"
                                                    role="cell"
                                                    style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                                    tabindex="-1"
                                                  >
                                                    0.34
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="Mui-resizeTriggers"
                                    >
                                      <div
                                        class="expand-trigger"
                                      >
                                        <div
                                          style="width: 1px; height: 1px;"
                                        />
                                      </div>
                                      <div
                                        class="contract-trigger"
                                      />
                                    </div>
                                  </div>
                                  <div>
                                    <div
                                      class="MuiDataGrid-footerContainer"
                                    >
                                      <div />
                                      <div
                                        class="MuiTablePagination-root"
                                      >
                                        <div
                                          class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                        >
                                          <div
                                            class="MuiTablePagination-spacer"
                                          />
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                            id="mui-100000"
                                          >
                                            Linhas por página:
                                          </p>
                                          <div
                                            class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                          >
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-100000 mui-100000"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-100000"
                                              role="button"
                                              tabindex="0"
                                            >
                                              100
                                            </div>
                                            <input
                                              aria-hidden="true"
                                              class="MuiSelect-nativeInput"
                                              tabindex="-1"
                                              value="100"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </div>
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          >
                                            1-1 de 1
                                          </p>
                                          <div
                                            class="MuiTablePagination-actions"
                                          >
                                            <button
                                              aria-label="Página anterior"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Página anterior"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                            <button
                                              aria-label="Próxima página"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Próxima página"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "scroll": [Function],
                              "scrollToIndexes": [Function],
                              "selectRow": [Function],
                              "selectRows": [Function],
                              "setCellFocus": [Function],
                              "setCellMode": [Function],
                              "setCellValue": [Function],
                              "setColumnHeaderFocus": [Function],
                              "setColumnIndex": [Function],
                              "setColumnVisibility": [Function],
                              "setColumnWidth": [Function],
                              "setDensity": [Function],
                              "setEditCellProps": [Function],
                              "setEditRowsModel": [Function],
                              "setFilterModel": [Function],
                              "setPage": [Function],
                              "setPageSize": [Function],
                              "setRows": [Function],
                              "setSelectionModel": [Function],
                              "setSortModel": [Function],
                              "setState": [Function],
                              "showColumnMenu": [Function],
                              "showError": [Function],
                              "showFilterPanel": [Function],
                              "showPreferences": [Function],
                              "sortColumn": [Function],
                              "state": Object {
                                "columnMenu": Object {
                                  "open": false,
                                },
                                "columnReorder": Object {
                                  "dragCol": "",
                                },
                                "columnResize": Object {
                                  "resizingColumnField": "",
                                },
                                "columns": Object {
                                  "all": Array [
                                    "decimalTwoPlaces",
                                  ],
                                  "lookup": Object {
                                    "decimalTwoPlaces": Object {
                                      "align": "right",
                                      "cellClassName": "font-tabular-nums",
                                      "field": "decimalTwoPlaces",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "headerName": "Decimal Two Places",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                  },
                                },
                                "containerSizes": Object {
                                  "dataContainerSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "isVirtualized": false,
                                  "lastPage": 1,
                                  "renderingZone": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "renderingZonePageSize": 1,
                                  "renderingZoneScrollHeight": 52,
                                  "totalSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "viewportPageSize": 1,
                                  "virtualRowsCount": 1,
                                  "windowSizes": Object {
                                    "height": 0,
                                    "width": 0,
                                  },
                                },
                                "density": Object {
                                  "headerHeight": 56,
                                  "rowHeight": 52,
                                  "value": "standard",
                                },
                                "editRows": Object {},
                                "error": undefined,
                                "filter": Object {
                                  "items": Array [],
                                  "linkOperator": "and",
                                },
                                "focus": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "isScrolling": false,
                                "options": Object {
                                  "checkboxSelectionVisibleOnly": false,
                                  "classes": Object {
                                    "cell": "MuiDataGrid-cell",
                                    "columnHeader": "MuiDataGrid-columnHeader",
                                    "root": "MuiDataGrid-root",
                                    "row": "MuiDataGrid-row",
                                  },
                                  "columnBuffer": 2,
                                  "columnTypes": Object {
                                    "__default__": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                    "boolean": Object {
                                      "align": "center",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "center",
                                      "hide": false,
                                      "renderCell": [Function],
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "boolean",
                                      "width": 100,
                                    },
                                    "date": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "date",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "dateTime": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "dateTime",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "number": Object {
                                      "align": "right",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                    "singleSelect": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "singleSelect",
                                      "width": 100,
                                    },
                                    "string": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                  },
                                  "columns": Array [
                                    Object {
                                      "cellClassName": "font-tabular-nums",
                                      "field": "decimalTwoPlaces",
                                      "headerName": "Decimal Two Places",
                                      "type": "number",
                                      "valueFormatter": [Function],
                                    },
                                  ],
                                  "density": "standard",
                                  "disableColumnReorder": true,
                                  "disableColumnResize": true,
                                  "disableMultipleColumnsFiltering": true,
                                  "disableMultipleColumnsSorting": true,
                                  "disableMultipleSelection": true,
                                  "filterMode": "client",
                                  "headerHeight": 56,
                                  "isRtl": false,
                                  "licenseStatus": "Valid",
                                  "localeText": Object {
                                    "MuiTablePagination": Object {
                                      "backIconButtonText": "Página anterior",
                                      "labelDisplayedRows": [Function],
                                      "labelRowsPerPage": "Linhas por página:",
                                      "nextIconButtonText": "Próxima página",
                                    },
                                    "booleanCellFalseLabel": "não",
                                    "booleanCellTrueLabel": "sim",
                                    "checkboxSelectionHeaderName": "Seleção",
                                    "columnHeaderFiltersLabel": "Exibir Filtros",
                                    "columnHeaderFiltersTooltipActive": [Function],
                                    "columnHeaderSortIconLabel": "Ordenar",
                                    "columnMenuFilter": "Filtrar",
                                    "columnMenuHideColumn": "Ocultar",
                                    "columnMenuLabel": "Menu",
                                    "columnMenuShowColumns": "Exibir colunas",
                                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                                    "columnMenuUnsort": "Desfazer ordenação",
                                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                                    "columnsPanelHideAllButton": "Ocultar todas",
                                    "columnsPanelShowAllButton": "Mostrar todas",
                                    "columnsPanelTextFieldLabel": "Localizar coluna",
                                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                    "filterOperatorAfter": "após",
                                    "filterOperatorBefore": "antes de",
                                    "filterOperatorContains": "contém",
                                    "filterOperatorEndsWith": "termina com",
                                    "filterOperatorEquals": "é igual a",
                                    "filterOperatorIs": "é",
                                    "filterOperatorNot": "não é",
                                    "filterOperatorOnOrAfter": "em ou após",
                                    "filterOperatorOnOrBefore": "em ou antes de",
                                    "filterOperatorStartsWith": "começa com",
                                    "filterPanelAddFilter": "Adicionar filtro",
                                    "filterPanelColumns": "Colunas",
                                    "filterPanelDeleteIconLabel": "Excluir",
                                    "filterPanelInputLabel": "Valor",
                                    "filterPanelInputPlaceholder": "Filtrar valor",
                                    "filterPanelOperatorAnd": "E",
                                    "filterPanelOperatorOr": "Ou",
                                    "filterPanelOperators": "Operadores",
                                    "filterValueAny": "any",
                                    "filterValueFalse": "false",
                                    "filterValueTrue": "true",
                                    "footerRowSelected": [Function],
                                    "footerTotalRows": "Total de linhas:",
                                    "footerTotalVisibleRows": [Function],
                                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                    "noRowsLabel": "Nenhuma linha",
                                    "toolbarColumns": "Colunas",
                                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                                    "toolbarDensity": "Densidade",
                                    "toolbarDensityComfortable": "Confortável",
                                    "toolbarDensityCompact": "Compacto",
                                    "toolbarDensityLabel": "Densidade",
                                    "toolbarDensityStandard": "Padrão",
                                    "toolbarExport": "Exportar",
                                    "toolbarExportCSV": "Baixar como CSV",
                                    "toolbarExportLabel": "Exportar",
                                    "toolbarFilters": "Filtros",
                                    "toolbarFiltersLabel": "Exibir filtros",
                                    "toolbarFiltersTooltipActive": [Function],
                                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                                    "toolbarFiltersTooltipShow": "Exibir filtros",
                                  },
                                  "logLevel": "warn",
                                  "logger": BufferedConsole {
                                    "Console": [Function],
                                    "_buffer": Array [],
                                    "_counters": Object {},
                                    "_groupDepth": 0,
                                    "_timers": Object {},
                                    "assert": [Function],
                                    "clear": [Function],
                                    "count": [Function],
                                    "countReset": [Function],
                                    "debug": [Function],
                                    "dir": [Function],
                                    "dirxml": [Function],
                                    "error": [Function],
                                    "group": [Function],
                                    "groupCollapsed": [Function],
                                    "groupEnd": [Function],
                                    "info": [Function],
                                    "log": [Function],
                                    "table": [Function],
                                    "time": [Function],
                                    "timeEnd": [Function],
                                    "timeLog": [Function],
                                    "trace": [Function],
                                    "warn": [Function],
                                  },
                                  "pageSize": 100,
                                  "pagination": true,
                                  "paginationMode": "client",
                                  "rowHeight": 52,
                                  "rows": Array [
                                    Object {
                                      "decimalTwoPlaces": 0.34456,
                                      "id": 1,
                                    },
                                  ],
                                  "rowsPerPageOptions": Array [
                                    25,
                                    50,
                                    100,
                                  ],
                                  "scrollEndThreshold": 80,
                                  "scrollbarSize": 0,
                                  "sortingMode": "client",
                                  "sortingOrder": Array [
                                    "asc",
                                    "desc",
                                    null,
                                  ],
                                  "theme": Object {
                                    "breakpoints": Object {
                                      "between": [Function],
                                      "down": [Function],
                                      "keys": Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ],
                                      "only": [Function],
                                      "up": [Function],
                                      "values": Object {
                                        "lg": 1280,
                                        "md": 960,
                                        "sm": 600,
                                        "xl": 1920,
                                        "xs": 0,
                                      },
                                      "width": [Function],
                                    },
                                    "direction": "ltr",
                                    "mixins": Object {
                                      "gutters": [Function],
                                      "toolbar": Object {
                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                          "minHeight": 48,
                                        },
                                        "@media (min-width:600px)": Object {
                                          "minHeight": 64,
                                        },
                                        "minHeight": 56,
                                      },
                                    },
                                    "overrides": Object {},
                                    "palette": Object {
                                      "action": Object {
                                        "activatedOpacity": 0.12,
                                        "active": "rgba(0, 0, 0, 0.54)",
                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                        "disabledOpacity": 0.38,
                                        "focus": "rgba(0, 0, 0, 0.12)",
                                        "focusOpacity": 0.12,
                                        "hover": "rgba(0, 0, 0, 0.04)",
                                        "hoverOpacity": 0.04,
                                        "selected": "rgba(0, 0, 0, 0.08)",
                                        "selectedOpacity": 0.08,
                                      },
                                      "augmentColor": [Function],
                                      "background": Object {
                                        "default": "#fafafa",
                                        "paper": "#fff",
                                      },
                                      "common": Object {
                                        "black": "#000",
                                        "white": "#fff",
                                      },
                                      "contrastThreshold": 3,
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "error": Object {
                                        "contrastText": "#fff",
                                        "dark": "#d32f2f",
                                        "light": "#e57373",
                                        "main": "#f44336",
                                      },
                                      "getContrastText": [Function],
                                      "grey": Object {
                                        "100": "#f5f5f5",
                                        "200": "#eeeeee",
                                        "300": "#e0e0e0",
                                        "400": "#bdbdbd",
                                        "50": "#fafafa",
                                        "500": "#9e9e9e",
                                        "600": "#757575",
                                        "700": "#616161",
                                        "800": "#424242",
                                        "900": "#212121",
                                        "A100": "#d5d5d5",
                                        "A200": "#aaaaaa",
                                        "A400": "#303030",
                                        "A700": "#616161",
                                      },
                                      "info": Object {
                                        "contrastText": "#fff",
                                        "dark": "#1976d2",
                                        "light": "#64b5f6",
                                        "main": "#2196f3",
                                      },
                                      "primary": Object {
                                        "contrastText": "#fff",
                                        "dark": "rgb(17, 82, 147)",
                                        "light": "rgb(71, 145, 219)",
                                        "main": "#1976d2",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#c51162",
                                        "light": "#ff4081",
                                        "main": "#f50057",
                                      },
                                      "success": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#388e3c",
                                        "light": "#81c784",
                                        "main": "#4caf50",
                                      },
                                      "text": Object {
                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                        "hint": "rgba(0, 0, 0, 0.38)",
                                        "primary": "rgba(0, 0, 0, 0.87)",
                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                      },
                                      "tonalOffset": 0.2,
                                      "type": "light",
                                      "warning": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#f57c00",
                                        "light": "#ffb74d",
                                        "main": "#ff9800",
                                      },
                                    },
                                    "props": Object {
                                      "MuiDataGrid": Object {
                                        "localeText": Object {
                                          "MuiTablePagination": Object {
                                            "backIconButtonText": "Página anterior",
                                            "labelDisplayedRows": [Function],
                                            "labelRowsPerPage": "Linhas por página:",
                                            "nextIconButtonText": "Próxima página",
                                          },
                                          "booleanCellFalseLabel": "não",
                                          "booleanCellTrueLabel": "sim",
                                          "checkboxSelectionHeaderName": "Seleção",
                                          "columnHeaderFiltersLabel": "Exibir Filtros",
                                          "columnHeaderFiltersTooltipActive": [Function],
                                          "columnHeaderSortIconLabel": "Ordenar",
                                          "columnMenuFilter": "Filtrar",
                                          "columnMenuHideColumn": "Ocultar",
                                          "columnMenuLabel": "Menu",
                                          "columnMenuShowColumns": "Exibir colunas",
                                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                                          "columnMenuUnsort": "Desfazer ordenação",
                                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                                          "columnsPanelHideAllButton": "Ocultar todas",
                                          "columnsPanelShowAllButton": "Mostrar todas",
                                          "columnsPanelTextFieldLabel": "Localizar coluna",
                                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                          "filterOperatorAfter": "após",
                                          "filterOperatorBefore": "antes de",
                                          "filterOperatorContains": "contém",
                                          "filterOperatorEndsWith": "termina com",
                                          "filterOperatorEquals": "é igual a",
                                          "filterOperatorIs": "é",
                                          "filterOperatorNot": "não é",
                                          "filterOperatorOnOrAfter": "em ou após",
                                          "filterOperatorOnOrBefore": "em ou antes de",
                                          "filterOperatorStartsWith": "começa com",
                                          "filterPanelAddFilter": "Adicionar filtro",
                                          "filterPanelColumns": "Colunas",
                                          "filterPanelDeleteIconLabel": "Excluir",
                                          "filterPanelInputLabel": "Valor",
                                          "filterPanelInputPlaceholder": "Filtrar valor",
                                          "filterPanelOperatorAnd": "E",
                                          "filterPanelOperatorOr": "Ou",
                                          "filterPanelOperators": "Operadores",
                                          "footerRowSelected": [Function],
                                          "footerTotalRows": "Total de linhas:",
                                          "footerTotalVisibleRows": [Function],
                                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                          "noRowsLabel": "Nenhuma linha",
                                          "toolbarColumns": "Colunas",
                                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                                          "toolbarDensity": "Densidade",
                                          "toolbarDensityComfortable": "Confortável",
                                          "toolbarDensityCompact": "Compacto",
                                          "toolbarDensityLabel": "Densidade",
                                          "toolbarDensityStandard": "Padrão",
                                          "toolbarExport": "Exportar",
                                          "toolbarExportCSV": "Baixar como CSV",
                                          "toolbarExportLabel": "Exportar",
                                          "toolbarFilters": "Filtros",
                                          "toolbarFiltersLabel": "Exibir filtros",
                                          "toolbarFiltersTooltipActive": [Function],
                                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                                          "toolbarFiltersTooltipShow": "Exibir filtros",
                                        },
                                      },
                                    },
                                    "shadows": Array [
                                      "none",
                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                    ],
                                    "shape": Object {
                                      "borderRadius": 4,
                                    },
                                    "spacing": [Function],
                                    "transitions": Object {
                                      "create": [Function],
                                      "duration": Object {
                                        "complex": 375,
                                        "enteringScreen": 225,
                                        "leavingScreen": 195,
                                        "short": 250,
                                        "shorter": 200,
                                        "shortest": 150,
                                        "standard": 300,
                                      },
                                      "easing": Object {
                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                      },
                                      "getAutoHeightDuration": [Function],
                                    },
                                    "typography": Object {
                                      "body1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.5,
                                      },
                                      "body2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.01071em",
                                        "lineHeight": 1.43,
                                      },
                                      "button": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.02857em",
                                        "lineHeight": 1.75,
                                        "textTransform": "uppercase",
                                      },
                                      "caption": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.03333em",
                                        "lineHeight": 1.66,
                                      },
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": 14,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.01562em",
                                        "lineHeight": 1.167,
                                      },
                                      "h2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.00833em",
                                        "lineHeight": 1.2,
                                      },
                                      "h3": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.167,
                                      },
                                      "h4": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00735em",
                                        "lineHeight": 1.235,
                                      },
                                      "h5": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.334,
                                      },
                                      "h6": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.25rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.0075em",
                                        "lineHeight": 1.6,
                                      },
                                      "htmlFontSize": 16,
                                      "overline": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.08333em",
                                        "lineHeight": 2.66,
                                        "textTransform": "uppercase",
                                      },
                                      "pxToRem": [Function],
                                      "round": [Function],
                                      "subtitle1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.75,
                                      },
                                      "subtitle2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.00714em",
                                        "lineHeight": 1.57,
                                      },
                                    },
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "drawer": 1200,
                                      "mobileStepper": 1000,
                                      "modal": 1300,
                                      "snackbar": 1400,
                                      "speedDial": 1050,
                                      "tooltip": 1500,
                                    },
                                    Symbol(mui.nested): false,
                                  },
                                },
                                "pagination": Object {
                                  "page": 0,
                                  "pageCount": 1,
                                  "pageSize": 100,
                                  "paginationMode": "client",
                                  "rowCount": 1,
                                },
                                "preferencePanel": Object {
                                  "open": false,
                                },
                                "rendering": Object {
                                  "realScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "renderContext": Object {
                                    "firstColIdx": 0,
                                    "firstRowIdx": 0,
                                    "lastColIdx": 0,
                                    "lastRowIdx": 1,
                                    "leftEmptyWidth": 0,
                                    "page": 0,
                                    "pageSize": 100,
                                    "paginationCurrentPage": 0,
                                    "rightEmptyWidth": 0,
                                  },
                                  "renderedSizes": Object {
                                    "dataContainerSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "isVirtualized": false,
                                    "lastPage": 1,
                                    "renderingZone": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "renderingZonePageSize": 1,
                                    "renderingZoneScrollHeight": 52,
                                    "totalSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "viewportPageSize": 1,
                                    "virtualRowsCount": 1,
                                    "windowSizes": Object {
                                      "height": 0,
                                      "width": 0,
                                    },
                                  },
                                  "renderingZoneScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "virtualPage": 0,
                                  "virtualRowsCount": 0,
                                },
                                "rows": Object {
                                  "allRows": Array [
                                    1,
                                  ],
                                  "idRowsLookup": Object {
                                    "1": Object {
                                      "decimalTwoPlaces": 0.34456,
                                      "id": 1,
                                    },
                                  },
                                  "totalRowCount": 1,
                                },
                                "scrollBar": Object {
                                  "hasScrollX": true,
                                  "hasScrollY": true,
                                  "scrollBarSize": Object {
                                    "x": 0,
                                    "y": 0,
                                  },
                                },
                                "selection": Object {},
                                "sorting": Object {
                                  "sortModel": Array [],
                                  "sortedRows": Array [
                                    1,
                                  ],
                                },
                                "tabIndex": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "viewportSizes": Object {
                                  "height": 0,
                                  "width": 0,
                                },
                                "visibleRows": Object {
                                  "visibleRowsLookup": Object {},
                                },
                              },
                              "subscribeEvent": [Function],
                              "toggleColumnMenu": [Function],
                              "updateColumn": [Function],
                              "updateColumns": [Function],
                              "updateRows": [Function],
                              "updateViewport": [Function],
                              "upsertFilter": [Function],
                              "warnOnce": false,
                              "windowRef": Object {
                                "current": <div
                                  class="MuiDataGrid-window"
                                  style="top: 56px; overflow-y: auto;"
                                >
                                  <div
                                    class="MuiDataGrid-dataContainer"
                                    style="min-width: 100px; min-height: 52px;"
                                  >
                                    <div
                                      class="MuiDataGrid-viewport"
                                      style="min-width: 0; max-width: 0; max-height: 0;"
                                    >
                                      <div
                                        class="MuiDataGrid-renderingZone"
                                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                      >
                                        <div
                                          aria-rowindex="2"
                                          aria-selected="false"
                                          class="Mui-even MuiDataGrid-row"
                                          data-id="1"
                                          data-rowindex="0"
                                          role="row"
                                          style="max-height: 52px; min-height: 52px;"
                                        >
                                          <div
                                            aria-colindex="1"
                                            class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                            data-colindex="0"
                                            data-field="decimalTwoPlaces"
                                            data-mode="view"
                                            data-rowindex="0"
                                            data-rowselected="false"
                                            data-value="0.34456"
                                            role="cell"
                                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                            tabindex="-1"
                                          >
                                            0.34
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                            },
                          }
                        }
                        hasError={false}
                        logger={
                          Object {
                            "debug": [Function],
                            "error": [Function],
                            "info": [Function],
                            "warn": [Function],
                          }
                        }
                        render={[Function]}
                      >
                        <Es>
                          <div>
                            <ForwardRef>
                              <div>
                                <ForwardRef>
                                  <ForwardRef
                                    open={false}
                                  >
                                    <ForwardRef(Popper)
                                      anchorEl={
                                        <div
                                          class="MuiDataGrid-columnsContainer"
                                          style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                        >
                                          <div
                                            aria-rowindex="1"
                                            class="MuiDataGrid-columnHeaderWrapper scroll"
                                            role="row"
                                            style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                          >
                                            <div
                                              aria-colindex="1"
                                              class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                              data-field="decimalTwoPlaces"
                                              role="columnheader"
                                              style="width: 100px; min-width: 100px; max-width: 100px;"
                                              tabindex="0"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderDraggableContainer"
                                                draggable="false"
                                              >
                                                <div
                                                  class="MuiDataGrid-columnHeaderTitleContainer"
                                                >
                                                  <div
                                                    class="MuiDataGrid-columnHeaderTitle"
                                                    title=""
                                                  >
                                                    Decimal Two Places
                                                  </div>
                                                  <div
                                                    class="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <button
                                                      aria-label="Ordenar"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                      tabindex="-1"
                                                      title="Ordenar"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiDataGrid-menuIcon"
                                                >
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDataGrid-columnSeparator"
                                                style="min-height: 56px; opacity: 1;"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M11 19V5h2v14z"
                                                  />
                                                </svg>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      className="MuiGridPanel-root"
                                      modifiers={
                                        Object {
                                          "flip": Object {
                                            "enabled": false,
                                          },
                                        }
                                      }
                                      open={false}
                                      placement="bottom-start"
                                    />
                                  </ForwardRef>
                                </ForwardRef>
                              </div>
                            </ForwardRef>
                          </div>
                        </Es>
                        <Ss>
                          <hs>
                            <div
                              className="MuiDataGrid-main"
                            >
                              <ws />
                              <ni
                                licenseStatus="Valid"
                              />
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-columnsContainer"
                                  style={
                                    Object {
                                      "lineHeight": "56px",
                                      "maxHeight": 56,
                                      "minHeight": 56,
                                    }
                                  }
                                >
                                  <ForwardRef>
                                    <Memo()
                                      scrollDirection="left"
                                    />
                                    <div
                                      aria-rowindex={1}
                                      className="MuiDataGrid-columnHeaderWrapper scroll"
                                      role="row"
                                      style={
                                        Object {
                                          "minWidth": 100,
                                        }
                                      }
                                    >
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                      <ia
                                        columns={
                                          Array [
                                            Object {
                                              "align": "right",
                                              "cellClassName": "font-tabular-nums",
                                              "field": "decimalTwoPlaces",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "=",
                                                  "value": "=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "!=",
                                                  "value": "!=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">",
                                                  "value": ">",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">=",
                                                  "value": ">=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<",
                                                  "value": "<",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<=",
                                                  "value": "<=",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerAlign": "right",
                                              "headerName": "Decimal Two Places",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "number",
                                              "valueFormatter": [Function],
                                              "valueParser": [Function],
                                              "width": 100,
                                            },
                                          ]
                                        }
                                      >
                                        <Zn
                                          colIndex={0}
                                          column={
                                            Object {
                                              "align": "right",
                                              "cellClassName": "font-tabular-nums",
                                              "field": "decimalTwoPlaces",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "=",
                                                  "value": "=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "!=",
                                                  "value": "!=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">",
                                                  "value": ">",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">=",
                                                  "value": ">=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<",
                                                  "value": "<",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<=",
                                                  "value": "<=",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerAlign": "right",
                                              "headerName": "Decimal Two Places",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "number",
                                              "valueFormatter": [Function],
                                              "valueParser": [Function],
                                              "width": 100,
                                            }
                                          }
                                          columnMenuOpen={false}
                                          hasFocus={false}
                                          headerHeight={56}
                                          isDragging={false}
                                          isResizing={false}
                                          key="decimalTwoPlaces"
                                          options={
                                            Object {
                                              "checkboxSelectionVisibleOnly": false,
                                              "classes": Object {
                                                "cell": "MuiDataGrid-cell",
                                                "columnHeader": "MuiDataGrid-columnHeader",
                                                "root": "MuiDataGrid-root",
                                                "row": "MuiDataGrid-row",
                                              },
                                              "columnBuffer": 2,
                                              "columnTypes": Object {
                                                "__default__": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                                "boolean": Object {
                                                  "align": "center",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "center",
                                                  "hide": false,
                                                  "renderCell": [Function],
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "boolean",
                                                  "width": 100,
                                                },
                                                "date": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "date",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "dateTime": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "dateTime",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "number": Object {
                                                  "align": "right",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "=",
                                                      "value": "=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "!=",
                                                      "value": "!=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">",
                                                      "value": ">",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">=",
                                                      "value": ">=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<",
                                                      "value": "<",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<=",
                                                      "value": "<=",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "right",
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                  "valueParser": [Function],
                                                  "width": 100,
                                                },
                                                "singleSelect": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "singleSelect",
                                                  "width": 100,
                                                },
                                                "string": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                              },
                                              "columns": Array [
                                                Object {
                                                  "cellClassName": "font-tabular-nums",
                                                  "field": "decimalTwoPlaces",
                                                  "headerName": "Decimal Two Places",
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                },
                                              ],
                                              "density": "standard",
                                              "disableColumnReorder": true,
                                              "disableColumnResize": true,
                                              "disableMultipleColumnsFiltering": true,
                                              "disableMultipleColumnsSorting": true,
                                              "disableMultipleSelection": true,
                                              "filterMode": "client",
                                              "headerHeight": 56,
                                              "isRtl": false,
                                              "licenseStatus": "Valid",
                                              "localeText": Object {
                                                "MuiTablePagination": Object {
                                                  "backIconButtonText": "Página anterior",
                                                  "labelDisplayedRows": [Function],
                                                  "labelRowsPerPage": "Linhas por página:",
                                                  "nextIconButtonText": "Próxima página",
                                                },
                                                "booleanCellFalseLabel": "não",
                                                "booleanCellTrueLabel": "sim",
                                                "checkboxSelectionHeaderName": "Seleção",
                                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                                "columnHeaderFiltersTooltipActive": [Function],
                                                "columnHeaderSortIconLabel": "Ordenar",
                                                "columnMenuFilter": "Filtrar",
                                                "columnMenuHideColumn": "Ocultar",
                                                "columnMenuLabel": "Menu",
                                                "columnMenuShowColumns": "Exibir colunas",
                                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                "columnMenuUnsort": "Desfazer ordenação",
                                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                "columnsPanelHideAllButton": "Ocultar todas",
                                                "columnsPanelShowAllButton": "Mostrar todas",
                                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                "filterOperatorAfter": "após",
                                                "filterOperatorBefore": "antes de",
                                                "filterOperatorContains": "contém",
                                                "filterOperatorEndsWith": "termina com",
                                                "filterOperatorEquals": "é igual a",
                                                "filterOperatorIs": "é",
                                                "filterOperatorNot": "não é",
                                                "filterOperatorOnOrAfter": "em ou após",
                                                "filterOperatorOnOrBefore": "em ou antes de",
                                                "filterOperatorStartsWith": "começa com",
                                                "filterPanelAddFilter": "Adicionar filtro",
                                                "filterPanelColumns": "Colunas",
                                                "filterPanelDeleteIconLabel": "Excluir",
                                                "filterPanelInputLabel": "Valor",
                                                "filterPanelInputPlaceholder": "Filtrar valor",
                                                "filterPanelOperatorAnd": "E",
                                                "filterPanelOperatorOr": "Ou",
                                                "filterPanelOperators": "Operadores",
                                                "filterValueAny": "any",
                                                "filterValueFalse": "false",
                                                "filterValueTrue": "true",
                                                "footerRowSelected": [Function],
                                                "footerTotalRows": "Total de linhas:",
                                                "footerTotalVisibleRows": [Function],
                                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                "noRowsLabel": "Nenhuma linha",
                                                "toolbarColumns": "Colunas",
                                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                "toolbarDensity": "Densidade",
                                                "toolbarDensityComfortable": "Confortável",
                                                "toolbarDensityCompact": "Compacto",
                                                "toolbarDensityLabel": "Densidade",
                                                "toolbarDensityStandard": "Padrão",
                                                "toolbarExport": "Exportar",
                                                "toolbarExportCSV": "Baixar como CSV",
                                                "toolbarExportLabel": "Exportar",
                                                "toolbarFilters": "Filtros",
                                                "toolbarFiltersLabel": "Exibir filtros",
                                                "toolbarFiltersTooltipActive": [Function],
                                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                "toolbarFiltersTooltipShow": "Exibir filtros",
                                              },
                                              "logLevel": "warn",
                                              "logger": BufferedConsole {
                                                "Console": [Function],
                                                "_buffer": Array [],
                                                "_counters": Object {},
                                                "_groupDepth": 0,
                                                "_timers": Object {},
                                                "assert": [Function],
                                                "clear": [Function],
                                                "count": [Function],
                                                "countReset": [Function],
                                                "debug": [Function],
                                                "dir": [Function],
                                                "dirxml": [Function],
                                                "error": [Function],
                                                "group": [Function],
                                                "groupCollapsed": [Function],
                                                "groupEnd": [Function],
                                                "info": [Function],
                                                "log": [Function],
                                                "table": [Function],
                                                "time": [Function],
                                                "timeEnd": [Function],
                                                "timeLog": [Function],
                                                "trace": [Function],
                                                "warn": [Function],
                                              },
                                              "pageSize": 100,
                                              "pagination": true,
                                              "paginationMode": "client",
                                              "rowHeight": 52,
                                              "rows": Array [
                                                Object {
                                                  "decimalTwoPlaces": 0.34456,
                                                  "id": 1,
                                                },
                                              ],
                                              "rowsPerPageOptions": Array [
                                                25,
                                                50,
                                                100,
                                              ],
                                              "scrollEndThreshold": 80,
                                              "scrollbarSize": 0,
                                              "sortingMode": "client",
                                              "sortingOrder": Array [
                                                "asc",
                                                "desc",
                                                null,
                                              ],
                                              "theme": Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1280,
                                                    "md": 960,
                                                    "sm": 600,
                                                    "xl": 1920,
                                                    "xs": 0,
                                                  },
                                                  "width": [Function],
                                                },
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "gutters": [Function],
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "overrides": Object {},
                                                "palette": Object {
                                                  "action": Object {
                                                    "activatedOpacity": 0.12,
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "disabledOpacity": 0.38,
                                                    "focus": "rgba(0, 0, 0, 0.12)",
                                                    "focusOpacity": 0.12,
                                                    "hover": "rgba(0, 0, 0, 0.04)",
                                                    "hoverOpacity": 0.04,
                                                    "selected": "rgba(0, 0, 0, 0.08)",
                                                    "selectedOpacity": 0.08,
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#fafafa",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#d32f2f",
                                                    "light": "#e57373",
                                                    "main": "#f44336",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#d5d5d5",
                                                    "A200": "#aaaaaa",
                                                    "A400": "#303030",
                                                    "A700": "#616161",
                                                  },
                                                  "info": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#1976d2",
                                                    "light": "#64b5f6",
                                                    "main": "#2196f3",
                                                  },
                                                  "primary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "rgb(17, 82, 147)",
                                                    "light": "rgb(71, 145, 219)",
                                                    "main": "#1976d2",
                                                  },
                                                  "secondary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "success": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#388e3c",
                                                    "light": "#81c784",
                                                    "main": "#4caf50",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "type": "light",
                                                  "warning": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#f57c00",
                                                    "light": "#ffb74d",
                                                    "main": "#ff9800",
                                                  },
                                                },
                                                "props": Object {
                                                  "MuiDataGrid": Object {
                                                    "localeText": Object {
                                                      "MuiTablePagination": Object {
                                                        "backIconButtonText": "Página anterior",
                                                        "labelDisplayedRows": [Function],
                                                        "labelRowsPerPage": "Linhas por página:",
                                                        "nextIconButtonText": "Próxima página",
                                                      },
                                                      "booleanCellFalseLabel": "não",
                                                      "booleanCellTrueLabel": "sim",
                                                      "checkboxSelectionHeaderName": "Seleção",
                                                      "columnHeaderFiltersLabel": "Exibir Filtros",
                                                      "columnHeaderFiltersTooltipActive": [Function],
                                                      "columnHeaderSortIconLabel": "Ordenar",
                                                      "columnMenuFilter": "Filtrar",
                                                      "columnMenuHideColumn": "Ocultar",
                                                      "columnMenuLabel": "Menu",
                                                      "columnMenuShowColumns": "Exibir colunas",
                                                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                      "columnMenuUnsort": "Desfazer ordenação",
                                                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                      "columnsPanelHideAllButton": "Ocultar todas",
                                                      "columnsPanelShowAllButton": "Mostrar todas",
                                                      "columnsPanelTextFieldLabel": "Localizar coluna",
                                                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                      "filterOperatorAfter": "após",
                                                      "filterOperatorBefore": "antes de",
                                                      "filterOperatorContains": "contém",
                                                      "filterOperatorEndsWith": "termina com",
                                                      "filterOperatorEquals": "é igual a",
                                                      "filterOperatorIs": "é",
                                                      "filterOperatorNot": "não é",
                                                      "filterOperatorOnOrAfter": "em ou após",
                                                      "filterOperatorOnOrBefore": "em ou antes de",
                                                      "filterOperatorStartsWith": "começa com",
                                                      "filterPanelAddFilter": "Adicionar filtro",
                                                      "filterPanelColumns": "Colunas",
                                                      "filterPanelDeleteIconLabel": "Excluir",
                                                      "filterPanelInputLabel": "Valor",
                                                      "filterPanelInputPlaceholder": "Filtrar valor",
                                                      "filterPanelOperatorAnd": "E",
                                                      "filterPanelOperatorOr": "Ou",
                                                      "filterPanelOperators": "Operadores",
                                                      "footerRowSelected": [Function],
                                                      "footerTotalRows": "Total de linhas:",
                                                      "footerTotalVisibleRows": [Function],
                                                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                      "noRowsLabel": "Nenhuma linha",
                                                      "toolbarColumns": "Colunas",
                                                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                      "toolbarDensity": "Densidade",
                                                      "toolbarDensityComfortable": "Confortável",
                                                      "toolbarDensityCompact": "Compacto",
                                                      "toolbarDensityLabel": "Densidade",
                                                      "toolbarDensityStandard": "Padrão",
                                                      "toolbarExport": "Exportar",
                                                      "toolbarExportCSV": "Baixar como CSV",
                                                      "toolbarExportLabel": "Exportar",
                                                      "toolbarFilters": "Filtros",
                                                      "toolbarFiltersLabel": "Exibir filtros",
                                                      "toolbarFiltersTooltipActive": [Function],
                                                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                      "toolbarFiltersTooltipShow": "Exibir filtros",
                                                    },
                                                  },
                                                },
                                                "shadows": Array [
                                                  "none",
                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1.2,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.235,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.334,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "round": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "speedDial": 1050,
                                                  "tooltip": 1500,
                                                },
                                                Symbol(mui.nested): false,
                                              },
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <div
                                            aria-colindex={1}
                                            className="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                            data-field="decimalTwoPlaces"
                                            key="decimalTwoPlaces"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDoubleClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOut={[Function]}
                                            onMouseOver={[Function]}
                                            role="columnheader"
                                            style={
                                              Object {
                                                "maxWidth": 100,
                                                "minWidth": 100,
                                                "width": 100,
                                              }
                                            }
                                            tabIndex={0}
                                          >
                                            <div
                                              className="MuiDataGrid-columnHeaderDraggableContainer"
                                              draggable={false}
                                              onDragEnd={[Function]}
                                              onDragEnter={[Function]}
                                              onDragOver={[Function]}
                                              onDragStart={[Function]}
                                            >
                                              <div
                                                className="MuiDataGrid-columnHeaderTitleContainer"
                                              >
                                                <An
                                                  columnWidth={100}
                                                  label="Decimal Two Places"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    title=""
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      title=""
                                                    >
                                                      <ForwardRef
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseOver={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        title=""
                                                      >
                                                        <div
                                                          aria-describedby={null}
                                                          className="MuiDataGrid-columnHeaderTitle"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOver={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          title=""
                                                        >
                                                          Decimal Two Places
                                                        </div>
                                                      </ForwardRef>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class="MuiDataGrid-columnHeaderTitle"
                                                            title=""
                                                          >
                                                            Decimal Two Places
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper"
                                                        id={null}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </An>
                                                <Bn />
                                                <Memo()>
                                                  <div
                                                    className="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Ordenar"
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Ordenar"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Ordenar"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        size="small"
                                                        tabIndex={-1}
                                                        title="Ordenar"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Ordenar"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          tabIndex={-1}
                                                          title="Ordenar"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Ordenar"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            tabIndex={-1}
                                                            title="Ordenar"
                                                          >
                                                            <button
                                                              aria-label="Ordenar"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Ordenar"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <Memo()
                                                                  className="MuiDataGrid-sortIcon"
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(ArrowUpwardIcon)
                                                                    className="MuiDataGrid-sortIcon"
                                                                    fontSize="small"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiDataGrid-sortIcon"
                                                                      fontSize="small"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiDataGrid-sortIcon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        fontSize="small"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowUpwardIcon)>
                                                                </Memo()>
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={true}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={true}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </Memo()>
                                              </div>
                                              <Memo()
                                                column={
                                                  Object {
                                                    "align": "right",
                                                    "cellClassName": "font-tabular-nums",
                                                    "field": "decimalTwoPlaces",
                                                    "filterOperators": Array [
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "=",
                                                        "value": "=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "!=",
                                                        "value": "!=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": ">",
                                                        "value": ">",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": ">=",
                                                        "value": ">=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "<",
                                                        "value": "<",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "<=",
                                                        "value": "<=",
                                                      },
                                                    ],
                                                    "filterable": true,
                                                    "headerAlign": "right",
                                                    "headerName": "Decimal Two Places",
                                                    "hide": false,
                                                    "renderEditCell": [Function],
                                                    "resizable": true,
                                                    "sortComparator": [Function],
                                                    "sortable": true,
                                                    "type": "number",
                                                    "valueFormatter": [Function],
                                                    "valueParser": [Function],
                                                    "width": 100,
                                                  }
                                                }
                                                columnMenuButtonId="mui-100000"
                                                columnMenuId="mui-100000"
                                                iconButtonRef={
                                                  Object {
                                                    "current": <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>,
                                                  }
                                                }
                                                open={false}
                                              >
                                                <div
                                                  className="MuiDataGrid-menuIcon"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    className="MuiDataGrid-menuIconButton"
                                                    id="mui-100000"
                                                    onClick={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                    title="Menu"
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      className="MuiDataGrid-menuIconButton"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      id="mui-100000"
                                                      onClick={[Function]}
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Menu"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-controls="mui-100000"
                                                        aria-haspopup="true"
                                                        aria-label="Menu"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        id="mui-100000"
                                                        onClick={[Function]}
                                                        tabIndex={-1}
                                                        title="Menu"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-controls="mui-100000"
                                                          aria-haspopup="true"
                                                          aria-label="Menu"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusRipple={true}
                                                          id="mui-100000"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Menu"
                                                        >
                                                          <button
                                                            aria-controls="mui-100000"
                                                            aria-haspopup="true"
                                                            aria-label="Menu"
                                                            className="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                            disabled={false}
                                                            id="mui-100000"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={-1}
                                                            title="Menu"
                                                            type="button"
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(TripleDotsVerticalIcon)
                                                                fontSize="small"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    fontSize="small"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(TripleDotsVerticalIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </Memo()>
                                            </div>
                                            <Memo()
                                              height={56}
                                              onMouseDown={[Function]}
                                              resizable={false}
                                              resizing={false}
                                            >
                                              <div
                                                className="MuiDataGrid-columnSeparator"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "minHeight": 56,
                                                    "opacity": 1,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SeparatorIcon)
                                                  className="MuiDataGrid-iconSeparator"
                                                >
                                                  <WithStyles(ForwardRef(SvgIcon))
                                                    className="MuiDataGrid-iconSeparator"
                                                  >
                                                    <ForwardRef(SvgIcon)
                                                      className="MuiDataGrid-iconSeparator"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M11 19V5h2v14z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(SeparatorIcon)>
                                              </div>
                                            </Memo()>
                                            <qn
                                              ContentComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              columnMenuButtonId="mui-100000"
                                              columnMenuId="mui-100000"
                                              field="decimalTwoPlaces"
                                              open={false}
                                              target={
                                                <button
                                                  aria-controls="mui-100000"
                                                  aria-haspopup="true"
                                                  aria-label="Menu"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                  id="mui-100000"
                                                  tabindex="-1"
                                                  title="Menu"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              }
                                            >
                                              <Kn
                                                onClickAway={[Function]}
                                                open={false}
                                                placement="bottom-start"
                                                target={
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                }
                                              >
                                                <ForwardRef(Popper)
                                                  anchorEl={
                                                    <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  }
                                                  className="MuiGridMenu-root"
                                                  open={false}
                                                  placement="bottom-start"
                                                  transition={true}
                                                />
                                              </Kn>
                                            </qn>
                                          </div>
                                        </Zn>
                                      </ia>
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                    </div>
                                    <Memo()
                                      scrollDirection="right"
                                    />
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                              <ForwardRef
                                onResize={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "visible",
                                      "width": 0,
                                    }
                                  }
                                >
                                  <ForwardRef
                                    size={
                                      Object {
                                        "height": 0,
                                        "width": 0,
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDataGrid-windowContainer"
                                      style={
                                        Object {
                                          "height": 0,
                                          "width": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDataGrid-window"
                                        style={
                                          Object {
                                            "overflowY": "auto",
                                            "top": 56,
                                          }
                                        }
                                      >
                                        <ForwardRef>
                                          <Zl>
                                            <div
                                              className="MuiDataGrid-dataContainer"
                                              style={
                                                Object {
                                                  "minHeight": 52,
                                                  "minWidth": 100,
                                                }
                                              }
                                            >
                                              <ti
                                                height={0}
                                                width={0}
                                              >
                                                <div
                                                  className="MuiDataGrid-viewport"
                                                  style={
                                                    Object {
                                                      "maxHeight": 0,
                                                      "maxWidth": 0,
                                                      "minWidth": 0,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    height={52}
                                                    width={100}
                                                  >
                                                    <div
                                                      className="MuiDataGrid-renderingZone"
                                                      style={
                                                        Object {
                                                          "maxHeight": 52,
                                                          "width": 100,
                                                        }
                                                      }
                                                    >
                                                      <ei
                                                        className="Mui-even"
                                                        id={1}
                                                        key="1"
                                                        rowIndex={0}
                                                        selected={false}
                                                      >
                                                        <div
                                                          aria-rowindex={2}
                                                          aria-selected={false}
                                                          className="Mui-even MuiDataGrid-row"
                                                          data-id={1}
                                                          data-rowindex={0}
                                                          key="1"
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOut={[Function]}
                                                          onMouseOver={[Function]}
                                                          role="row"
                                                          style={
                                                            Object {
                                                              "maxHeight": 52,
                                                              "minHeight": 52,
                                                            }
                                                          }
                                                        >
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                          <Memo()
                                                            cellClassName="MuiDataGrid-cell"
                                                            cellFocus={null}
                                                            cellTabIndex={null}
                                                            columns={
                                                              Array [
                                                                Object {
                                                                  "align": "right",
                                                                  "cellClassName": "font-tabular-nums",
                                                                  "field": "decimalTwoPlaces",
                                                                  "filterOperators": Array [
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "=",
                                                                      "value": "=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "!=",
                                                                      "value": "!=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": ">",
                                                                      "value": ">",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": ">=",
                                                                      "value": ">=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "<",
                                                                      "value": "<",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "<=",
                                                                      "value": "<=",
                                                                    },
                                                                  ],
                                                                  "filterable": true,
                                                                  "headerAlign": "right",
                                                                  "headerName": "Decimal Two Places",
                                                                  "hide": false,
                                                                  "renderEditCell": [Function],
                                                                  "resizable": true,
                                                                  "sortComparator": [Function],
                                                                  "sortable": true,
                                                                  "type": "number",
                                                                  "valueFormatter": [Function],
                                                                  "valueParser": [Function],
                                                                  "width": 100,
                                                                },
                                                              ]
                                                            }
                                                            extendRowFullWidth={true}
                                                            firstColIdx={0}
                                                            hasScrollX={true}
                                                            hasScrollY={true}
                                                            height={52}
                                                            id={1}
                                                            isSelected={false}
                                                            lastColIdx={0}
                                                            row={
                                                              Object {
                                                                "decimalTwoPlaces": 0.34456,
                                                                "id": 1,
                                                              }
                                                            }
                                                            rowIndex={0}
                                                            showCellRightBorder={false}
                                                          >
                                                            <Memo()
                                                              align="right"
                                                              cellMode="view"
                                                              className="MuiDataGrid-cell font-tabular-nums"
                                                              colIndex={0}
                                                              extendRowFullWidth={true}
                                                              field="decimalTwoPlaces"
                                                              formattedValue="0.34"
                                                              hasFocus={false}
                                                              height={52}
                                                              isSelected={false}
                                                              key="decimalTwoPlaces"
                                                              row={
                                                                Object {
                                                                  "decimalTwoPlaces": 0.34456,
                                                                  "id": 1,
                                                                }
                                                              }
                                                              rowId={1}
                                                              rowIndex={0}
                                                              showRightBorder={false}
                                                              tabIndex={-1}
                                                              value={0.34456}
                                                              width={100}
                                                            >
                                                              <div
                                                                aria-colindex={1}
                                                                className="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                                                data-colindex={0}
                                                                data-field="decimalTwoPlaces"
                                                                data-mode="view"
                                                                data-rowindex={0}
                                                                data-rowselected={false}
                                                                data-value={0.34456}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDoubleClick={[Function]}
                                                                onDragEnter={[Function]}
                                                                onDragOver={[Function]}
                                                                onDragStart={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                                onMouseUp={[Function]}
                                                                role="cell"
                                                                style={
                                                                  Object {
                                                                    "lineHeight": "51px",
                                                                    "maxHeight": 52,
                                                                    "maxWidth": 100,
                                                                    "minHeight": 52,
                                                                    "minWidth": 100,
                                                                  }
                                                                }
                                                                tabIndex={-1}
                                                              >
                                                                0.34
                                                              </div>
                                                            </Memo()>
                                                          </Memo()>
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                        </div>
                                                      </ei>
                                                    </div>
                                                  </ForwardRef>
                                                </div>
                                              </ti>
                                            </div>
                                          </Zl>
                                        </ForwardRef>
                                      </div>
                                    </div>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </div>
                          </hs>
                        </Ss>
                        <Os>
                          <div>
                            <ForwardRef>
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-footerContainer"
                                >
                                  <div />
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(TablePagination))
                                      backIconButtonText="Página anterior"
                                      classes={
                                        Object {
                                          "caption": "makeStyles-caption-2",
                                          "input": "makeStyles-input-3",
                                        }
                                      }
                                      component="div"
                                      count={1}
                                      labelDisplayedRows={[Function]}
                                      labelRowsPerPage="Linhas por página:"
                                      nextIconButtonText="Próxima página"
                                      onChangePage={[Function]}
                                      onChangeRowsPerPage={[Function]}
                                      page={0}
                                      rowsPerPage={100}
                                      rowsPerPageOptions={
                                        Array [
                                          25,
                                          50,
                                          100,
                                        ]
                                      }
                                    >
                                      <ForwardRef(TablePagination)
                                        backIconButtonText="Página anterior"
                                        classes={
                                          Object {
                                            "actions": "MuiTablePagination-actions",
                                            "caption": "MuiTablePagination-caption makeStyles-caption-2",
                                            "input": "MuiTablePagination-input makeStyles-input-3",
                                            "menuItem": "MuiTablePagination-menuItem",
                                            "root": "MuiTablePagination-root",
                                            "select": "MuiTablePagination-select",
                                            "selectIcon": "MuiTablePagination-selectIcon",
                                            "selectRoot": "MuiTablePagination-selectRoot",
                                            "spacer": "MuiTablePagination-spacer",
                                            "toolbar": "MuiTablePagination-toolbar",
                                          }
                                        }
                                        component="div"
                                        count={1}
                                        labelDisplayedRows={[Function]}
                                        labelRowsPerPage="Linhas por página:"
                                        nextIconButtonText="Próxima página"
                                        onChangePage={[Function]}
                                        onChangeRowsPerPage={[Function]}
                                        page={0}
                                        rowsPerPage={100}
                                        rowsPerPageOptions={
                                          Array [
                                            25,
                                            50,
                                            100,
                                          ]
                                        }
                                      >
                                        <div
                                          className="MuiTablePagination-root"
                                        >
                                          <WithStyles(ForwardRef(Toolbar))
                                            className="MuiTablePagination-toolbar"
                                          >
                                            <ForwardRef(Toolbar)
                                              className="MuiTablePagination-toolbar"
                                              classes={
                                                Object {
                                                  "dense": "MuiToolbar-dense",
                                                  "gutters": "MuiToolbar-gutters",
                                                  "regular": "MuiToolbar-regular",
                                                  "root": "MuiToolbar-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                              >
                                                <div
                                                  className="MuiTablePagination-spacer"
                                                />
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  id="mui-100000"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    id="mui-100000"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                      id="mui-100000"
                                                    >
                                                      Linhas por página:
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Select))
                                                  classes={
                                                    Object {
                                                      "icon": "MuiTablePagination-selectIcon",
                                                      "select": "MuiTablePagination-select",
                                                    }
                                                  }
                                                  id="mui-100000"
                                                  input={
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                    />
                                                  }
                                                  labelId="mui-100000"
                                                  onChange={[Function]}
                                                  value={100}
                                                >
                                                  <ForwardRef(Select)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    id="mui-100000"
                                                    input={
                                                      <WithStyles(ForwardRef(InputBase))
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      />
                                                    }
                                                    labelId="mui-100000"
                                                    onChange={[Function]}
                                                    value={100}
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      inputComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": [Function],
                                                            "SelectDisplayProps": [Function],
                                                            "aria-label": [Function],
                                                            "autoFocus": [Function],
                                                            "autoWidth": [Function],
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "defaultValue": [Function],
                                                            "disabled": [Function],
                                                            "displayEmpty": [Function],
                                                            "inputRef": [Function],
                                                            "labelId": [Function],
                                                            "multiple": [Function],
                                                            "name": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onClose": [Function],
                                                            "onFocus": [Function],
                                                            "onOpen": [Function],
                                                            "open": [Function],
                                                            "readOnly": [Function],
                                                            "renderValue": [Function],
                                                            "tabIndex": [Function],
                                                            "type": [Function],
                                                            "value": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      inputProps={
                                                        Object {
                                                          "IconComponent": Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          },
                                                          "MenuProps": undefined,
                                                          "SelectDisplayProps": Object {
                                                            "id": "mui-100000",
                                                          },
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={25}
                                                            >
                                                              25
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={50}
                                                            >
                                                              50
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={100}
                                                            >
                                                              100
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select MuiTablePagination-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          },
                                                          "displayEmpty": false,
                                                          "labelId": "mui-100000",
                                                          "multiple": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                          "type": undefined,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      value={100}
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputBase-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth",
                                                            "input": "MuiInputBase-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense",
                                                            "multiline": "MuiInputBase-multiline",
                                                            "root": "MuiInputBase-root",
                                                          }
                                                        }
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": "mui-100000",
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={25}
                                                              >
                                                                25
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={50}
                                                              >
                                                                50
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={100}
                                                              >
                                                                100
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select MuiTablePagination-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": "mui-100000",
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        value={100}
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(SelectInput)
                                                            IconComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              }
                                                            }
                                                            SelectDisplayProps={
                                                              Object {
                                                                "id": "mui-100000",
                                                              }
                                                            }
                                                            autoWidth={false}
                                                            className="MuiInputBase-input"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              }
                                                            }
                                                            displayEmpty={false}
                                                            inputRef={[Function]}
                                                            labelId="mui-100000"
                                                            multiple={false}
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value={100}
                                                            variant="standard"
                                                          >
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-100000 mui-100000"
                                                              className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-100000"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              100
                                                            </div>
                                                            <input
                                                              aria-hidden={true}
                                                              className="MuiSelect-nativeInput"
                                                              onAnimationStart={[Function]}
                                                              onChange={[Function]}
                                                              tabIndex={-1}
                                                              value={100}
                                                            />
                                                            <ForwardRef(ArrowDropDownIcon)
                                                              className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M7 10l5 5 5-5z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef(ArrowDropDownIcon)>
                                                            <WithStyles(ForwardRef(Menu))
                                                              MenuListProps={
                                                                Object {
                                                                  "aria-labelledby": "mui-100000",
                                                                  "disableListWrap": true,
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={
                                                                <div
                                                                  aria-haspopup="listbox"
                                                                  aria-labelledby="mui-100000 mui-100000"
                                                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                  id="mui-100000"
                                                                  role="button"
                                                                  tabindex="0"
                                                                >
                                                                  100
                                                                </div>
                                                              }
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <ForwardRef(Menu)
                                                                MenuListProps={
                                                                  Object {
                                                                    "aria-labelledby": "mui-100000",
                                                                    "disableListWrap": true,
                                                                    "role": "listbox",
                                                                  }
                                                                }
                                                                PaperProps={
                                                                  Object {
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                anchorEl={
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    aria-labelledby="mui-100000 mui-100000"
                                                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                    id="mui-100000"
                                                                    role="button"
                                                                    tabindex="0"
                                                                  >
                                                                    100
                                                                  </div>
                                                                }
                                                                classes={
                                                                  Object {
                                                                    "list": "MuiMenu-list",
                                                                    "paper": "MuiMenu-paper",
                                                                  }
                                                                }
                                                                id="menu-"
                                                                onClose={[Function]}
                                                                open={false}
                                                              >
                                                                <WithStyles(ForwardRef(Popover))
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  anchorEl={
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-100000 mui-100000"
                                                                      class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                      id="mui-100000"
                                                                      role="button"
                                                                      tabindex="0"
                                                                    >
                                                                      100
                                                                    </div>
                                                                  }
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-"
                                                                  onClose={[Function]}
                                                                  onEntering={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <ForwardRef(Popover)
                                                                    PaperProps={
                                                                      Object {
                                                                        "classes": Object {
                                                                          "root": "MuiMenu-paper",
                                                                        },
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        aria-labelledby="mui-100000 mui-100000"
                                                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                        id="mui-100000"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        100
                                                                      </div>
                                                                    }
                                                                    anchorOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "paper": "MuiPopover-paper",
                                                                        "root": "MuiPopover-root",
                                                                      }
                                                                    }
                                                                    getContentAnchorEl={[Function]}
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    onEntering={[Function]}
                                                                    open={false}
                                                                    transformOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    transitionDuration="auto"
                                                                  >
                                                                    <ForwardRef(Modal)
                                                                      BackdropProps={
                                                                        Object {
                                                                          "invisible": true,
                                                                        }
                                                                      }
                                                                      className="MuiPopover-root"
                                                                      container={<body />}
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    />
                                                                  </ForwardRef(Popover)>
                                                                </WithStyles(ForwardRef(Popover))>
                                                              </ForwardRef(Menu)>
                                                            </WithStyles(ForwardRef(Menu))>
                                                          </ForwardRef(SelectInput)>
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Select)>
                                                </WithStyles(ForwardRef(Select))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                    >
                                                      1-1 de 1
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <ForwardRef(TablePaginationActions)
                                                  backIconButtonProps={
                                                    Object {
                                                      "aria-label": "Página anterior",
                                                      "title": "Página anterior",
                                                    }
                                                  }
                                                  className="MuiTablePagination-actions"
                                                  count={1}
                                                  nextIconButtonProps={
                                                    Object {
                                                      "aria-label": "Próxima página",
                                                      "title": "Próxima página",
                                                    }
                                                  }
                                                  onChangePage={[Function]}
                                                  page={0}
                                                  rowsPerPage={100}
                                                >
                                                  <div
                                                    className="MuiTablePagination-actions"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Página anterior"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Página anterior"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Página anterior"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Página anterior"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Página anterior"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Página anterior"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Página anterior"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Página anterior"
                                                          >
                                                            <button
                                                              aria-label="Página anterior"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Página anterior"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowLeftIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowLeftIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Próxima página"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Próxima página"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Próxima página"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Próxima página"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Próxima página"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Próxima página"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Próxima página"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Próxima página"
                                                          >
                                                            <button
                                                              aria-label="Próxima página"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Próxima página"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowRightIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowRightIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(TablePaginationActions)>
                                              </div>
                                            </ForwardRef(Toolbar)>
                                          </WithStyles(ForwardRef(Toolbar))>
                                        </div>
                                      </ForwardRef(TablePagination)>
                                    </WithStyles(ForwardRef(TablePagination))>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </ForwardRef>
                          </div>
                        </Os>
                      </Cs>
                    </vs>
                  </div>
                </NoSsr>
              </ForwardRef>
            </bs>
          </ForwardRef>
        </ForwardRef>
      </ThemeProvider>
    </div>
  </ScrollBar>
</Memo()>
`;

exports[`src/components/ui/DataGrid should render correctly percentage 1`] = `
<Memo()
  columns={
    Array [
      Object {
        "cellClassName": "font-tabular-nums",
        "field": "percentage",
        "headerName": "Percentage",
        "type": "number",
        "valueFormatter": [Function],
      },
    ]
  }
  rows={
    Array [
      Object {
        "id": 1,
        "percentage": 0.45,
      },
    ]
  }
>
  <ScrollBar
    className=""
    component="div"
    containerRef={[Function]}
    onSync={[Function]}
  >
    <div>
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "rgb(17, 82, 147)",
                "light": "rgb(71, 145, 219)",
                "main": "#1976d2",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "props": Object {
              "MuiDataGrid": Object {
                "localeText": Object {
                  "MuiTablePagination": Object {
                    "backIconButtonText": "Página anterior",
                    "labelDisplayedRows": [Function],
                    "labelRowsPerPage": "Linhas por página:",
                    "nextIconButtonText": "Próxima página",
                  },
                  "booleanCellFalseLabel": "não",
                  "booleanCellTrueLabel": "sim",
                  "checkboxSelectionHeaderName": "Seleção",
                  "columnHeaderFiltersLabel": "Exibir Filtros",
                  "columnHeaderFiltersTooltipActive": [Function],
                  "columnHeaderSortIconLabel": "Ordenar",
                  "columnMenuFilter": "Filtrar",
                  "columnMenuHideColumn": "Ocultar",
                  "columnMenuLabel": "Menu",
                  "columnMenuShowColumns": "Exibir colunas",
                  "columnMenuSortAsc": "Ordenar do menor para o maior",
                  "columnMenuSortDesc": "Ordenar do maior para o menor",
                  "columnMenuUnsort": "Desfazer ordenação",
                  "columnsPanelDragIconLabel": "Reordenar Coluna",
                  "columnsPanelHideAllButton": "Ocultar todas",
                  "columnsPanelShowAllButton": "Mostrar todas",
                  "columnsPanelTextFieldLabel": "Localizar coluna",
                  "columnsPanelTextFieldPlaceholder": "Título da coluna",
                  "errorOverlayDefaultLabel": "Ocorreu um erro.",
                  "filterOperatorAfter": "após",
                  "filterOperatorBefore": "antes de",
                  "filterOperatorContains": "contém",
                  "filterOperatorEndsWith": "termina com",
                  "filterOperatorEquals": "é igual a",
                  "filterOperatorIs": "é",
                  "filterOperatorNot": "não é",
                  "filterOperatorOnOrAfter": "em ou após",
                  "filterOperatorOnOrBefore": "em ou antes de",
                  "filterOperatorStartsWith": "começa com",
                  "filterPanelAddFilter": "Adicionar filtro",
                  "filterPanelColumns": "Colunas",
                  "filterPanelDeleteIconLabel": "Excluir",
                  "filterPanelInputLabel": "Valor",
                  "filterPanelInputPlaceholder": "Filtrar valor",
                  "filterPanelOperatorAnd": "E",
                  "filterPanelOperatorOr": "Ou",
                  "filterPanelOperators": "Operadores",
                  "footerRowSelected": [Function],
                  "footerTotalRows": "Total de linhas:",
                  "footerTotalVisibleRows": [Function],
                  "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                  "noRowsLabel": "Nenhuma linha",
                  "toolbarColumns": "Colunas",
                  "toolbarColumnsLabel": "Exibir seletor de colunas",
                  "toolbarDensity": "Densidade",
                  "toolbarDensityComfortable": "Confortável",
                  "toolbarDensityCompact": "Compacto",
                  "toolbarDensityLabel": "Densidade",
                  "toolbarDensityStandard": "Padrão",
                  "toolbarExport": "Exportar",
                  "toolbarExportCSV": "Baixar como CSV",
                  "toolbarExportLabel": "Exportar",
                  "toolbarFilters": "Filtros",
                  "toolbarFiltersLabel": "Exibir filtros",
                  "toolbarFiltersTooltipActive": [Function],
                  "toolbarFiltersTooltipHide": "Ocultar filtros",
                  "toolbarFiltersTooltipShow": "Exibir filtros",
                },
              },
            },
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <ForwardRef
          columns={
            Array [
              Object {
                "cellClassName": "font-tabular-nums",
                "field": "percentage",
                "headerName": "Percentage",
                "type": "number",
                "valueFormatter": [Function],
              },
            ]
          }
          rows={
            Array [
              Object {
                "id": 1,
                "percentage": 0.45,
              },
            ]
          }
        >
          <ForwardRef
            checkboxSelectionVisibleOnly={false}
            columnBuffer={2}
            columnTypes={
              Object {
                "__default__": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
                "boolean": Object {
                  "align": "center",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "center",
                  "hide": false,
                  "renderCell": [Function],
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "boolean",
                  "width": 100,
                },
                "date": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "date",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "dateTime": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "dateTime",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "number": Object {
                  "align": "right",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "=",
                      "value": "=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "!=",
                      "value": "!=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">",
                      "value": ">",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">=",
                      "value": ">=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<",
                      "value": "<",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<=",
                      "value": "<=",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "right",
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "number",
                  "valueFormatter": [Function],
                  "valueParser": [Function],
                  "width": 100,
                },
                "singleSelect": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "singleSelect",
                  "width": 100,
                },
                "string": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
              }
            }
            columns={
              Array [
                Object {
                  "cellClassName": "font-tabular-nums",
                  "field": "percentage",
                  "headerName": "Percentage",
                  "type": "number",
                  "valueFormatter": [Function],
                },
              ]
            }
            density="standard"
            disableColumnReorder={true}
            disableColumnResize={true}
            disableMultipleColumnsFiltering={true}
            disableMultipleColumnsSorting={true}
            disableMultipleSelection={true}
            filterMode="client"
            headerHeight={56}
            isRtl={false}
            licenseStatus="Valid"
            localeText={
              Object {
                "MuiTablePagination": Object {
                  "backIconButtonText": "Página anterior",
                  "labelDisplayedRows": [Function],
                  "labelRowsPerPage": "Linhas por página:",
                  "nextIconButtonText": "Próxima página",
                },
                "booleanCellFalseLabel": "não",
                "booleanCellTrueLabel": "sim",
                "checkboxSelectionHeaderName": "Seleção",
                "columnHeaderFiltersLabel": "Exibir Filtros",
                "columnHeaderFiltersTooltipActive": [Function],
                "columnHeaderSortIconLabel": "Ordenar",
                "columnMenuFilter": "Filtrar",
                "columnMenuHideColumn": "Ocultar",
                "columnMenuLabel": "Menu",
                "columnMenuShowColumns": "Exibir colunas",
                "columnMenuSortAsc": "Ordenar do menor para o maior",
                "columnMenuSortDesc": "Ordenar do maior para o menor",
                "columnMenuUnsort": "Desfazer ordenação",
                "columnsPanelDragIconLabel": "Reordenar Coluna",
                "columnsPanelHideAllButton": "Ocultar todas",
                "columnsPanelShowAllButton": "Mostrar todas",
                "columnsPanelTextFieldLabel": "Localizar coluna",
                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                "filterOperatorAfter": "após",
                "filterOperatorBefore": "antes de",
                "filterOperatorContains": "contém",
                "filterOperatorEndsWith": "termina com",
                "filterOperatorEquals": "é igual a",
                "filterOperatorIs": "é",
                "filterOperatorNot": "não é",
                "filterOperatorOnOrAfter": "em ou após",
                "filterOperatorOnOrBefore": "em ou antes de",
                "filterOperatorStartsWith": "começa com",
                "filterPanelAddFilter": "Adicionar filtro",
                "filterPanelColumns": "Colunas",
                "filterPanelDeleteIconLabel": "Excluir",
                "filterPanelInputLabel": "Valor",
                "filterPanelInputPlaceholder": "Filtrar valor",
                "filterPanelOperatorAnd": "E",
                "filterPanelOperatorOr": "Ou",
                "filterPanelOperators": "Operadores",
                "footerRowSelected": [Function],
                "footerTotalRows": "Total de linhas:",
                "footerTotalVisibleRows": [Function],
                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                "noRowsLabel": "Nenhuma linha",
                "toolbarColumns": "Colunas",
                "toolbarColumnsLabel": "Exibir seletor de colunas",
                "toolbarDensity": "Densidade",
                "toolbarDensityComfortable": "Confortável",
                "toolbarDensityCompact": "Compacto",
                "toolbarDensityLabel": "Densidade",
                "toolbarDensityStandard": "Padrão",
                "toolbarExport": "Exportar",
                "toolbarExportCSV": "Baixar como CSV",
                "toolbarExportLabel": "Exportar",
                "toolbarFilters": "Filtros",
                "toolbarFiltersLabel": "Exibir filtros",
                "toolbarFiltersTooltipActive": [Function],
                "toolbarFiltersTooltipHide": "Ocultar filtros",
                "toolbarFiltersTooltipShow": "Exibir filtros",
              }
            }
            logLevel="warn"
            logger={
              BufferedConsole {
                "Console": [Function],
                "_buffer": Array [],
                "_counters": Object {},
                "_groupDepth": 0,
                "_timers": Object {},
                "assert": [Function],
                "clear": [Function],
                "count": [Function],
                "countReset": [Function],
                "debug": [Function],
                "dir": [Function],
                "dirxml": [Function],
                "error": [Function],
                "group": [Function],
                "groupCollapsed": [Function],
                "groupEnd": [Function],
                "info": [Function],
                "log": [Function],
                "table": [Function],
                "time": [Function],
                "timeEnd": [Function],
                "timeLog": [Function],
                "trace": [Function],
                "warn": [Function],
              }
            }
            pageSize={100}
            pagination={true}
            paginationMode="client"
            rowHeight={52}
            rows={
              Array [
                Object {
                  "id": 1,
                  "percentage": 0.45,
                },
              ]
            }
            rowsPerPageOptions={
              Array [
                25,
                50,
                100,
              ]
            }
            scrollEndThreshold={80}
            sortingMode="client"
            sortingOrder={
              Array [
                "asc",
                "desc",
                null,
              ]
            }
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "rgb(17, 82, 147)",
                    "light": "rgb(71, 145, 219)",
                    "main": "#1976d2",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {
                  "MuiDataGrid": Object {
                    "localeText": Object {
                      "MuiTablePagination": Object {
                        "backIconButtonText": "Página anterior",
                        "labelDisplayedRows": [Function],
                        "labelRowsPerPage": "Linhas por página:",
                        "nextIconButtonText": "Próxima página",
                      },
                      "booleanCellFalseLabel": "não",
                      "booleanCellTrueLabel": "sim",
                      "checkboxSelectionHeaderName": "Seleção",
                      "columnHeaderFiltersLabel": "Exibir Filtros",
                      "columnHeaderFiltersTooltipActive": [Function],
                      "columnHeaderSortIconLabel": "Ordenar",
                      "columnMenuFilter": "Filtrar",
                      "columnMenuHideColumn": "Ocultar",
                      "columnMenuLabel": "Menu",
                      "columnMenuShowColumns": "Exibir colunas",
                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                      "columnMenuUnsort": "Desfazer ordenação",
                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                      "columnsPanelHideAllButton": "Ocultar todas",
                      "columnsPanelShowAllButton": "Mostrar todas",
                      "columnsPanelTextFieldLabel": "Localizar coluna",
                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                      "filterOperatorAfter": "após",
                      "filterOperatorBefore": "antes de",
                      "filterOperatorContains": "contém",
                      "filterOperatorEndsWith": "termina com",
                      "filterOperatorEquals": "é igual a",
                      "filterOperatorIs": "é",
                      "filterOperatorNot": "não é",
                      "filterOperatorOnOrAfter": "em ou após",
                      "filterOperatorOnOrBefore": "em ou antes de",
                      "filterOperatorStartsWith": "começa com",
                      "filterPanelAddFilter": "Adicionar filtro",
                      "filterPanelColumns": "Colunas",
                      "filterPanelDeleteIconLabel": "Excluir",
                      "filterPanelInputLabel": "Valor",
                      "filterPanelInputPlaceholder": "Filtrar valor",
                      "filterPanelOperatorAnd": "E",
                      "filterPanelOperatorOr": "Ou",
                      "filterPanelOperators": "Operadores",
                      "footerRowSelected": [Function],
                      "footerTotalRows": "Total de linhas:",
                      "footerTotalVisibleRows": [Function],
                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                      "noRowsLabel": "Nenhuma linha",
                      "toolbarColumns": "Colunas",
                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                      "toolbarDensity": "Densidade",
                      "toolbarDensityComfortable": "Confortável",
                      "toolbarDensityCompact": "Compacto",
                      "toolbarDensityLabel": "Densidade",
                      "toolbarDensityStandard": "Padrão",
                      "toolbarExport": "Exportar",
                      "toolbarExportCSV": "Baixar como CSV",
                      "toolbarExportLabel": "Exportar",
                      "toolbarFilters": "Filtros",
                      "toolbarFiltersLabel": "Exibir filtros",
                      "toolbarFiltersTooltipActive": [Function],
                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                      "toolbarFiltersTooltipShow": "Exibir filtros",
                    },
                  },
                },
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
                Symbol(mui.nested): false,
              }
            }
          >
            <bs
              apiRef={
                Object {
                  "current": Ti {
                    "applyFilter": [Function],
                    "applyFilterLinkOperator": [Function],
                    "applyFilters": [Function],
                    "applySorting": [Function],
                    "columnHeadersContainerElementRef": Object {
                      "current": <div
                        class="MuiDataGrid-columnsContainer"
                        style="min-height: 56px; max-height: 56px; line-height: 56px;"
                      >
                        <div
                          aria-rowindex="1"
                          class="MuiDataGrid-columnHeaderWrapper scroll"
                          role="row"
                          style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                            data-field="percentage"
                            role="columnheader"
                            style="width: 100px; min-width: 100px; max-width: 100px;"
                            tabindex="0"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderDraggableContainer"
                              draggable="false"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitleContainer"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderTitle"
                                  title=""
                                >
                                  Percentage
                                </div>
                                <div
                                  class="MuiDataGrid-iconButtonContainer"
                                >
                                  <button
                                    aria-label="Ordenar"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                    tabindex="-1"
                                    title="Ordenar"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                        />
                                      </svg>
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>
                              </div>
                              <div
                                class="MuiDataGrid-menuIcon"
                              >
                                <button
                                  aria-controls="mui-100000"
                                  aria-haspopup="true"
                                  aria-label="Menu"
                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                  id="mui-100000"
                                  tabindex="-1"
                                  title="Menu"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-columnSeparator"
                              style="min-height: 56px; opacity: 1;"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M11 19V5h2v14z"
                                />
                              </svg>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "columnHeadersElementRef": Object {
                      "current": <div
                        aria-rowindex="1"
                        class="MuiDataGrid-columnHeaderWrapper scroll"
                        role="row"
                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                      >
                        <div
                          aria-colindex="1"
                          class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                          data-field="percentage"
                          role="columnheader"
                          style="width: 100px; min-width: 100px; max-width: 100px;"
                          tabindex="0"
                        >
                          <div
                            class="MuiDataGrid-columnHeaderDraggableContainer"
                            draggable="false"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderTitleContainer"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitle"
                                title=""
                              >
                                Percentage
                              </div>
                              <div
                                class="MuiDataGrid-iconButtonContainer"
                              >
                                <button
                                  aria-label="Ordenar"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                  tabindex="-1"
                                  title="Ordenar"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-menuIcon"
                            >
                              <button
                                aria-controls="mui-100000"
                                aria-haspopup="true"
                                aria-label="Menu"
                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                id="mui-100000"
                                tabindex="-1"
                                title="Menu"
                                type="button"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                    />
                                  </svg>
                                </span>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </button>
                            </div>
                          </div>
                          <div
                            class="MuiDataGrid-columnSeparator"
                            style="min-height: 56px; opacity: 1;"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M11 19V5h2v14z"
                              />
                            </svg>
                          </div>
                        </div>
                      </div>,
                    },
                    "commitCellChange": [Function],
                    "components": Object {
                      "BooleanCellFalseIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "BooleanCellTrueIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Checkbox": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "checked": [Function],
                            "checkedIcon": [Function],
                            "classes": [Function],
                            "color": [Function],
                            "disableRipple": [Function],
                            "disabled": [Function],
                            "icon": [Function],
                            "id": [Function],
                            "indeterminate": [Function],
                            "indeterminateIcon": [Function],
                            "inputProps": [Function],
                            "inputRef": [Function],
                            "onChange": [Function],
                            "required": [Function],
                            "size": [Function],
                            "value": [Function],
                          },
                          "render": [Function],
                        },
                        "displayName": "WithStyles(ForwardRef(Checkbox))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiCheckbox",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      },
                      "ColumnFilteredIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnMenu": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ColumnMenuIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnResizeIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSelectorIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedAscendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedDescendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnUnsortedIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      },
                      "ColumnsPanel": [Function],
                      "DensityComfortableIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityCompactIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityStandardIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ErrorOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ExportIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "FilterPanel": [Function],
                      "Footer": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Header": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "LoadingOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoResultsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoRowsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "OpenFilterButtonIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Pagination": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Panel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "PreferencesPanel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Toolbar": undefined,
                    },
                    "componentsProps": undefined,
                    "copySelectedRowsToClipboard": [Function],
                    "deleteFilter": [Function],
                    "events": Object {
                      "cellClick": Array [
                        [Function],
                      ],
                      "cellDoubleClick": Array [
                        [Function],
                        [Function],
                      ],
                      "cellDragEnd": Array [
                        [Function],
                      ],
                      "cellDragEnter": Array [
                        [Function],
                      ],
                      "cellDragOver": Array [
                        [Function],
                      ],
                      "cellEditEnter": Array [
                        [Function],
                      ],
                      "cellEditExit": Array [
                        [Function],
                      ],
                      "cellEditPropsChange": Array [
                        [Function],
                      ],
                      "cellEditPropsChangeCommitted": Array [
                        [Function],
                      ],
                      "cellFocusOut": Array [
                        [Function],
                      ],
                      "cellKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "cellModeChange": Array [
                        [Function],
                      ],
                      "cellMouseDown": Array [
                        [Function],
                      ],
                      "cellMouseUp": Array [
                        [Function],
                      ],
                      "cellNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnHeaderBlur": Array [
                        [Function],
                      ],
                      "columnHeaderClick": Array [
                        [Function],
                      ],
                      "columnHeaderDragEnd": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderDragEnter": Array [
                        [Function],
                      ],
                      "columnHeaderDragOver": Array [
                        [Function],
                      ],
                      "columnHeaderDragStart": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderFocus": Array [
                        [Function],
                      ],
                      "columnHeaderKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "columnHeaderNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnResizeStart": Array [
                        [Function],
                      ],
                      "columnResizeStop": Array [
                        [Function],
                      ],
                      "columnSeparatorMouseDown": Array [
                        [Function],
                      ],
                      "columnsChange": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "componentError": Array [
                        [Function],
                      ],
                      "debouncedResize": Array [
                        [Function],
                        [Function],
                      ],
                      "keydown": Array [
                        [Function],
                      ],
                      "resize": Array [
                        [Function],
                      ],
                      "rowClick": Array [
                        [Function],
                      ],
                      "rowsClear": Array [
                        [Function],
                      ],
                      "rowsScroll": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "rowsSet": Array [
                        [Function],
                        [Function],
                      ],
                      "rowsUpdate": Array [
                        [Function],
                        [Function],
                      ],
                      "unmount": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                    },
                    "exportDataAsCsv": [Function],
                    "footerRef": Object {
                      "current": <div>
                        <div
                          class="MuiDataGrid-footerContainer"
                        >
                          <div />
                          <div
                            class="MuiTablePagination-root"
                          >
                            <div
                              class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                            >
                              <div
                                class="MuiTablePagination-spacer"
                              />
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                id="mui-100000"
                              >
                                Linhas por página:
                              </p>
                              <div
                                class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                              >
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="mui-100000 mui-100000"
                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                  id="mui-100000"
                                  role="button"
                                  tabindex="0"
                                >
                                  100
                                </div>
                                <input
                                  aria-hidden="true"
                                  class="MuiSelect-nativeInput"
                                  tabindex="-1"
                                  value="100"
                                />
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </div>
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                              >
                                1-1 de 1
                              </p>
                              <div
                                class="MuiTablePagination-actions"
                              >
                                <button
                                  aria-label="Página anterior"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Página anterior"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                                <button
                                  aria-label="Próxima página"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Próxima página"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "forceUpdate": [Function],
                    "getAllColumns": [Function],
                    "getAllRowIds": [Function],
                    "getCellElement": [Function],
                    "getCellMode": [Function],
                    "getCellParams": [Function],
                    "getCellValue": [Function],
                    "getColumn": [Function],
                    "getColumnHeaderElement": [Function],
                    "getColumnHeaderParams": [Function],
                    "getColumnIndex": [Function],
                    "getColumnPosition": [Function],
                    "getColumnsMeta": [Function],
                    "getContainerPropsState": [Function],
                    "getDataAsCsv": [Function],
                    "getEditCellProps": [Function],
                    "getEditCellPropsParams": [Function],
                    "getEditRowsModel": [Function],
                    "getLocaleText": [Function],
                    "getRenderContextState": [Function],
                    "getRow": [Function],
                    "getRowElement": [Function],
                    "getRowIdFromRowIndex": [Function],
                    "getRowIndex": [Function],
                    "getRowModels": [Function],
                    "getRowParams": [Function],
                    "getRowsCount": [Function],
                    "getScrollPosition": [Function],
                    "getSelectedRows": [Function],
                    "getSortModel": [Function],
                    "getSortedRowIds": [Function],
                    "getSortedRows": [Function],
                    "getState": [Function],
                    "getVisibleColumns": [Function],
                    "getVisibleRowModels": [Function],
                    "headerRef": Object {
                      "current": <div>
                        <div />
                      </div>,
                    },
                    "hideColumnMenu": [Function],
                    "hideFilterPanel": [Function],
                    "hidePreferences": [Function],
                    "isCellEditable": [Function],
                    "isColumnVisibleInWindow": [Function],
                    "maxListeners": 10,
                    "publishEvent": [Function],
                    "renderingZoneRef": Object {
                      "current": <div
                        class="MuiDataGrid-renderingZone"
                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                      >
                        <div
                          aria-rowindex="2"
                          aria-selected="false"
                          class="Mui-even MuiDataGrid-row"
                          data-id="1"
                          data-rowindex="0"
                          role="row"
                          style="max-height: 52px; min-height: 52px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                            data-colindex="0"
                            data-field="percentage"
                            data-mode="view"
                            data-rowindex="0"
                            data-rowselected="false"
                            data-value="0.45"
                            role="cell"
                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                            tabindex="-1"
                          >
                            0,45%
                          </div>
                        </div>
                      </div>,
                    },
                    "resize": [Function],
                    "rootElementRef": Object {
                      "current": <div
                        aria-colcount="1"
                        aria-multiselectable="false"
                        aria-rowcount="1"
                        class="MuiDataGrid-root MuiDataGrid-root"
                        role="grid"
                      >
                        <div>
                          <div />
                        </div>
                        <div
                          class="MuiDataGrid-main"
                        >
                          <div
                            class="MuiDataGrid-columnsContainer"
                            style="min-height: 56px; max-height: 56px; line-height: 56px;"
                          >
                            <div
                              aria-rowindex="1"
                              class="MuiDataGrid-columnHeaderWrapper scroll"
                              role="row"
                              style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                            >
                              <div
                                aria-colindex="1"
                                class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                data-field="percentage"
                                role="columnheader"
                                style="width: 100px; min-width: 100px; max-width: 100px;"
                                tabindex="0"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderDraggableContainer"
                                  draggable="false"
                                >
                                  <div
                                    class="MuiDataGrid-columnHeaderTitleContainer"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderTitle"
                                      title=""
                                    >
                                      Percentage
                                    </div>
                                    <div
                                      class="MuiDataGrid-iconButtonContainer"
                                    >
                                      <button
                                        aria-label="Ordenar"
                                        class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                        tabindex="-1"
                                        title="Ordenar"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                            />
                                          </svg>
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                  </div>
                                  <div
                                    class="MuiDataGrid-menuIcon"
                                  >
                                    <button
                                      aria-controls="mui-100000"
                                      aria-haspopup="true"
                                      aria-label="Menu"
                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                      id="mui-100000"
                                      tabindex="-1"
                                      title="Menu"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  </div>
                                </div>
                                <div
                                  class="MuiDataGrid-columnSeparator"
                                  style="min-height: 56px; opacity: 1;"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M11 19V5h2v14z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            style="overflow: visible; height: 0px; width: 0px;"
                          >
                            <div
                              class="MuiDataGrid-windowContainer"
                              style="width: 0px; height: 0px;"
                            >
                              <div
                                class="MuiDataGrid-window"
                                style="top: 56px; overflow-y: auto;"
                              >
                                <div
                                  class="MuiDataGrid-dataContainer"
                                  style="min-width: 100px; min-height: 52px;"
                                >
                                  <div
                                    class="MuiDataGrid-viewport"
                                    style="min-width: 0; max-width: 0; max-height: 0;"
                                  >
                                    <div
                                      class="MuiDataGrid-renderingZone"
                                      style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                    >
                                      <div
                                        aria-rowindex="2"
                                        aria-selected="false"
                                        class="Mui-even MuiDataGrid-row"
                                        data-id="1"
                                        data-rowindex="0"
                                        role="row"
                                        style="max-height: 52px; min-height: 52px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                          data-colindex="0"
                                          data-field="percentage"
                                          data-mode="view"
                                          data-rowindex="0"
                                          data-rowselected="false"
                                          data-value="0.45"
                                          role="cell"
                                          style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                          tabindex="-1"
                                        >
                                          0,45%
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="Mui-resizeTriggers"
                          >
                            <div
                              class="expand-trigger"
                            >
                              <div
                                style="width: 1px; height: 1px;"
                              />
                            </div>
                            <div
                              class="contract-trigger"
                            />
                          </div>
                        </div>
                        <div>
                          <div
                            class="MuiDataGrid-footerContainer"
                          >
                            <div />
                            <div
                              class="MuiTablePagination-root"
                            >
                              <div
                                class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                              >
                                <div
                                  class="MuiTablePagination-spacer"
                                />
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                  id="mui-100000"
                                >
                                  Linhas por página:
                                </p>
                                <div
                                  class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-100000 mui-100000"
                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-100000"
                                    role="button"
                                    tabindex="0"
                                  >
                                    100
                                  </div>
                                  <input
                                    aria-hidden="true"
                                    class="MuiSelect-nativeInput"
                                    tabindex="-1"
                                    value="100"
                                  />
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </div>
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                >
                                  1-1 de 1
                                </p>
                                <div
                                  class="MuiTablePagination-actions"
                                >
                                  <button
                                    aria-label="Página anterior"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Página anterior"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                  <button
                                    aria-label="Próxima página"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Próxima página"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "scroll": [Function],
                    "scrollToIndexes": [Function],
                    "selectRow": [Function],
                    "selectRows": [Function],
                    "setCellFocus": [Function],
                    "setCellMode": [Function],
                    "setCellValue": [Function],
                    "setColumnHeaderFocus": [Function],
                    "setColumnIndex": [Function],
                    "setColumnVisibility": [Function],
                    "setColumnWidth": [Function],
                    "setDensity": [Function],
                    "setEditCellProps": [Function],
                    "setEditRowsModel": [Function],
                    "setFilterModel": [Function],
                    "setPage": [Function],
                    "setPageSize": [Function],
                    "setRows": [Function],
                    "setSelectionModel": [Function],
                    "setSortModel": [Function],
                    "setState": [Function],
                    "showColumnMenu": [Function],
                    "showError": [Function],
                    "showFilterPanel": [Function],
                    "showPreferences": [Function],
                    "sortColumn": [Function],
                    "state": Object {
                      "columnMenu": Object {
                        "open": false,
                      },
                      "columnReorder": Object {
                        "dragCol": "",
                      },
                      "columnResize": Object {
                        "resizingColumnField": "",
                      },
                      "columns": Object {
                        "all": Array [
                          "percentage",
                        ],
                        "lookup": Object {
                          "percentage": Object {
                            "align": "right",
                            "cellClassName": "font-tabular-nums",
                            "field": "percentage",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "headerName": "Percentage",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                        },
                      },
                      "containerSizes": Object {
                        "dataContainerSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "isVirtualized": false,
                        "lastPage": 1,
                        "renderingZone": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "renderingZonePageSize": 1,
                        "renderingZoneScrollHeight": 52,
                        "totalSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "viewportPageSize": 1,
                        "virtualRowsCount": 1,
                        "windowSizes": Object {
                          "height": 0,
                          "width": 0,
                        },
                      },
                      "density": Object {
                        "headerHeight": 56,
                        "rowHeight": 52,
                        "value": "standard",
                      },
                      "editRows": Object {},
                      "error": undefined,
                      "filter": Object {
                        "items": Array [],
                        "linkOperator": "and",
                      },
                      "focus": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "isScrolling": false,
                      "options": Object {
                        "checkboxSelectionVisibleOnly": false,
                        "classes": Object {
                          "cell": "MuiDataGrid-cell",
                          "columnHeader": "MuiDataGrid-columnHeader",
                          "root": "MuiDataGrid-root",
                          "row": "MuiDataGrid-row",
                        },
                        "columnBuffer": 2,
                        "columnTypes": Object {
                          "__default__": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                          "boolean": Object {
                            "align": "center",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "center",
                            "hide": false,
                            "renderCell": [Function],
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "boolean",
                            "width": 100,
                          },
                          "date": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "date",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "dateTime": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "dateTime",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "number": Object {
                            "align": "right",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                          "singleSelect": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "singleSelect",
                            "width": 100,
                          },
                          "string": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                        },
                        "columns": Array [
                          Object {
                            "cellClassName": "font-tabular-nums",
                            "field": "percentage",
                            "headerName": "Percentage",
                            "type": "number",
                            "valueFormatter": [Function],
                          },
                        ],
                        "density": "standard",
                        "disableColumnReorder": true,
                        "disableColumnResize": true,
                        "disableMultipleColumnsFiltering": true,
                        "disableMultipleColumnsSorting": true,
                        "disableMultipleSelection": true,
                        "filterMode": "client",
                        "headerHeight": 56,
                        "isRtl": false,
                        "licenseStatus": "Valid",
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "filterValueAny": "any",
                          "filterValueFalse": "false",
                          "filterValueTrue": "true",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                        "logLevel": "warn",
                        "logger": BufferedConsole {
                          "Console": [Function],
                          "_buffer": Array [],
                          "_counters": Object {},
                          "_groupDepth": 0,
                          "_timers": Object {},
                          "assert": [Function],
                          "clear": [Function],
                          "count": [Function],
                          "countReset": [Function],
                          "debug": [Function],
                          "dir": [Function],
                          "dirxml": [Function],
                          "error": [Function],
                          "group": [Function],
                          "groupCollapsed": [Function],
                          "groupEnd": [Function],
                          "info": [Function],
                          "log": [Function],
                          "table": [Function],
                          "time": [Function],
                          "timeEnd": [Function],
                          "timeLog": [Function],
                          "trace": [Function],
                          "warn": [Function],
                        },
                        "pageSize": 100,
                        "pagination": true,
                        "paginationMode": "client",
                        "rowHeight": 52,
                        "rows": Array [
                          Object {
                            "id": 1,
                            "percentage": 0.45,
                          },
                        ],
                        "rowsPerPageOptions": Array [
                          25,
                          50,
                          100,
                        ],
                        "scrollEndThreshold": 80,
                        "scrollbarSize": 0,
                        "sortingMode": "client",
                        "sortingOrder": Array [
                          "asc",
                          "desc",
                          null,
                        ],
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "rgb(17, 82, 147)",
                              "light": "rgb(71, 145, 219)",
                              "main": "#1976d2",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {
                            "MuiDataGrid": Object {
                              "localeText": Object {
                                "MuiTablePagination": Object {
                                  "backIconButtonText": "Página anterior",
                                  "labelDisplayedRows": [Function],
                                  "labelRowsPerPage": "Linhas por página:",
                                  "nextIconButtonText": "Próxima página",
                                },
                                "booleanCellFalseLabel": "não",
                                "booleanCellTrueLabel": "sim",
                                "checkboxSelectionHeaderName": "Seleção",
                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                "columnHeaderFiltersTooltipActive": [Function],
                                "columnHeaderSortIconLabel": "Ordenar",
                                "columnMenuFilter": "Filtrar",
                                "columnMenuHideColumn": "Ocultar",
                                "columnMenuLabel": "Menu",
                                "columnMenuShowColumns": "Exibir colunas",
                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                "columnMenuUnsort": "Desfazer ordenação",
                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                "columnsPanelHideAllButton": "Ocultar todas",
                                "columnsPanelShowAllButton": "Mostrar todas",
                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                "filterOperatorAfter": "após",
                                "filterOperatorBefore": "antes de",
                                "filterOperatorContains": "contém",
                                "filterOperatorEndsWith": "termina com",
                                "filterOperatorEquals": "é igual a",
                                "filterOperatorIs": "é",
                                "filterOperatorNot": "não é",
                                "filterOperatorOnOrAfter": "em ou após",
                                "filterOperatorOnOrBefore": "em ou antes de",
                                "filterOperatorStartsWith": "começa com",
                                "filterPanelAddFilter": "Adicionar filtro",
                                "filterPanelColumns": "Colunas",
                                "filterPanelDeleteIconLabel": "Excluir",
                                "filterPanelInputLabel": "Valor",
                                "filterPanelInputPlaceholder": "Filtrar valor",
                                "filterPanelOperatorAnd": "E",
                                "filterPanelOperatorOr": "Ou",
                                "filterPanelOperators": "Operadores",
                                "footerRowSelected": [Function],
                                "footerTotalRows": "Total de linhas:",
                                "footerTotalVisibleRows": [Function],
                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                "noRowsLabel": "Nenhuma linha",
                                "toolbarColumns": "Colunas",
                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                "toolbarDensity": "Densidade",
                                "toolbarDensityComfortable": "Confortável",
                                "toolbarDensityCompact": "Compacto",
                                "toolbarDensityLabel": "Densidade",
                                "toolbarDensityStandard": "Padrão",
                                "toolbarExport": "Exportar",
                                "toolbarExportCSV": "Baixar como CSV",
                                "toolbarExportLabel": "Exportar",
                                "toolbarFilters": "Filtros",
                                "toolbarFiltersLabel": "Exibir filtros",
                                "toolbarFiltersTooltipActive": [Function],
                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                "toolbarFiltersTooltipShow": "Exibir filtros",
                              },
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                          Symbol(mui.nested): false,
                        },
                      },
                      "pagination": Object {
                        "page": 0,
                        "pageCount": 1,
                        "pageSize": 100,
                        "paginationMode": "client",
                        "rowCount": 1,
                      },
                      "preferencePanel": Object {
                        "open": false,
                      },
                      "rendering": Object {
                        "realScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "renderContext": Object {
                          "firstColIdx": 0,
                          "firstRowIdx": 0,
                          "lastColIdx": 0,
                          "lastRowIdx": 1,
                          "leftEmptyWidth": 0,
                          "page": 0,
                          "pageSize": 100,
                          "paginationCurrentPage": 0,
                          "rightEmptyWidth": 0,
                        },
                        "renderedSizes": Object {
                          "dataContainerSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "isVirtualized": false,
                          "lastPage": 1,
                          "renderingZone": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "renderingZonePageSize": 1,
                          "renderingZoneScrollHeight": 52,
                          "totalSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "viewportPageSize": 1,
                          "virtualRowsCount": 1,
                          "windowSizes": Object {
                            "height": 0,
                            "width": 0,
                          },
                        },
                        "renderingZoneScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "virtualPage": 0,
                        "virtualRowsCount": 0,
                      },
                      "rows": Object {
                        "allRows": Array [
                          1,
                        ],
                        "idRowsLookup": Object {
                          "1": Object {
                            "id": 1,
                            "percentage": 0.45,
                          },
                        },
                        "totalRowCount": 1,
                      },
                      "scrollBar": Object {
                        "hasScrollX": true,
                        "hasScrollY": true,
                        "scrollBarSize": Object {
                          "x": 0,
                          "y": 0,
                        },
                      },
                      "selection": Object {},
                      "sorting": Object {
                        "sortModel": Array [],
                        "sortedRows": Array [
                          1,
                        ],
                      },
                      "tabIndex": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "viewportSizes": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "visibleRows": Object {
                        "visibleRowsLookup": Object {},
                      },
                    },
                    "subscribeEvent": [Function],
                    "toggleColumnMenu": [Function],
                    "updateColumn": [Function],
                    "updateColumns": [Function],
                    "updateRows": [Function],
                    "updateViewport": [Function],
                    "upsertFilter": [Function],
                    "warnOnce": false,
                    "windowRef": Object {
                      "current": <div
                        class="MuiDataGrid-window"
                        style="top: 56px; overflow-y: auto;"
                      >
                        <div
                          class="MuiDataGrid-dataContainer"
                          style="min-width: 100px; min-height: 52px;"
                        >
                          <div
                            class="MuiDataGrid-viewport"
                            style="min-width: 0; max-width: 0; max-height: 0;"
                          >
                            <div
                              class="MuiDataGrid-renderingZone"
                              style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                            >
                              <div
                                aria-rowindex="2"
                                aria-selected="false"
                                class="Mui-even MuiDataGrid-row"
                                data-id="1"
                                data-rowindex="0"
                                role="row"
                                style="max-height: 52px; min-height: 52px;"
                              >
                                <div
                                  aria-colindex="1"
                                  class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                  data-colindex="0"
                                  data-field="percentage"
                                  data-mode="view"
                                  data-rowindex="0"
                                  data-rowselected="false"
                                  data-value="0.45"
                                  role="cell"
                                  style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                  tabindex="-1"
                                >
                                  0,45%
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                  },
                }
              }
              props={
                Object {
                  "apiRef": undefined,
                  "checkboxSelectionVisibleOnly": false,
                  "columnBuffer": 2,
                  "columnTypes": Object {
                    "__default__": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                    "boolean": Object {
                      "align": "center",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "center",
                      "hide": false,
                      "renderCell": [Function],
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "boolean",
                      "width": 100,
                    },
                    "date": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "date",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "dateTime": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "dateTime",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "number": Object {
                      "align": "right",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "=",
                          "value": "=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "!=",
                          "value": "!=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">",
                          "value": ">",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">=",
                          "value": ">=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<",
                          "value": "<",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<=",
                          "value": "<=",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "right",
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "number",
                      "valueFormatter": [Function],
                      "valueParser": [Function],
                      "width": 100,
                    },
                    "singleSelect": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "singleSelect",
                      "width": 100,
                    },
                    "string": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                  },
                  "columns": Array [
                    Object {
                      "cellClassName": "font-tabular-nums",
                      "field": "percentage",
                      "headerName": "Percentage",
                      "type": "number",
                      "valueFormatter": [Function],
                    },
                  ],
                  "density": "standard",
                  "disableColumnReorder": true,
                  "disableColumnResize": true,
                  "disableMultipleColumnsFiltering": true,
                  "disableMultipleColumnsSorting": true,
                  "disableMultipleSelection": true,
                  "filterMode": "client",
                  "getRowId": undefined,
                  "headerHeight": 56,
                  "isRtl": false,
                  "licenseStatus": "Valid",
                  "localeText": Object {
                    "MuiTablePagination": Object {
                      "backIconButtonText": "Página anterior",
                      "labelDisplayedRows": [Function],
                      "labelRowsPerPage": "Linhas por página:",
                      "nextIconButtonText": "Próxima página",
                    },
                    "booleanCellFalseLabel": "não",
                    "booleanCellTrueLabel": "sim",
                    "checkboxSelectionHeaderName": "Seleção",
                    "columnHeaderFiltersLabel": "Exibir Filtros",
                    "columnHeaderFiltersTooltipActive": [Function],
                    "columnHeaderSortIconLabel": "Ordenar",
                    "columnMenuFilter": "Filtrar",
                    "columnMenuHideColumn": "Ocultar",
                    "columnMenuLabel": "Menu",
                    "columnMenuShowColumns": "Exibir colunas",
                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                    "columnMenuUnsort": "Desfazer ordenação",
                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                    "columnsPanelHideAllButton": "Ocultar todas",
                    "columnsPanelShowAllButton": "Mostrar todas",
                    "columnsPanelTextFieldLabel": "Localizar coluna",
                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                    "filterOperatorAfter": "após",
                    "filterOperatorBefore": "antes de",
                    "filterOperatorContains": "contém",
                    "filterOperatorEndsWith": "termina com",
                    "filterOperatorEquals": "é igual a",
                    "filterOperatorIs": "é",
                    "filterOperatorNot": "não é",
                    "filterOperatorOnOrAfter": "em ou após",
                    "filterOperatorOnOrBefore": "em ou antes de",
                    "filterOperatorStartsWith": "começa com",
                    "filterPanelAddFilter": "Adicionar filtro",
                    "filterPanelColumns": "Colunas",
                    "filterPanelDeleteIconLabel": "Excluir",
                    "filterPanelInputLabel": "Valor",
                    "filterPanelInputPlaceholder": "Filtrar valor",
                    "filterPanelOperatorAnd": "E",
                    "filterPanelOperatorOr": "Ou",
                    "filterPanelOperators": "Operadores",
                    "footerRowSelected": [Function],
                    "footerTotalRows": "Total de linhas:",
                    "footerTotalVisibleRows": [Function],
                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                    "noRowsLabel": "Nenhuma linha",
                    "toolbarColumns": "Colunas",
                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                    "toolbarDensity": "Densidade",
                    "toolbarDensityComfortable": "Confortável",
                    "toolbarDensityCompact": "Compacto",
                    "toolbarDensityLabel": "Densidade",
                    "toolbarDensityStandard": "Padrão",
                    "toolbarExport": "Exportar",
                    "toolbarExportCSV": "Baixar como CSV",
                    "toolbarExportLabel": "Exportar",
                    "toolbarFilters": "Filtros",
                    "toolbarFiltersLabel": "Exibir filtros",
                    "toolbarFiltersTooltipActive": [Function],
                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                    "toolbarFiltersTooltipShow": "Exibir filtros",
                  },
                  "logLevel": "warn",
                  "logger": BufferedConsole {
                    "Console": [Function],
                    "_buffer": Array [],
                    "_counters": Object {},
                    "_groupDepth": 0,
                    "_timers": Object {},
                    "assert": [Function],
                    "clear": [Function],
                    "count": [Function],
                    "countReset": [Function],
                    "debug": [Function],
                    "dir": [Function],
                    "dirxml": [Function],
                    "error": [Function],
                    "group": [Function],
                    "groupCollapsed": [Function],
                    "groupEnd": [Function],
                    "info": [Function],
                    "log": [Function],
                    "table": [Function],
                    "time": [Function],
                    "timeEnd": [Function],
                    "timeLog": [Function],
                    "trace": [Function],
                    "warn": [Function],
                  },
                  "onRowsScrollEnd": undefined,
                  "pageSize": 100,
                  "pagination": true,
                  "paginationMode": "client",
                  "rowHeight": 52,
                  "rows": Array [
                    Object {
                      "id": 1,
                      "percentage": 0.45,
                    },
                  ],
                  "rowsPerPageOptions": Array [
                    25,
                    50,
                    100,
                  ],
                  "scrollEndThreshold": 80,
                  "sortingMode": "client",
                  "sortingOrder": Array [
                    "asc",
                    "desc",
                    null,
                  ],
                  "theme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(17, 82, 147)",
                        "light": "rgb(71, 145, 219)",
                        "main": "#1976d2",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {
                      "MuiDataGrid": Object {
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                      },
                    },
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  },
                }
              }
            >
              <ForwardRef>
                <NoSsr>
                  <div
                    aria-colcount={1}
                    aria-multiselectable={false}
                    aria-rowcount={1}
                    className="MuiDataGrid-root MuiDataGrid-root"
                    role="grid"
                  >
                    <vs>
                      <Cs
                        api={
                          Object {
                            "current": Ti {
                              "applyFilter": [Function],
                              "applyFilterLinkOperator": [Function],
                              "applyFilters": [Function],
                              "applySorting": [Function],
                              "columnHeadersContainerElementRef": Object {
                                "current": <div
                                  class="MuiDataGrid-columnsContainer"
                                  style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                >
                                  <div
                                    aria-rowindex="1"
                                    class="MuiDataGrid-columnHeaderWrapper scroll"
                                    role="row"
                                    style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                      data-field="percentage"
                                      role="columnheader"
                                      style="width: 100px; min-width: 100px; max-width: 100px;"
                                      tabindex="0"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderDraggableContainer"
                                        draggable="false"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitleContainer"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderTitle"
                                            title=""
                                          >
                                            Percentage
                                          </div>
                                          <div
                                            class="MuiDataGrid-iconButtonContainer"
                                          >
                                            <button
                                              aria-label="Ordenar"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                              tabindex="-1"
                                              title="Ordenar"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                  />
                                                </svg>
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </button>
                                          </div>
                                        </div>
                                        <div
                                          class="MuiDataGrid-menuIcon"
                                        >
                                          <button
                                            aria-controls="mui-100000"
                                            aria-haspopup="true"
                                            aria-label="Menu"
                                            class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                            id="mui-100000"
                                            tabindex="-1"
                                            title="Menu"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-columnSeparator"
                                        style="min-height: 56px; opacity: 1;"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M11 19V5h2v14z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "columnHeadersElementRef": Object {
                                "current": <div
                                  aria-rowindex="1"
                                  class="MuiDataGrid-columnHeaderWrapper scroll"
                                  role="row"
                                  style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                >
                                  <div
                                    aria-colindex="1"
                                    class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                    data-field="percentage"
                                    role="columnheader"
                                    style="width: 100px; min-width: 100px; max-width: 100px;"
                                    tabindex="0"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderDraggableContainer"
                                      draggable="false"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderTitleContainer"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitle"
                                          title=""
                                        >
                                          Percentage
                                        </div>
                                        <div
                                          class="MuiDataGrid-iconButtonContainer"
                                        >
                                          <button
                                            aria-label="Ordenar"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                            tabindex="-1"
                                            title="Ordenar"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-menuIcon"
                                      >
                                        <button
                                          aria-controls="mui-100000"
                                          aria-haspopup="true"
                                          aria-label="Menu"
                                          class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                          id="mui-100000"
                                          tabindex="-1"
                                          title="Menu"
                                          type="button"
                                        >
                                          <span
                                            class="MuiIconButton-label"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                    <div
                                      class="MuiDataGrid-columnSeparator"
                                      style="min-height: 56px; opacity: 1;"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11 19V5h2v14z"
                                        />
                                      </svg>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "commitCellChange": [Function],
                              "components": Object {
                                "BooleanCellFalseIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "BooleanCellTrueIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Checkbox": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Naked": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "checked": [Function],
                                      "checkedIcon": [Function],
                                      "classes": [Function],
                                      "color": [Function],
                                      "disableRipple": [Function],
                                      "disabled": [Function],
                                      "icon": [Function],
                                      "id": [Function],
                                      "indeterminate": [Function],
                                      "indeterminateIcon": [Function],
                                      "inputProps": [Function],
                                      "inputRef": [Function],
                                      "onChange": [Function],
                                      "required": [Function],
                                      "size": [Function],
                                      "value": [Function],
                                    },
                                    "render": [Function],
                                  },
                                  "displayName": "WithStyles(ForwardRef(Checkbox))",
                                  "options": Object {
                                    "defaultTheme": Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "activatedOpacity": 0.12,
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "disabledOpacity": 0.38,
                                          "focus": "rgba(0, 0, 0, 0.12)",
                                          "focusOpacity": 0.12,
                                          "hover": "rgba(0, 0, 0, 0.04)",
                                          "hoverOpacity": 0.04,
                                          "selected": "rgba(0, 0, 0, 0.08)",
                                          "selectedOpacity": 0.08,
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "info": Object {
                                          "contrastText": "#fff",
                                          "dark": "#1976d2",
                                          "light": "#64b5f6",
                                          "main": "#2196f3",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                        "warning": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#f57c00",
                                          "light": "#ffb74d",
                                          "main": "#ff9800",
                                        },
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                    },
                                    "name": "MuiCheckbox",
                                  },
                                  "propTypes": Object {
                                    "classes": [Function],
                                    "innerRef": [Function],
                                  },
                                  "render": [Function],
                                  "useStyles": [Function],
                                },
                                "ColumnFilteredIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnMenu": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ColumnMenuIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnResizeIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSelectorIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedAscendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedDescendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnUnsortedIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": [Function],
                                },
                                "ColumnsPanel": [Function],
                                "DensityComfortableIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityCompactIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityStandardIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ErrorOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ExportIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "FilterPanel": [Function],
                                "Footer": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Header": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "LoadingOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoResultsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoRowsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "OpenFilterButtonIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Pagination": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Panel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "PreferencesPanel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Toolbar": undefined,
                              },
                              "componentsProps": undefined,
                              "copySelectedRowsToClipboard": [Function],
                              "deleteFilter": [Function],
                              "events": Object {
                                "cellClick": Array [
                                  [Function],
                                ],
                                "cellDoubleClick": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellDragEnd": Array [
                                  [Function],
                                ],
                                "cellDragEnter": Array [
                                  [Function],
                                ],
                                "cellDragOver": Array [
                                  [Function],
                                ],
                                "cellEditEnter": Array [
                                  [Function],
                                ],
                                "cellEditExit": Array [
                                  [Function],
                                ],
                                "cellEditPropsChange": Array [
                                  [Function],
                                ],
                                "cellEditPropsChangeCommitted": Array [
                                  [Function],
                                ],
                                "cellFocusOut": Array [
                                  [Function],
                                ],
                                "cellKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellModeChange": Array [
                                  [Function],
                                ],
                                "cellMouseDown": Array [
                                  [Function],
                                ],
                                "cellMouseUp": Array [
                                  [Function],
                                ],
                                "cellNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnHeaderBlur": Array [
                                  [Function],
                                ],
                                "columnHeaderClick": Array [
                                  [Function],
                                ],
                                "columnHeaderDragEnd": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderDragEnter": Array [
                                  [Function],
                                ],
                                "columnHeaderDragOver": Array [
                                  [Function],
                                ],
                                "columnHeaderDragStart": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderFocus": Array [
                                  [Function],
                                ],
                                "columnHeaderKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnResizeStart": Array [
                                  [Function],
                                ],
                                "columnResizeStop": Array [
                                  [Function],
                                ],
                                "columnSeparatorMouseDown": Array [
                                  [Function],
                                ],
                                "columnsChange": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "componentError": Array [
                                  [Function],
                                ],
                                "debouncedResize": Array [
                                  [Function],
                                  [Function],
                                ],
                                "keydown": Array [
                                  [Function],
                                ],
                                "resize": Array [
                                  [Function],
                                ],
                                "rowClick": Array [
                                  [Function],
                                ],
                                "rowsClear": Array [
                                  [Function],
                                ],
                                "rowsScroll": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "rowsSet": Array [
                                  [Function],
                                  [Function],
                                ],
                                "rowsUpdate": Array [
                                  [Function],
                                  [Function],
                                ],
                                "unmount": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "exportDataAsCsv": [Function],
                              "footerRef": Object {
                                "current": <div>
                                  <div
                                    class="MuiDataGrid-footerContainer"
                                  >
                                    <div />
                                    <div
                                      class="MuiTablePagination-root"
                                    >
                                      <div
                                        class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          class="MuiTablePagination-spacer"
                                        />
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          id="mui-100000"
                                        >
                                          Linhas por página:
                                        </p>
                                        <div
                                          class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                        >
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-100000 mui-100000"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-100000"
                                            role="button"
                                            tabindex="0"
                                          >
                                            100
                                          </div>
                                          <input
                                            aria-hidden="true"
                                            class="MuiSelect-nativeInput"
                                            tabindex="-1"
                                            value="100"
                                          />
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </div>
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                        >
                                          1-1 de 1
                                        </p>
                                        <div
                                          class="MuiTablePagination-actions"
                                        >
                                          <button
                                            aria-label="Página anterior"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Página anterior"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                          <button
                                            aria-label="Próxima página"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Próxima página"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "forceUpdate": [Function],
                              "getAllColumns": [Function],
                              "getAllRowIds": [Function],
                              "getCellElement": [Function],
                              "getCellMode": [Function],
                              "getCellParams": [Function],
                              "getCellValue": [Function],
                              "getColumn": [Function],
                              "getColumnHeaderElement": [Function],
                              "getColumnHeaderParams": [Function],
                              "getColumnIndex": [Function],
                              "getColumnPosition": [Function],
                              "getColumnsMeta": [Function],
                              "getContainerPropsState": [Function],
                              "getDataAsCsv": [Function],
                              "getEditCellProps": [Function],
                              "getEditCellPropsParams": [Function],
                              "getEditRowsModel": [Function],
                              "getLocaleText": [Function],
                              "getRenderContextState": [Function],
                              "getRow": [Function],
                              "getRowElement": [Function],
                              "getRowIdFromRowIndex": [Function],
                              "getRowIndex": [Function],
                              "getRowModels": [Function],
                              "getRowParams": [Function],
                              "getRowsCount": [Function],
                              "getScrollPosition": [Function],
                              "getSelectedRows": [Function],
                              "getSortModel": [Function],
                              "getSortedRowIds": [Function],
                              "getSortedRows": [Function],
                              "getState": [Function],
                              "getVisibleColumns": [Function],
                              "getVisibleRowModels": [Function],
                              "headerRef": Object {
                                "current": <div>
                                  <div />
                                </div>,
                              },
                              "hideColumnMenu": [Function],
                              "hideFilterPanel": [Function],
                              "hidePreferences": [Function],
                              "isCellEditable": [Function],
                              "isColumnVisibleInWindow": [Function],
                              "maxListeners": 10,
                              "publishEvent": [Function],
                              "renderingZoneRef": Object {
                                "current": <div
                                  class="MuiDataGrid-renderingZone"
                                  style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                >
                                  <div
                                    aria-rowindex="2"
                                    aria-selected="false"
                                    class="Mui-even MuiDataGrid-row"
                                    data-id="1"
                                    data-rowindex="0"
                                    role="row"
                                    style="max-height: 52px; min-height: 52px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                      data-colindex="0"
                                      data-field="percentage"
                                      data-mode="view"
                                      data-rowindex="0"
                                      data-rowselected="false"
                                      data-value="0.45"
                                      role="cell"
                                      style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                      tabindex="-1"
                                    >
                                      0,45%
                                    </div>
                                  </div>
                                </div>,
                              },
                              "resize": [Function],
                              "rootElementRef": Object {
                                "current": <div
                                  aria-colcount="1"
                                  aria-multiselectable="false"
                                  aria-rowcount="1"
                                  class="MuiDataGrid-root MuiDataGrid-root"
                                  role="grid"
                                >
                                  <div>
                                    <div />
                                  </div>
                                  <div
                                    class="MuiDataGrid-main"
                                  >
                                    <div
                                      class="MuiDataGrid-columnsContainer"
                                      style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                    >
                                      <div
                                        aria-rowindex="1"
                                        class="MuiDataGrid-columnHeaderWrapper scroll"
                                        role="row"
                                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                          data-field="percentage"
                                          role="columnheader"
                                          style="width: 100px; min-width: 100px; max-width: 100px;"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderDraggableContainer"
                                            draggable="false"
                                          >
                                            <div
                                              class="MuiDataGrid-columnHeaderTitleContainer"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderTitle"
                                                title=""
                                              >
                                                Percentage
                                              </div>
                                              <div
                                                class="MuiDataGrid-iconButtonContainer"
                                              >
                                                <button
                                                  aria-label="Ordenar"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                  tabindex="-1"
                                                  title="Ordenar"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                            <div
                                              class="MuiDataGrid-menuIcon"
                                            >
                                              <button
                                                aria-controls="mui-100000"
                                                aria-haspopup="true"
                                                aria-label="Menu"
                                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                id="mui-100000"
                                                tabindex="-1"
                                                title="Menu"
                                                type="button"
                                              >
                                                <span
                                                  class="MuiIconButton-label"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                    />
                                                  </svg>
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </button>
                                            </div>
                                          </div>
                                          <div
                                            class="MuiDataGrid-columnSeparator"
                                            style="min-height: 56px; opacity: 1;"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M11 19V5h2v14z"
                                              />
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      style="overflow: visible; height: 0px; width: 0px;"
                                    >
                                      <div
                                        class="MuiDataGrid-windowContainer"
                                        style="width: 0px; height: 0px;"
                                      >
                                        <div
                                          class="MuiDataGrid-window"
                                          style="top: 56px; overflow-y: auto;"
                                        >
                                          <div
                                            class="MuiDataGrid-dataContainer"
                                            style="min-width: 100px; min-height: 52px;"
                                          >
                                            <div
                                              class="MuiDataGrid-viewport"
                                              style="min-width: 0; max-width: 0; max-height: 0;"
                                            >
                                              <div
                                                class="MuiDataGrid-renderingZone"
                                                style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                              >
                                                <div
                                                  aria-rowindex="2"
                                                  aria-selected="false"
                                                  class="Mui-even MuiDataGrid-row"
                                                  data-id="1"
                                                  data-rowindex="0"
                                                  role="row"
                                                  style="max-height: 52px; min-height: 52px;"
                                                >
                                                  <div
                                                    aria-colindex="1"
                                                    class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                                    data-colindex="0"
                                                    data-field="percentage"
                                                    data-mode="view"
                                                    data-rowindex="0"
                                                    data-rowselected="false"
                                                    data-value="0.45"
                                                    role="cell"
                                                    style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                                    tabindex="-1"
                                                  >
                                                    0,45%
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="Mui-resizeTriggers"
                                    >
                                      <div
                                        class="expand-trigger"
                                      >
                                        <div
                                          style="width: 1px; height: 1px;"
                                        />
                                      </div>
                                      <div
                                        class="contract-trigger"
                                      />
                                    </div>
                                  </div>
                                  <div>
                                    <div
                                      class="MuiDataGrid-footerContainer"
                                    >
                                      <div />
                                      <div
                                        class="MuiTablePagination-root"
                                      >
                                        <div
                                          class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                        >
                                          <div
                                            class="MuiTablePagination-spacer"
                                          />
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                            id="mui-100000"
                                          >
                                            Linhas por página:
                                          </p>
                                          <div
                                            class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                          >
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-100000 mui-100000"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-100000"
                                              role="button"
                                              tabindex="0"
                                            >
                                              100
                                            </div>
                                            <input
                                              aria-hidden="true"
                                              class="MuiSelect-nativeInput"
                                              tabindex="-1"
                                              value="100"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </div>
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          >
                                            1-1 de 1
                                          </p>
                                          <div
                                            class="MuiTablePagination-actions"
                                          >
                                            <button
                                              aria-label="Página anterior"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Página anterior"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                            <button
                                              aria-label="Próxima página"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Próxima página"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "scroll": [Function],
                              "scrollToIndexes": [Function],
                              "selectRow": [Function],
                              "selectRows": [Function],
                              "setCellFocus": [Function],
                              "setCellMode": [Function],
                              "setCellValue": [Function],
                              "setColumnHeaderFocus": [Function],
                              "setColumnIndex": [Function],
                              "setColumnVisibility": [Function],
                              "setColumnWidth": [Function],
                              "setDensity": [Function],
                              "setEditCellProps": [Function],
                              "setEditRowsModel": [Function],
                              "setFilterModel": [Function],
                              "setPage": [Function],
                              "setPageSize": [Function],
                              "setRows": [Function],
                              "setSelectionModel": [Function],
                              "setSortModel": [Function],
                              "setState": [Function],
                              "showColumnMenu": [Function],
                              "showError": [Function],
                              "showFilterPanel": [Function],
                              "showPreferences": [Function],
                              "sortColumn": [Function],
                              "state": Object {
                                "columnMenu": Object {
                                  "open": false,
                                },
                                "columnReorder": Object {
                                  "dragCol": "",
                                },
                                "columnResize": Object {
                                  "resizingColumnField": "",
                                },
                                "columns": Object {
                                  "all": Array [
                                    "percentage",
                                  ],
                                  "lookup": Object {
                                    "percentage": Object {
                                      "align": "right",
                                      "cellClassName": "font-tabular-nums",
                                      "field": "percentage",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "headerName": "Percentage",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                  },
                                },
                                "containerSizes": Object {
                                  "dataContainerSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "isVirtualized": false,
                                  "lastPage": 1,
                                  "renderingZone": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "renderingZonePageSize": 1,
                                  "renderingZoneScrollHeight": 52,
                                  "totalSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "viewportPageSize": 1,
                                  "virtualRowsCount": 1,
                                  "windowSizes": Object {
                                    "height": 0,
                                    "width": 0,
                                  },
                                },
                                "density": Object {
                                  "headerHeight": 56,
                                  "rowHeight": 52,
                                  "value": "standard",
                                },
                                "editRows": Object {},
                                "error": undefined,
                                "filter": Object {
                                  "items": Array [],
                                  "linkOperator": "and",
                                },
                                "focus": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "isScrolling": false,
                                "options": Object {
                                  "checkboxSelectionVisibleOnly": false,
                                  "classes": Object {
                                    "cell": "MuiDataGrid-cell",
                                    "columnHeader": "MuiDataGrid-columnHeader",
                                    "root": "MuiDataGrid-root",
                                    "row": "MuiDataGrid-row",
                                  },
                                  "columnBuffer": 2,
                                  "columnTypes": Object {
                                    "__default__": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                    "boolean": Object {
                                      "align": "center",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "center",
                                      "hide": false,
                                      "renderCell": [Function],
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "boolean",
                                      "width": 100,
                                    },
                                    "date": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "date",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "dateTime": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "dateTime",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "number": Object {
                                      "align": "right",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                    "singleSelect": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "singleSelect",
                                      "width": 100,
                                    },
                                    "string": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                  },
                                  "columns": Array [
                                    Object {
                                      "cellClassName": "font-tabular-nums",
                                      "field": "percentage",
                                      "headerName": "Percentage",
                                      "type": "number",
                                      "valueFormatter": [Function],
                                    },
                                  ],
                                  "density": "standard",
                                  "disableColumnReorder": true,
                                  "disableColumnResize": true,
                                  "disableMultipleColumnsFiltering": true,
                                  "disableMultipleColumnsSorting": true,
                                  "disableMultipleSelection": true,
                                  "filterMode": "client",
                                  "headerHeight": 56,
                                  "isRtl": false,
                                  "licenseStatus": "Valid",
                                  "localeText": Object {
                                    "MuiTablePagination": Object {
                                      "backIconButtonText": "Página anterior",
                                      "labelDisplayedRows": [Function],
                                      "labelRowsPerPage": "Linhas por página:",
                                      "nextIconButtonText": "Próxima página",
                                    },
                                    "booleanCellFalseLabel": "não",
                                    "booleanCellTrueLabel": "sim",
                                    "checkboxSelectionHeaderName": "Seleção",
                                    "columnHeaderFiltersLabel": "Exibir Filtros",
                                    "columnHeaderFiltersTooltipActive": [Function],
                                    "columnHeaderSortIconLabel": "Ordenar",
                                    "columnMenuFilter": "Filtrar",
                                    "columnMenuHideColumn": "Ocultar",
                                    "columnMenuLabel": "Menu",
                                    "columnMenuShowColumns": "Exibir colunas",
                                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                                    "columnMenuUnsort": "Desfazer ordenação",
                                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                                    "columnsPanelHideAllButton": "Ocultar todas",
                                    "columnsPanelShowAllButton": "Mostrar todas",
                                    "columnsPanelTextFieldLabel": "Localizar coluna",
                                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                    "filterOperatorAfter": "após",
                                    "filterOperatorBefore": "antes de",
                                    "filterOperatorContains": "contém",
                                    "filterOperatorEndsWith": "termina com",
                                    "filterOperatorEquals": "é igual a",
                                    "filterOperatorIs": "é",
                                    "filterOperatorNot": "não é",
                                    "filterOperatorOnOrAfter": "em ou após",
                                    "filterOperatorOnOrBefore": "em ou antes de",
                                    "filterOperatorStartsWith": "começa com",
                                    "filterPanelAddFilter": "Adicionar filtro",
                                    "filterPanelColumns": "Colunas",
                                    "filterPanelDeleteIconLabel": "Excluir",
                                    "filterPanelInputLabel": "Valor",
                                    "filterPanelInputPlaceholder": "Filtrar valor",
                                    "filterPanelOperatorAnd": "E",
                                    "filterPanelOperatorOr": "Ou",
                                    "filterPanelOperators": "Operadores",
                                    "filterValueAny": "any",
                                    "filterValueFalse": "false",
                                    "filterValueTrue": "true",
                                    "footerRowSelected": [Function],
                                    "footerTotalRows": "Total de linhas:",
                                    "footerTotalVisibleRows": [Function],
                                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                    "noRowsLabel": "Nenhuma linha",
                                    "toolbarColumns": "Colunas",
                                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                                    "toolbarDensity": "Densidade",
                                    "toolbarDensityComfortable": "Confortável",
                                    "toolbarDensityCompact": "Compacto",
                                    "toolbarDensityLabel": "Densidade",
                                    "toolbarDensityStandard": "Padrão",
                                    "toolbarExport": "Exportar",
                                    "toolbarExportCSV": "Baixar como CSV",
                                    "toolbarExportLabel": "Exportar",
                                    "toolbarFilters": "Filtros",
                                    "toolbarFiltersLabel": "Exibir filtros",
                                    "toolbarFiltersTooltipActive": [Function],
                                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                                    "toolbarFiltersTooltipShow": "Exibir filtros",
                                  },
                                  "logLevel": "warn",
                                  "logger": BufferedConsole {
                                    "Console": [Function],
                                    "_buffer": Array [],
                                    "_counters": Object {},
                                    "_groupDepth": 0,
                                    "_timers": Object {},
                                    "assert": [Function],
                                    "clear": [Function],
                                    "count": [Function],
                                    "countReset": [Function],
                                    "debug": [Function],
                                    "dir": [Function],
                                    "dirxml": [Function],
                                    "error": [Function],
                                    "group": [Function],
                                    "groupCollapsed": [Function],
                                    "groupEnd": [Function],
                                    "info": [Function],
                                    "log": [Function],
                                    "table": [Function],
                                    "time": [Function],
                                    "timeEnd": [Function],
                                    "timeLog": [Function],
                                    "trace": [Function],
                                    "warn": [Function],
                                  },
                                  "pageSize": 100,
                                  "pagination": true,
                                  "paginationMode": "client",
                                  "rowHeight": 52,
                                  "rows": Array [
                                    Object {
                                      "id": 1,
                                      "percentage": 0.45,
                                    },
                                  ],
                                  "rowsPerPageOptions": Array [
                                    25,
                                    50,
                                    100,
                                  ],
                                  "scrollEndThreshold": 80,
                                  "scrollbarSize": 0,
                                  "sortingMode": "client",
                                  "sortingOrder": Array [
                                    "asc",
                                    "desc",
                                    null,
                                  ],
                                  "theme": Object {
                                    "breakpoints": Object {
                                      "between": [Function],
                                      "down": [Function],
                                      "keys": Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ],
                                      "only": [Function],
                                      "up": [Function],
                                      "values": Object {
                                        "lg": 1280,
                                        "md": 960,
                                        "sm": 600,
                                        "xl": 1920,
                                        "xs": 0,
                                      },
                                      "width": [Function],
                                    },
                                    "direction": "ltr",
                                    "mixins": Object {
                                      "gutters": [Function],
                                      "toolbar": Object {
                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                          "minHeight": 48,
                                        },
                                        "@media (min-width:600px)": Object {
                                          "minHeight": 64,
                                        },
                                        "minHeight": 56,
                                      },
                                    },
                                    "overrides": Object {},
                                    "palette": Object {
                                      "action": Object {
                                        "activatedOpacity": 0.12,
                                        "active": "rgba(0, 0, 0, 0.54)",
                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                        "disabledOpacity": 0.38,
                                        "focus": "rgba(0, 0, 0, 0.12)",
                                        "focusOpacity": 0.12,
                                        "hover": "rgba(0, 0, 0, 0.04)",
                                        "hoverOpacity": 0.04,
                                        "selected": "rgba(0, 0, 0, 0.08)",
                                        "selectedOpacity": 0.08,
                                      },
                                      "augmentColor": [Function],
                                      "background": Object {
                                        "default": "#fafafa",
                                        "paper": "#fff",
                                      },
                                      "common": Object {
                                        "black": "#000",
                                        "white": "#fff",
                                      },
                                      "contrastThreshold": 3,
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "error": Object {
                                        "contrastText": "#fff",
                                        "dark": "#d32f2f",
                                        "light": "#e57373",
                                        "main": "#f44336",
                                      },
                                      "getContrastText": [Function],
                                      "grey": Object {
                                        "100": "#f5f5f5",
                                        "200": "#eeeeee",
                                        "300": "#e0e0e0",
                                        "400": "#bdbdbd",
                                        "50": "#fafafa",
                                        "500": "#9e9e9e",
                                        "600": "#757575",
                                        "700": "#616161",
                                        "800": "#424242",
                                        "900": "#212121",
                                        "A100": "#d5d5d5",
                                        "A200": "#aaaaaa",
                                        "A400": "#303030",
                                        "A700": "#616161",
                                      },
                                      "info": Object {
                                        "contrastText": "#fff",
                                        "dark": "#1976d2",
                                        "light": "#64b5f6",
                                        "main": "#2196f3",
                                      },
                                      "primary": Object {
                                        "contrastText": "#fff",
                                        "dark": "rgb(17, 82, 147)",
                                        "light": "rgb(71, 145, 219)",
                                        "main": "#1976d2",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#c51162",
                                        "light": "#ff4081",
                                        "main": "#f50057",
                                      },
                                      "success": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#388e3c",
                                        "light": "#81c784",
                                        "main": "#4caf50",
                                      },
                                      "text": Object {
                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                        "hint": "rgba(0, 0, 0, 0.38)",
                                        "primary": "rgba(0, 0, 0, 0.87)",
                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                      },
                                      "tonalOffset": 0.2,
                                      "type": "light",
                                      "warning": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#f57c00",
                                        "light": "#ffb74d",
                                        "main": "#ff9800",
                                      },
                                    },
                                    "props": Object {
                                      "MuiDataGrid": Object {
                                        "localeText": Object {
                                          "MuiTablePagination": Object {
                                            "backIconButtonText": "Página anterior",
                                            "labelDisplayedRows": [Function],
                                            "labelRowsPerPage": "Linhas por página:",
                                            "nextIconButtonText": "Próxima página",
                                          },
                                          "booleanCellFalseLabel": "não",
                                          "booleanCellTrueLabel": "sim",
                                          "checkboxSelectionHeaderName": "Seleção",
                                          "columnHeaderFiltersLabel": "Exibir Filtros",
                                          "columnHeaderFiltersTooltipActive": [Function],
                                          "columnHeaderSortIconLabel": "Ordenar",
                                          "columnMenuFilter": "Filtrar",
                                          "columnMenuHideColumn": "Ocultar",
                                          "columnMenuLabel": "Menu",
                                          "columnMenuShowColumns": "Exibir colunas",
                                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                                          "columnMenuUnsort": "Desfazer ordenação",
                                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                                          "columnsPanelHideAllButton": "Ocultar todas",
                                          "columnsPanelShowAllButton": "Mostrar todas",
                                          "columnsPanelTextFieldLabel": "Localizar coluna",
                                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                          "filterOperatorAfter": "após",
                                          "filterOperatorBefore": "antes de",
                                          "filterOperatorContains": "contém",
                                          "filterOperatorEndsWith": "termina com",
                                          "filterOperatorEquals": "é igual a",
                                          "filterOperatorIs": "é",
                                          "filterOperatorNot": "não é",
                                          "filterOperatorOnOrAfter": "em ou após",
                                          "filterOperatorOnOrBefore": "em ou antes de",
                                          "filterOperatorStartsWith": "começa com",
                                          "filterPanelAddFilter": "Adicionar filtro",
                                          "filterPanelColumns": "Colunas",
                                          "filterPanelDeleteIconLabel": "Excluir",
                                          "filterPanelInputLabel": "Valor",
                                          "filterPanelInputPlaceholder": "Filtrar valor",
                                          "filterPanelOperatorAnd": "E",
                                          "filterPanelOperatorOr": "Ou",
                                          "filterPanelOperators": "Operadores",
                                          "footerRowSelected": [Function],
                                          "footerTotalRows": "Total de linhas:",
                                          "footerTotalVisibleRows": [Function],
                                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                          "noRowsLabel": "Nenhuma linha",
                                          "toolbarColumns": "Colunas",
                                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                                          "toolbarDensity": "Densidade",
                                          "toolbarDensityComfortable": "Confortável",
                                          "toolbarDensityCompact": "Compacto",
                                          "toolbarDensityLabel": "Densidade",
                                          "toolbarDensityStandard": "Padrão",
                                          "toolbarExport": "Exportar",
                                          "toolbarExportCSV": "Baixar como CSV",
                                          "toolbarExportLabel": "Exportar",
                                          "toolbarFilters": "Filtros",
                                          "toolbarFiltersLabel": "Exibir filtros",
                                          "toolbarFiltersTooltipActive": [Function],
                                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                                          "toolbarFiltersTooltipShow": "Exibir filtros",
                                        },
                                      },
                                    },
                                    "shadows": Array [
                                      "none",
                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                    ],
                                    "shape": Object {
                                      "borderRadius": 4,
                                    },
                                    "spacing": [Function],
                                    "transitions": Object {
                                      "create": [Function],
                                      "duration": Object {
                                        "complex": 375,
                                        "enteringScreen": 225,
                                        "leavingScreen": 195,
                                        "short": 250,
                                        "shorter": 200,
                                        "shortest": 150,
                                        "standard": 300,
                                      },
                                      "easing": Object {
                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                      },
                                      "getAutoHeightDuration": [Function],
                                    },
                                    "typography": Object {
                                      "body1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.5,
                                      },
                                      "body2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.01071em",
                                        "lineHeight": 1.43,
                                      },
                                      "button": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.02857em",
                                        "lineHeight": 1.75,
                                        "textTransform": "uppercase",
                                      },
                                      "caption": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.03333em",
                                        "lineHeight": 1.66,
                                      },
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": 14,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.01562em",
                                        "lineHeight": 1.167,
                                      },
                                      "h2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.00833em",
                                        "lineHeight": 1.2,
                                      },
                                      "h3": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.167,
                                      },
                                      "h4": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00735em",
                                        "lineHeight": 1.235,
                                      },
                                      "h5": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.334,
                                      },
                                      "h6": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.25rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.0075em",
                                        "lineHeight": 1.6,
                                      },
                                      "htmlFontSize": 16,
                                      "overline": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.08333em",
                                        "lineHeight": 2.66,
                                        "textTransform": "uppercase",
                                      },
                                      "pxToRem": [Function],
                                      "round": [Function],
                                      "subtitle1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.75,
                                      },
                                      "subtitle2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.00714em",
                                        "lineHeight": 1.57,
                                      },
                                    },
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "drawer": 1200,
                                      "mobileStepper": 1000,
                                      "modal": 1300,
                                      "snackbar": 1400,
                                      "speedDial": 1050,
                                      "tooltip": 1500,
                                    },
                                    Symbol(mui.nested): false,
                                  },
                                },
                                "pagination": Object {
                                  "page": 0,
                                  "pageCount": 1,
                                  "pageSize": 100,
                                  "paginationMode": "client",
                                  "rowCount": 1,
                                },
                                "preferencePanel": Object {
                                  "open": false,
                                },
                                "rendering": Object {
                                  "realScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "renderContext": Object {
                                    "firstColIdx": 0,
                                    "firstRowIdx": 0,
                                    "lastColIdx": 0,
                                    "lastRowIdx": 1,
                                    "leftEmptyWidth": 0,
                                    "page": 0,
                                    "pageSize": 100,
                                    "paginationCurrentPage": 0,
                                    "rightEmptyWidth": 0,
                                  },
                                  "renderedSizes": Object {
                                    "dataContainerSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "isVirtualized": false,
                                    "lastPage": 1,
                                    "renderingZone": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "renderingZonePageSize": 1,
                                    "renderingZoneScrollHeight": 52,
                                    "totalSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "viewportPageSize": 1,
                                    "virtualRowsCount": 1,
                                    "windowSizes": Object {
                                      "height": 0,
                                      "width": 0,
                                    },
                                  },
                                  "renderingZoneScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "virtualPage": 0,
                                  "virtualRowsCount": 0,
                                },
                                "rows": Object {
                                  "allRows": Array [
                                    1,
                                  ],
                                  "idRowsLookup": Object {
                                    "1": Object {
                                      "id": 1,
                                      "percentage": 0.45,
                                    },
                                  },
                                  "totalRowCount": 1,
                                },
                                "scrollBar": Object {
                                  "hasScrollX": true,
                                  "hasScrollY": true,
                                  "scrollBarSize": Object {
                                    "x": 0,
                                    "y": 0,
                                  },
                                },
                                "selection": Object {},
                                "sorting": Object {
                                  "sortModel": Array [],
                                  "sortedRows": Array [
                                    1,
                                  ],
                                },
                                "tabIndex": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "viewportSizes": Object {
                                  "height": 0,
                                  "width": 0,
                                },
                                "visibleRows": Object {
                                  "visibleRowsLookup": Object {},
                                },
                              },
                              "subscribeEvent": [Function],
                              "toggleColumnMenu": [Function],
                              "updateColumn": [Function],
                              "updateColumns": [Function],
                              "updateRows": [Function],
                              "updateViewport": [Function],
                              "upsertFilter": [Function],
                              "warnOnce": false,
                              "windowRef": Object {
                                "current": <div
                                  class="MuiDataGrid-window"
                                  style="top: 56px; overflow-y: auto;"
                                >
                                  <div
                                    class="MuiDataGrid-dataContainer"
                                    style="min-width: 100px; min-height: 52px;"
                                  >
                                    <div
                                      class="MuiDataGrid-viewport"
                                      style="min-width: 0; max-width: 0; max-height: 0;"
                                    >
                                      <div
                                        class="MuiDataGrid-renderingZone"
                                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                      >
                                        <div
                                          aria-rowindex="2"
                                          aria-selected="false"
                                          class="Mui-even MuiDataGrid-row"
                                          data-id="1"
                                          data-rowindex="0"
                                          role="row"
                                          style="max-height: 52px; min-height: 52px;"
                                        >
                                          <div
                                            aria-colindex="1"
                                            class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                            data-colindex="0"
                                            data-field="percentage"
                                            data-mode="view"
                                            data-rowindex="0"
                                            data-rowselected="false"
                                            data-value="0.45"
                                            role="cell"
                                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                            tabindex="-1"
                                          >
                                            0,45%
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                            },
                          }
                        }
                        hasError={false}
                        logger={
                          Object {
                            "debug": [Function],
                            "error": [Function],
                            "info": [Function],
                            "warn": [Function],
                          }
                        }
                        render={[Function]}
                      >
                        <Es>
                          <div>
                            <ForwardRef>
                              <div>
                                <ForwardRef>
                                  <ForwardRef
                                    open={false}
                                  >
                                    <ForwardRef(Popper)
                                      anchorEl={
                                        <div
                                          class="MuiDataGrid-columnsContainer"
                                          style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                        >
                                          <div
                                            aria-rowindex="1"
                                            class="MuiDataGrid-columnHeaderWrapper scroll"
                                            role="row"
                                            style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                          >
                                            <div
                                              aria-colindex="1"
                                              class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                              data-field="percentage"
                                              role="columnheader"
                                              style="width: 100px; min-width: 100px; max-width: 100px;"
                                              tabindex="0"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderDraggableContainer"
                                                draggable="false"
                                              >
                                                <div
                                                  class="MuiDataGrid-columnHeaderTitleContainer"
                                                >
                                                  <div
                                                    class="MuiDataGrid-columnHeaderTitle"
                                                    title=""
                                                  >
                                                    Percentage
                                                  </div>
                                                  <div
                                                    class="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <button
                                                      aria-label="Ordenar"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                      tabindex="-1"
                                                      title="Ordenar"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiDataGrid-menuIcon"
                                                >
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDataGrid-columnSeparator"
                                                style="min-height: 56px; opacity: 1;"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M11 19V5h2v14z"
                                                  />
                                                </svg>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      className="MuiGridPanel-root"
                                      modifiers={
                                        Object {
                                          "flip": Object {
                                            "enabled": false,
                                          },
                                        }
                                      }
                                      open={false}
                                      placement="bottom-start"
                                    />
                                  </ForwardRef>
                                </ForwardRef>
                              </div>
                            </ForwardRef>
                          </div>
                        </Es>
                        <Ss>
                          <hs>
                            <div
                              className="MuiDataGrid-main"
                            >
                              <ws />
                              <ni
                                licenseStatus="Valid"
                              />
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-columnsContainer"
                                  style={
                                    Object {
                                      "lineHeight": "56px",
                                      "maxHeight": 56,
                                      "minHeight": 56,
                                    }
                                  }
                                >
                                  <ForwardRef>
                                    <Memo()
                                      scrollDirection="left"
                                    />
                                    <div
                                      aria-rowindex={1}
                                      className="MuiDataGrid-columnHeaderWrapper scroll"
                                      role="row"
                                      style={
                                        Object {
                                          "minWidth": 100,
                                        }
                                      }
                                    >
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                      <ia
                                        columns={
                                          Array [
                                            Object {
                                              "align": "right",
                                              "cellClassName": "font-tabular-nums",
                                              "field": "percentage",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "=",
                                                  "value": "=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "!=",
                                                  "value": "!=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">",
                                                  "value": ">",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">=",
                                                  "value": ">=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<",
                                                  "value": "<",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<=",
                                                  "value": "<=",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerAlign": "right",
                                              "headerName": "Percentage",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "number",
                                              "valueFormatter": [Function],
                                              "valueParser": [Function],
                                              "width": 100,
                                            },
                                          ]
                                        }
                                      >
                                        <Zn
                                          colIndex={0}
                                          column={
                                            Object {
                                              "align": "right",
                                              "cellClassName": "font-tabular-nums",
                                              "field": "percentage",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "=",
                                                  "value": "=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "!=",
                                                  "value": "!=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">",
                                                  "value": ">",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">=",
                                                  "value": ">=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<",
                                                  "value": "<",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<=",
                                                  "value": "<=",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerAlign": "right",
                                              "headerName": "Percentage",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "number",
                                              "valueFormatter": [Function],
                                              "valueParser": [Function],
                                              "width": 100,
                                            }
                                          }
                                          columnMenuOpen={false}
                                          hasFocus={false}
                                          headerHeight={56}
                                          isDragging={false}
                                          isResizing={false}
                                          key="percentage"
                                          options={
                                            Object {
                                              "checkboxSelectionVisibleOnly": false,
                                              "classes": Object {
                                                "cell": "MuiDataGrid-cell",
                                                "columnHeader": "MuiDataGrid-columnHeader",
                                                "root": "MuiDataGrid-root",
                                                "row": "MuiDataGrid-row",
                                              },
                                              "columnBuffer": 2,
                                              "columnTypes": Object {
                                                "__default__": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                                "boolean": Object {
                                                  "align": "center",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "center",
                                                  "hide": false,
                                                  "renderCell": [Function],
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "boolean",
                                                  "width": 100,
                                                },
                                                "date": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "date",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "dateTime": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "dateTime",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "number": Object {
                                                  "align": "right",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "=",
                                                      "value": "=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "!=",
                                                      "value": "!=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">",
                                                      "value": ">",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">=",
                                                      "value": ">=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<",
                                                      "value": "<",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<=",
                                                      "value": "<=",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "right",
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                  "valueParser": [Function],
                                                  "width": 100,
                                                },
                                                "singleSelect": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "singleSelect",
                                                  "width": 100,
                                                },
                                                "string": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                              },
                                              "columns": Array [
                                                Object {
                                                  "cellClassName": "font-tabular-nums",
                                                  "field": "percentage",
                                                  "headerName": "Percentage",
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                },
                                              ],
                                              "density": "standard",
                                              "disableColumnReorder": true,
                                              "disableColumnResize": true,
                                              "disableMultipleColumnsFiltering": true,
                                              "disableMultipleColumnsSorting": true,
                                              "disableMultipleSelection": true,
                                              "filterMode": "client",
                                              "headerHeight": 56,
                                              "isRtl": false,
                                              "licenseStatus": "Valid",
                                              "localeText": Object {
                                                "MuiTablePagination": Object {
                                                  "backIconButtonText": "Página anterior",
                                                  "labelDisplayedRows": [Function],
                                                  "labelRowsPerPage": "Linhas por página:",
                                                  "nextIconButtonText": "Próxima página",
                                                },
                                                "booleanCellFalseLabel": "não",
                                                "booleanCellTrueLabel": "sim",
                                                "checkboxSelectionHeaderName": "Seleção",
                                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                                "columnHeaderFiltersTooltipActive": [Function],
                                                "columnHeaderSortIconLabel": "Ordenar",
                                                "columnMenuFilter": "Filtrar",
                                                "columnMenuHideColumn": "Ocultar",
                                                "columnMenuLabel": "Menu",
                                                "columnMenuShowColumns": "Exibir colunas",
                                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                "columnMenuUnsort": "Desfazer ordenação",
                                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                "columnsPanelHideAllButton": "Ocultar todas",
                                                "columnsPanelShowAllButton": "Mostrar todas",
                                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                "filterOperatorAfter": "após",
                                                "filterOperatorBefore": "antes de",
                                                "filterOperatorContains": "contém",
                                                "filterOperatorEndsWith": "termina com",
                                                "filterOperatorEquals": "é igual a",
                                                "filterOperatorIs": "é",
                                                "filterOperatorNot": "não é",
                                                "filterOperatorOnOrAfter": "em ou após",
                                                "filterOperatorOnOrBefore": "em ou antes de",
                                                "filterOperatorStartsWith": "começa com",
                                                "filterPanelAddFilter": "Adicionar filtro",
                                                "filterPanelColumns": "Colunas",
                                                "filterPanelDeleteIconLabel": "Excluir",
                                                "filterPanelInputLabel": "Valor",
                                                "filterPanelInputPlaceholder": "Filtrar valor",
                                                "filterPanelOperatorAnd": "E",
                                                "filterPanelOperatorOr": "Ou",
                                                "filterPanelOperators": "Operadores",
                                                "filterValueAny": "any",
                                                "filterValueFalse": "false",
                                                "filterValueTrue": "true",
                                                "footerRowSelected": [Function],
                                                "footerTotalRows": "Total de linhas:",
                                                "footerTotalVisibleRows": [Function],
                                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                "noRowsLabel": "Nenhuma linha",
                                                "toolbarColumns": "Colunas",
                                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                "toolbarDensity": "Densidade",
                                                "toolbarDensityComfortable": "Confortável",
                                                "toolbarDensityCompact": "Compacto",
                                                "toolbarDensityLabel": "Densidade",
                                                "toolbarDensityStandard": "Padrão",
                                                "toolbarExport": "Exportar",
                                                "toolbarExportCSV": "Baixar como CSV",
                                                "toolbarExportLabel": "Exportar",
                                                "toolbarFilters": "Filtros",
                                                "toolbarFiltersLabel": "Exibir filtros",
                                                "toolbarFiltersTooltipActive": [Function],
                                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                "toolbarFiltersTooltipShow": "Exibir filtros",
                                              },
                                              "logLevel": "warn",
                                              "logger": BufferedConsole {
                                                "Console": [Function],
                                                "_buffer": Array [],
                                                "_counters": Object {},
                                                "_groupDepth": 0,
                                                "_timers": Object {},
                                                "assert": [Function],
                                                "clear": [Function],
                                                "count": [Function],
                                                "countReset": [Function],
                                                "debug": [Function],
                                                "dir": [Function],
                                                "dirxml": [Function],
                                                "error": [Function],
                                                "group": [Function],
                                                "groupCollapsed": [Function],
                                                "groupEnd": [Function],
                                                "info": [Function],
                                                "log": [Function],
                                                "table": [Function],
                                                "time": [Function],
                                                "timeEnd": [Function],
                                                "timeLog": [Function],
                                                "trace": [Function],
                                                "warn": [Function],
                                              },
                                              "pageSize": 100,
                                              "pagination": true,
                                              "paginationMode": "client",
                                              "rowHeight": 52,
                                              "rows": Array [
                                                Object {
                                                  "id": 1,
                                                  "percentage": 0.45,
                                                },
                                              ],
                                              "rowsPerPageOptions": Array [
                                                25,
                                                50,
                                                100,
                                              ],
                                              "scrollEndThreshold": 80,
                                              "scrollbarSize": 0,
                                              "sortingMode": "client",
                                              "sortingOrder": Array [
                                                "asc",
                                                "desc",
                                                null,
                                              ],
                                              "theme": Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1280,
                                                    "md": 960,
                                                    "sm": 600,
                                                    "xl": 1920,
                                                    "xs": 0,
                                                  },
                                                  "width": [Function],
                                                },
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "gutters": [Function],
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "overrides": Object {},
                                                "palette": Object {
                                                  "action": Object {
                                                    "activatedOpacity": 0.12,
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "disabledOpacity": 0.38,
                                                    "focus": "rgba(0, 0, 0, 0.12)",
                                                    "focusOpacity": 0.12,
                                                    "hover": "rgba(0, 0, 0, 0.04)",
                                                    "hoverOpacity": 0.04,
                                                    "selected": "rgba(0, 0, 0, 0.08)",
                                                    "selectedOpacity": 0.08,
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#fafafa",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#d32f2f",
                                                    "light": "#e57373",
                                                    "main": "#f44336",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#d5d5d5",
                                                    "A200": "#aaaaaa",
                                                    "A400": "#303030",
                                                    "A700": "#616161",
                                                  },
                                                  "info": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#1976d2",
                                                    "light": "#64b5f6",
                                                    "main": "#2196f3",
                                                  },
                                                  "primary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "rgb(17, 82, 147)",
                                                    "light": "rgb(71, 145, 219)",
                                                    "main": "#1976d2",
                                                  },
                                                  "secondary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "success": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#388e3c",
                                                    "light": "#81c784",
                                                    "main": "#4caf50",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "type": "light",
                                                  "warning": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#f57c00",
                                                    "light": "#ffb74d",
                                                    "main": "#ff9800",
                                                  },
                                                },
                                                "props": Object {
                                                  "MuiDataGrid": Object {
                                                    "localeText": Object {
                                                      "MuiTablePagination": Object {
                                                        "backIconButtonText": "Página anterior",
                                                        "labelDisplayedRows": [Function],
                                                        "labelRowsPerPage": "Linhas por página:",
                                                        "nextIconButtonText": "Próxima página",
                                                      },
                                                      "booleanCellFalseLabel": "não",
                                                      "booleanCellTrueLabel": "sim",
                                                      "checkboxSelectionHeaderName": "Seleção",
                                                      "columnHeaderFiltersLabel": "Exibir Filtros",
                                                      "columnHeaderFiltersTooltipActive": [Function],
                                                      "columnHeaderSortIconLabel": "Ordenar",
                                                      "columnMenuFilter": "Filtrar",
                                                      "columnMenuHideColumn": "Ocultar",
                                                      "columnMenuLabel": "Menu",
                                                      "columnMenuShowColumns": "Exibir colunas",
                                                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                      "columnMenuUnsort": "Desfazer ordenação",
                                                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                      "columnsPanelHideAllButton": "Ocultar todas",
                                                      "columnsPanelShowAllButton": "Mostrar todas",
                                                      "columnsPanelTextFieldLabel": "Localizar coluna",
                                                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                      "filterOperatorAfter": "após",
                                                      "filterOperatorBefore": "antes de",
                                                      "filterOperatorContains": "contém",
                                                      "filterOperatorEndsWith": "termina com",
                                                      "filterOperatorEquals": "é igual a",
                                                      "filterOperatorIs": "é",
                                                      "filterOperatorNot": "não é",
                                                      "filterOperatorOnOrAfter": "em ou após",
                                                      "filterOperatorOnOrBefore": "em ou antes de",
                                                      "filterOperatorStartsWith": "começa com",
                                                      "filterPanelAddFilter": "Adicionar filtro",
                                                      "filterPanelColumns": "Colunas",
                                                      "filterPanelDeleteIconLabel": "Excluir",
                                                      "filterPanelInputLabel": "Valor",
                                                      "filterPanelInputPlaceholder": "Filtrar valor",
                                                      "filterPanelOperatorAnd": "E",
                                                      "filterPanelOperatorOr": "Ou",
                                                      "filterPanelOperators": "Operadores",
                                                      "footerRowSelected": [Function],
                                                      "footerTotalRows": "Total de linhas:",
                                                      "footerTotalVisibleRows": [Function],
                                                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                      "noRowsLabel": "Nenhuma linha",
                                                      "toolbarColumns": "Colunas",
                                                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                      "toolbarDensity": "Densidade",
                                                      "toolbarDensityComfortable": "Confortável",
                                                      "toolbarDensityCompact": "Compacto",
                                                      "toolbarDensityLabel": "Densidade",
                                                      "toolbarDensityStandard": "Padrão",
                                                      "toolbarExport": "Exportar",
                                                      "toolbarExportCSV": "Baixar como CSV",
                                                      "toolbarExportLabel": "Exportar",
                                                      "toolbarFilters": "Filtros",
                                                      "toolbarFiltersLabel": "Exibir filtros",
                                                      "toolbarFiltersTooltipActive": [Function],
                                                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                      "toolbarFiltersTooltipShow": "Exibir filtros",
                                                    },
                                                  },
                                                },
                                                "shadows": Array [
                                                  "none",
                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1.2,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.235,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.334,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "round": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "speedDial": 1050,
                                                  "tooltip": 1500,
                                                },
                                                Symbol(mui.nested): false,
                                              },
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <div
                                            aria-colindex={1}
                                            className="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                            data-field="percentage"
                                            key="percentage"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDoubleClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOut={[Function]}
                                            onMouseOver={[Function]}
                                            role="columnheader"
                                            style={
                                              Object {
                                                "maxWidth": 100,
                                                "minWidth": 100,
                                                "width": 100,
                                              }
                                            }
                                            tabIndex={0}
                                          >
                                            <div
                                              className="MuiDataGrid-columnHeaderDraggableContainer"
                                              draggable={false}
                                              onDragEnd={[Function]}
                                              onDragEnter={[Function]}
                                              onDragOver={[Function]}
                                              onDragStart={[Function]}
                                            >
                                              <div
                                                className="MuiDataGrid-columnHeaderTitleContainer"
                                              >
                                                <An
                                                  columnWidth={100}
                                                  label="Percentage"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    title=""
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      title=""
                                                    >
                                                      <ForwardRef
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseOver={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        title=""
                                                      >
                                                        <div
                                                          aria-describedby={null}
                                                          className="MuiDataGrid-columnHeaderTitle"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOver={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          title=""
                                                        >
                                                          Percentage
                                                        </div>
                                                      </ForwardRef>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class="MuiDataGrid-columnHeaderTitle"
                                                            title=""
                                                          >
                                                            Percentage
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper"
                                                        id={null}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </An>
                                                <Bn />
                                                <Memo()>
                                                  <div
                                                    className="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Ordenar"
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Ordenar"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Ordenar"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        size="small"
                                                        tabIndex={-1}
                                                        title="Ordenar"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Ordenar"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          tabIndex={-1}
                                                          title="Ordenar"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Ordenar"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            tabIndex={-1}
                                                            title="Ordenar"
                                                          >
                                                            <button
                                                              aria-label="Ordenar"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Ordenar"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <Memo()
                                                                  className="MuiDataGrid-sortIcon"
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(ArrowUpwardIcon)
                                                                    className="MuiDataGrid-sortIcon"
                                                                    fontSize="small"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiDataGrid-sortIcon"
                                                                      fontSize="small"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiDataGrid-sortIcon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        fontSize="small"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowUpwardIcon)>
                                                                </Memo()>
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={true}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={true}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </Memo()>
                                              </div>
                                              <Memo()
                                                column={
                                                  Object {
                                                    "align": "right",
                                                    "cellClassName": "font-tabular-nums",
                                                    "field": "percentage",
                                                    "filterOperators": Array [
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "=",
                                                        "value": "=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "!=",
                                                        "value": "!=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": ">",
                                                        "value": ">",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": ">=",
                                                        "value": ">=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "<",
                                                        "value": "<",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "<=",
                                                        "value": "<=",
                                                      },
                                                    ],
                                                    "filterable": true,
                                                    "headerAlign": "right",
                                                    "headerName": "Percentage",
                                                    "hide": false,
                                                    "renderEditCell": [Function],
                                                    "resizable": true,
                                                    "sortComparator": [Function],
                                                    "sortable": true,
                                                    "type": "number",
                                                    "valueFormatter": [Function],
                                                    "valueParser": [Function],
                                                    "width": 100,
                                                  }
                                                }
                                                columnMenuButtonId="mui-100000"
                                                columnMenuId="mui-100000"
                                                iconButtonRef={
                                                  Object {
                                                    "current": <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>,
                                                  }
                                                }
                                                open={false}
                                              >
                                                <div
                                                  className="MuiDataGrid-menuIcon"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    className="MuiDataGrid-menuIconButton"
                                                    id="mui-100000"
                                                    onClick={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                    title="Menu"
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      className="MuiDataGrid-menuIconButton"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      id="mui-100000"
                                                      onClick={[Function]}
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Menu"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-controls="mui-100000"
                                                        aria-haspopup="true"
                                                        aria-label="Menu"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        id="mui-100000"
                                                        onClick={[Function]}
                                                        tabIndex={-1}
                                                        title="Menu"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-controls="mui-100000"
                                                          aria-haspopup="true"
                                                          aria-label="Menu"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusRipple={true}
                                                          id="mui-100000"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Menu"
                                                        >
                                                          <button
                                                            aria-controls="mui-100000"
                                                            aria-haspopup="true"
                                                            aria-label="Menu"
                                                            className="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                            disabled={false}
                                                            id="mui-100000"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={-1}
                                                            title="Menu"
                                                            type="button"
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(TripleDotsVerticalIcon)
                                                                fontSize="small"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    fontSize="small"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(TripleDotsVerticalIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </Memo()>
                                            </div>
                                            <Memo()
                                              height={56}
                                              onMouseDown={[Function]}
                                              resizable={false}
                                              resizing={false}
                                            >
                                              <div
                                                className="MuiDataGrid-columnSeparator"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "minHeight": 56,
                                                    "opacity": 1,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SeparatorIcon)
                                                  className="MuiDataGrid-iconSeparator"
                                                >
                                                  <WithStyles(ForwardRef(SvgIcon))
                                                    className="MuiDataGrid-iconSeparator"
                                                  >
                                                    <ForwardRef(SvgIcon)
                                                      className="MuiDataGrid-iconSeparator"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M11 19V5h2v14z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(SeparatorIcon)>
                                              </div>
                                            </Memo()>
                                            <qn
                                              ContentComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              columnMenuButtonId="mui-100000"
                                              columnMenuId="mui-100000"
                                              field="percentage"
                                              open={false}
                                              target={
                                                <button
                                                  aria-controls="mui-100000"
                                                  aria-haspopup="true"
                                                  aria-label="Menu"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                  id="mui-100000"
                                                  tabindex="-1"
                                                  title="Menu"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              }
                                            >
                                              <Kn
                                                onClickAway={[Function]}
                                                open={false}
                                                placement="bottom-start"
                                                target={
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                }
                                              >
                                                <ForwardRef(Popper)
                                                  anchorEl={
                                                    <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  }
                                                  className="MuiGridMenu-root"
                                                  open={false}
                                                  placement="bottom-start"
                                                  transition={true}
                                                />
                                              </Kn>
                                            </qn>
                                          </div>
                                        </Zn>
                                      </ia>
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                    </div>
                                    <Memo()
                                      scrollDirection="right"
                                    />
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                              <ForwardRef
                                onResize={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "visible",
                                      "width": 0,
                                    }
                                  }
                                >
                                  <ForwardRef
                                    size={
                                      Object {
                                        "height": 0,
                                        "width": 0,
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDataGrid-windowContainer"
                                      style={
                                        Object {
                                          "height": 0,
                                          "width": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDataGrid-window"
                                        style={
                                          Object {
                                            "overflowY": "auto",
                                            "top": 56,
                                          }
                                        }
                                      >
                                        <ForwardRef>
                                          <Zl>
                                            <div
                                              className="MuiDataGrid-dataContainer"
                                              style={
                                                Object {
                                                  "minHeight": 52,
                                                  "minWidth": 100,
                                                }
                                              }
                                            >
                                              <ti
                                                height={0}
                                                width={0}
                                              >
                                                <div
                                                  className="MuiDataGrid-viewport"
                                                  style={
                                                    Object {
                                                      "maxHeight": 0,
                                                      "maxWidth": 0,
                                                      "minWidth": 0,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    height={52}
                                                    width={100}
                                                  >
                                                    <div
                                                      className="MuiDataGrid-renderingZone"
                                                      style={
                                                        Object {
                                                          "maxHeight": 52,
                                                          "width": 100,
                                                        }
                                                      }
                                                    >
                                                      <ei
                                                        className="Mui-even"
                                                        id={1}
                                                        key="1"
                                                        rowIndex={0}
                                                        selected={false}
                                                      >
                                                        <div
                                                          aria-rowindex={2}
                                                          aria-selected={false}
                                                          className="Mui-even MuiDataGrid-row"
                                                          data-id={1}
                                                          data-rowindex={0}
                                                          key="1"
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOut={[Function]}
                                                          onMouseOver={[Function]}
                                                          role="row"
                                                          style={
                                                            Object {
                                                              "maxHeight": 52,
                                                              "minHeight": 52,
                                                            }
                                                          }
                                                        >
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                          <Memo()
                                                            cellClassName="MuiDataGrid-cell"
                                                            cellFocus={null}
                                                            cellTabIndex={null}
                                                            columns={
                                                              Array [
                                                                Object {
                                                                  "align": "right",
                                                                  "cellClassName": "font-tabular-nums",
                                                                  "field": "percentage",
                                                                  "filterOperators": Array [
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "=",
                                                                      "value": "=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "!=",
                                                                      "value": "!=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": ">",
                                                                      "value": ">",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": ">=",
                                                                      "value": ">=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "<",
                                                                      "value": "<",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "<=",
                                                                      "value": "<=",
                                                                    },
                                                                  ],
                                                                  "filterable": true,
                                                                  "headerAlign": "right",
                                                                  "headerName": "Percentage",
                                                                  "hide": false,
                                                                  "renderEditCell": [Function],
                                                                  "resizable": true,
                                                                  "sortComparator": [Function],
                                                                  "sortable": true,
                                                                  "type": "number",
                                                                  "valueFormatter": [Function],
                                                                  "valueParser": [Function],
                                                                  "width": 100,
                                                                },
                                                              ]
                                                            }
                                                            extendRowFullWidth={true}
                                                            firstColIdx={0}
                                                            hasScrollX={true}
                                                            hasScrollY={true}
                                                            height={52}
                                                            id={1}
                                                            isSelected={false}
                                                            lastColIdx={0}
                                                            row={
                                                              Object {
                                                                "id": 1,
                                                                "percentage": 0.45,
                                                              }
                                                            }
                                                            rowIndex={0}
                                                            showCellRightBorder={false}
                                                          >
                                                            <Memo()
                                                              align="right"
                                                              cellMode="view"
                                                              className="MuiDataGrid-cell font-tabular-nums"
                                                              colIndex={0}
                                                              extendRowFullWidth={true}
                                                              field="percentage"
                                                              formattedValue="0,45%"
                                                              hasFocus={false}
                                                              height={52}
                                                              isSelected={false}
                                                              key="percentage"
                                                              row={
                                                                Object {
                                                                  "id": 1,
                                                                  "percentage": 0.45,
                                                                }
                                                              }
                                                              rowId={1}
                                                              rowIndex={0}
                                                              showRightBorder={false}
                                                              tabIndex={-1}
                                                              value={0.45}
                                                              width={100}
                                                            >
                                                              <div
                                                                aria-colindex={1}
                                                                className="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                                                data-colindex={0}
                                                                data-field="percentage"
                                                                data-mode="view"
                                                                data-rowindex={0}
                                                                data-rowselected={false}
                                                                data-value={0.45}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDoubleClick={[Function]}
                                                                onDragEnter={[Function]}
                                                                onDragOver={[Function]}
                                                                onDragStart={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                                onMouseUp={[Function]}
                                                                role="cell"
                                                                style={
                                                                  Object {
                                                                    "lineHeight": "51px",
                                                                    "maxHeight": 52,
                                                                    "maxWidth": 100,
                                                                    "minHeight": 52,
                                                                    "minWidth": 100,
                                                                  }
                                                                }
                                                                tabIndex={-1}
                                                              >
                                                                0,45%
                                                              </div>
                                                            </Memo()>
                                                          </Memo()>
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                        </div>
                                                      </ei>
                                                    </div>
                                                  </ForwardRef>
                                                </div>
                                              </ti>
                                            </div>
                                          </Zl>
                                        </ForwardRef>
                                      </div>
                                    </div>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </div>
                          </hs>
                        </Ss>
                        <Os>
                          <div>
                            <ForwardRef>
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-footerContainer"
                                >
                                  <div />
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(TablePagination))
                                      backIconButtonText="Página anterior"
                                      classes={
                                        Object {
                                          "caption": "makeStyles-caption-2",
                                          "input": "makeStyles-input-3",
                                        }
                                      }
                                      component="div"
                                      count={1}
                                      labelDisplayedRows={[Function]}
                                      labelRowsPerPage="Linhas por página:"
                                      nextIconButtonText="Próxima página"
                                      onChangePage={[Function]}
                                      onChangeRowsPerPage={[Function]}
                                      page={0}
                                      rowsPerPage={100}
                                      rowsPerPageOptions={
                                        Array [
                                          25,
                                          50,
                                          100,
                                        ]
                                      }
                                    >
                                      <ForwardRef(TablePagination)
                                        backIconButtonText="Página anterior"
                                        classes={
                                          Object {
                                            "actions": "MuiTablePagination-actions",
                                            "caption": "MuiTablePagination-caption makeStyles-caption-2",
                                            "input": "MuiTablePagination-input makeStyles-input-3",
                                            "menuItem": "MuiTablePagination-menuItem",
                                            "root": "MuiTablePagination-root",
                                            "select": "MuiTablePagination-select",
                                            "selectIcon": "MuiTablePagination-selectIcon",
                                            "selectRoot": "MuiTablePagination-selectRoot",
                                            "spacer": "MuiTablePagination-spacer",
                                            "toolbar": "MuiTablePagination-toolbar",
                                          }
                                        }
                                        component="div"
                                        count={1}
                                        labelDisplayedRows={[Function]}
                                        labelRowsPerPage="Linhas por página:"
                                        nextIconButtonText="Próxima página"
                                        onChangePage={[Function]}
                                        onChangeRowsPerPage={[Function]}
                                        page={0}
                                        rowsPerPage={100}
                                        rowsPerPageOptions={
                                          Array [
                                            25,
                                            50,
                                            100,
                                          ]
                                        }
                                      >
                                        <div
                                          className="MuiTablePagination-root"
                                        >
                                          <WithStyles(ForwardRef(Toolbar))
                                            className="MuiTablePagination-toolbar"
                                          >
                                            <ForwardRef(Toolbar)
                                              className="MuiTablePagination-toolbar"
                                              classes={
                                                Object {
                                                  "dense": "MuiToolbar-dense",
                                                  "gutters": "MuiToolbar-gutters",
                                                  "regular": "MuiToolbar-regular",
                                                  "root": "MuiToolbar-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                              >
                                                <div
                                                  className="MuiTablePagination-spacer"
                                                />
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  id="mui-100000"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    id="mui-100000"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                      id="mui-100000"
                                                    >
                                                      Linhas por página:
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Select))
                                                  classes={
                                                    Object {
                                                      "icon": "MuiTablePagination-selectIcon",
                                                      "select": "MuiTablePagination-select",
                                                    }
                                                  }
                                                  id="mui-100000"
                                                  input={
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                    />
                                                  }
                                                  labelId="mui-100000"
                                                  onChange={[Function]}
                                                  value={100}
                                                >
                                                  <ForwardRef(Select)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    id="mui-100000"
                                                    input={
                                                      <WithStyles(ForwardRef(InputBase))
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      />
                                                    }
                                                    labelId="mui-100000"
                                                    onChange={[Function]}
                                                    value={100}
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      inputComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": [Function],
                                                            "SelectDisplayProps": [Function],
                                                            "aria-label": [Function],
                                                            "autoFocus": [Function],
                                                            "autoWidth": [Function],
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "defaultValue": [Function],
                                                            "disabled": [Function],
                                                            "displayEmpty": [Function],
                                                            "inputRef": [Function],
                                                            "labelId": [Function],
                                                            "multiple": [Function],
                                                            "name": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onClose": [Function],
                                                            "onFocus": [Function],
                                                            "onOpen": [Function],
                                                            "open": [Function],
                                                            "readOnly": [Function],
                                                            "renderValue": [Function],
                                                            "tabIndex": [Function],
                                                            "type": [Function],
                                                            "value": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      inputProps={
                                                        Object {
                                                          "IconComponent": Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          },
                                                          "MenuProps": undefined,
                                                          "SelectDisplayProps": Object {
                                                            "id": "mui-100000",
                                                          },
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={25}
                                                            >
                                                              25
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={50}
                                                            >
                                                              50
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={100}
                                                            >
                                                              100
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select MuiTablePagination-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          },
                                                          "displayEmpty": false,
                                                          "labelId": "mui-100000",
                                                          "multiple": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                          "type": undefined,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      value={100}
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputBase-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth",
                                                            "input": "MuiInputBase-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense",
                                                            "multiline": "MuiInputBase-multiline",
                                                            "root": "MuiInputBase-root",
                                                          }
                                                        }
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": "mui-100000",
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={25}
                                                              >
                                                                25
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={50}
                                                              >
                                                                50
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={100}
                                                              >
                                                                100
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select MuiTablePagination-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": "mui-100000",
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        value={100}
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(SelectInput)
                                                            IconComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              }
                                                            }
                                                            SelectDisplayProps={
                                                              Object {
                                                                "id": "mui-100000",
                                                              }
                                                            }
                                                            autoWidth={false}
                                                            className="MuiInputBase-input"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              }
                                                            }
                                                            displayEmpty={false}
                                                            inputRef={[Function]}
                                                            labelId="mui-100000"
                                                            multiple={false}
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value={100}
                                                            variant="standard"
                                                          >
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-100000 mui-100000"
                                                              className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-100000"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              100
                                                            </div>
                                                            <input
                                                              aria-hidden={true}
                                                              className="MuiSelect-nativeInput"
                                                              onAnimationStart={[Function]}
                                                              onChange={[Function]}
                                                              tabIndex={-1}
                                                              value={100}
                                                            />
                                                            <ForwardRef(ArrowDropDownIcon)
                                                              className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M7 10l5 5 5-5z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef(ArrowDropDownIcon)>
                                                            <WithStyles(ForwardRef(Menu))
                                                              MenuListProps={
                                                                Object {
                                                                  "aria-labelledby": "mui-100000",
                                                                  "disableListWrap": true,
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={
                                                                <div
                                                                  aria-haspopup="listbox"
                                                                  aria-labelledby="mui-100000 mui-100000"
                                                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                  id="mui-100000"
                                                                  role="button"
                                                                  tabindex="0"
                                                                >
                                                                  100
                                                                </div>
                                                              }
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <ForwardRef(Menu)
                                                                MenuListProps={
                                                                  Object {
                                                                    "aria-labelledby": "mui-100000",
                                                                    "disableListWrap": true,
                                                                    "role": "listbox",
                                                                  }
                                                                }
                                                                PaperProps={
                                                                  Object {
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                anchorEl={
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    aria-labelledby="mui-100000 mui-100000"
                                                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                    id="mui-100000"
                                                                    role="button"
                                                                    tabindex="0"
                                                                  >
                                                                    100
                                                                  </div>
                                                                }
                                                                classes={
                                                                  Object {
                                                                    "list": "MuiMenu-list",
                                                                    "paper": "MuiMenu-paper",
                                                                  }
                                                                }
                                                                id="menu-"
                                                                onClose={[Function]}
                                                                open={false}
                                                              >
                                                                <WithStyles(ForwardRef(Popover))
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  anchorEl={
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-100000 mui-100000"
                                                                      class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                      id="mui-100000"
                                                                      role="button"
                                                                      tabindex="0"
                                                                    >
                                                                      100
                                                                    </div>
                                                                  }
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-"
                                                                  onClose={[Function]}
                                                                  onEntering={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <ForwardRef(Popover)
                                                                    PaperProps={
                                                                      Object {
                                                                        "classes": Object {
                                                                          "root": "MuiMenu-paper",
                                                                        },
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        aria-labelledby="mui-100000 mui-100000"
                                                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                        id="mui-100000"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        100
                                                                      </div>
                                                                    }
                                                                    anchorOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "paper": "MuiPopover-paper",
                                                                        "root": "MuiPopover-root",
                                                                      }
                                                                    }
                                                                    getContentAnchorEl={[Function]}
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    onEntering={[Function]}
                                                                    open={false}
                                                                    transformOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    transitionDuration="auto"
                                                                  >
                                                                    <ForwardRef(Modal)
                                                                      BackdropProps={
                                                                        Object {
                                                                          "invisible": true,
                                                                        }
                                                                      }
                                                                      className="MuiPopover-root"
                                                                      container={<body />}
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    />
                                                                  </ForwardRef(Popover)>
                                                                </WithStyles(ForwardRef(Popover))>
                                                              </ForwardRef(Menu)>
                                                            </WithStyles(ForwardRef(Menu))>
                                                          </ForwardRef(SelectInput)>
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Select)>
                                                </WithStyles(ForwardRef(Select))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                    >
                                                      1-1 de 1
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <ForwardRef(TablePaginationActions)
                                                  backIconButtonProps={
                                                    Object {
                                                      "aria-label": "Página anterior",
                                                      "title": "Página anterior",
                                                    }
                                                  }
                                                  className="MuiTablePagination-actions"
                                                  count={1}
                                                  nextIconButtonProps={
                                                    Object {
                                                      "aria-label": "Próxima página",
                                                      "title": "Próxima página",
                                                    }
                                                  }
                                                  onChangePage={[Function]}
                                                  page={0}
                                                  rowsPerPage={100}
                                                >
                                                  <div
                                                    className="MuiTablePagination-actions"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Página anterior"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Página anterior"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Página anterior"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Página anterior"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Página anterior"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Página anterior"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Página anterior"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Página anterior"
                                                          >
                                                            <button
                                                              aria-label="Página anterior"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Página anterior"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowLeftIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowLeftIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Próxima página"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Próxima página"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Próxima página"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Próxima página"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Próxima página"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Próxima página"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Próxima página"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Próxima página"
                                                          >
                                                            <button
                                                              aria-label="Próxima página"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Próxima página"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowRightIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowRightIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(TablePaginationActions)>
                                              </div>
                                            </ForwardRef(Toolbar)>
                                          </WithStyles(ForwardRef(Toolbar))>
                                        </div>
                                      </ForwardRef(TablePagination)>
                                    </WithStyles(ForwardRef(TablePagination))>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </ForwardRef>
                          </div>
                        </Os>
                      </Cs>
                    </vs>
                  </div>
                </NoSsr>
              </ForwardRef>
            </bs>
          </ForwardRef>
        </ForwardRef>
      </ThemeProvider>
    </div>
  </ScrollBar>
</Memo()>
`;

exports[`src/components/ui/DataGrid should render correctly price 1`] = `
<Memo()
  columns={
    Array [
      Object {
        "cellClassName": "font-tabular-nums",
        "field": "price",
        "headerName": "Price",
        "type": "number",
        "valueFormatter": [Function],
      },
    ]
  }
  rows={
    Array [
      Object {
        "id": 1,
        "price": 1.2,
      },
    ]
  }
>
  <ScrollBar
    className=""
    component="div"
    containerRef={[Function]}
    onSync={[Function]}
  >
    <div>
      <ThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#1976d2",
                "light": "#64b5f6",
                "main": "#2196f3",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "rgb(17, 82, 147)",
                "light": "rgb(71, 145, 219)",
                "main": "#1976d2",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "success": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#388e3c",
                "light": "#81c784",
                "main": "#4caf50",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "contrastText": "rgba(0, 0, 0, 0.87)",
                "dark": "#f57c00",
                "light": "#ffb74d",
                "main": "#ff9800",
              },
            },
            "props": Object {
              "MuiDataGrid": Object {
                "localeText": Object {
                  "MuiTablePagination": Object {
                    "backIconButtonText": "Página anterior",
                    "labelDisplayedRows": [Function],
                    "labelRowsPerPage": "Linhas por página:",
                    "nextIconButtonText": "Próxima página",
                  },
                  "booleanCellFalseLabel": "não",
                  "booleanCellTrueLabel": "sim",
                  "checkboxSelectionHeaderName": "Seleção",
                  "columnHeaderFiltersLabel": "Exibir Filtros",
                  "columnHeaderFiltersTooltipActive": [Function],
                  "columnHeaderSortIconLabel": "Ordenar",
                  "columnMenuFilter": "Filtrar",
                  "columnMenuHideColumn": "Ocultar",
                  "columnMenuLabel": "Menu",
                  "columnMenuShowColumns": "Exibir colunas",
                  "columnMenuSortAsc": "Ordenar do menor para o maior",
                  "columnMenuSortDesc": "Ordenar do maior para o menor",
                  "columnMenuUnsort": "Desfazer ordenação",
                  "columnsPanelDragIconLabel": "Reordenar Coluna",
                  "columnsPanelHideAllButton": "Ocultar todas",
                  "columnsPanelShowAllButton": "Mostrar todas",
                  "columnsPanelTextFieldLabel": "Localizar coluna",
                  "columnsPanelTextFieldPlaceholder": "Título da coluna",
                  "errorOverlayDefaultLabel": "Ocorreu um erro.",
                  "filterOperatorAfter": "após",
                  "filterOperatorBefore": "antes de",
                  "filterOperatorContains": "contém",
                  "filterOperatorEndsWith": "termina com",
                  "filterOperatorEquals": "é igual a",
                  "filterOperatorIs": "é",
                  "filterOperatorNot": "não é",
                  "filterOperatorOnOrAfter": "em ou após",
                  "filterOperatorOnOrBefore": "em ou antes de",
                  "filterOperatorStartsWith": "começa com",
                  "filterPanelAddFilter": "Adicionar filtro",
                  "filterPanelColumns": "Colunas",
                  "filterPanelDeleteIconLabel": "Excluir",
                  "filterPanelInputLabel": "Valor",
                  "filterPanelInputPlaceholder": "Filtrar valor",
                  "filterPanelOperatorAnd": "E",
                  "filterPanelOperatorOr": "Ou",
                  "filterPanelOperators": "Operadores",
                  "footerRowSelected": [Function],
                  "footerTotalRows": "Total de linhas:",
                  "footerTotalVisibleRows": [Function],
                  "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                  "noRowsLabel": "Nenhuma linha",
                  "toolbarColumns": "Colunas",
                  "toolbarColumnsLabel": "Exibir seletor de colunas",
                  "toolbarDensity": "Densidade",
                  "toolbarDensityComfortable": "Confortável",
                  "toolbarDensityCompact": "Compacto",
                  "toolbarDensityLabel": "Densidade",
                  "toolbarDensityStandard": "Padrão",
                  "toolbarExport": "Exportar",
                  "toolbarExportCSV": "Baixar como CSV",
                  "toolbarExportLabel": "Exportar",
                  "toolbarFilters": "Filtros",
                  "toolbarFiltersLabel": "Exibir filtros",
                  "toolbarFiltersTooltipActive": [Function],
                  "toolbarFiltersTooltipHide": "Ocultar filtros",
                  "toolbarFiltersTooltipShow": "Exibir filtros",
                },
              },
            },
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
            Symbol(mui.nested): false,
          }
        }
      >
        <ForwardRef
          columns={
            Array [
              Object {
                "cellClassName": "font-tabular-nums",
                "field": "price",
                "headerName": "Price",
                "type": "number",
                "valueFormatter": [Function],
              },
            ]
          }
          rows={
            Array [
              Object {
                "id": 1,
                "price": 1.2,
              },
            ]
          }
        >
          <ForwardRef
            checkboxSelectionVisibleOnly={false}
            columnBuffer={2}
            columnTypes={
              Object {
                "__default__": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
                "boolean": Object {
                  "align": "center",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "center",
                  "hide": false,
                  "renderCell": [Function],
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "boolean",
                  "width": 100,
                },
                "date": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "date",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "date",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "dateTime": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "after",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrAfter",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "before",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "datetime-local",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "onOrBefore",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "dateTime",
                  "valueFormatter": [Function],
                  "width": 100,
                },
                "number": Object {
                  "align": "right",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "=",
                      "value": "=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "!=",
                      "value": "!=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">",
                      "value": ">",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": ">=",
                      "value": ">=",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<",
                      "value": "<",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "number",
                      },
                      "getApplyFilterFn": [Function],
                      "label": "<=",
                      "value": "<=",
                    },
                  ],
                  "filterable": true,
                  "headerAlign": "right",
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "number",
                  "valueFormatter": [Function],
                  "valueParser": [Function],
                  "width": 100,
                },
                "singleSelect": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "is",
                    },
                    Object {
                      "InputComponent": [Function],
                      "InputComponentProps": Object {
                        "type": "singleSelect",
                      },
                      "getApplyFilterFn": [Function],
                      "value": "not",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "singleSelect",
                  "width": 100,
                },
                "string": Object {
                  "align": "left",
                  "filterOperators": Array [
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "contains",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "equals",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "startsWith",
                    },
                    Object {
                      "InputComponent": [Function],
                      "getApplyFilterFn": [Function],
                      "value": "endsWith",
                    },
                  ],
                  "filterable": true,
                  "hide": false,
                  "renderEditCell": [Function],
                  "resizable": true,
                  "sortComparator": [Function],
                  "sortable": true,
                  "type": "string",
                  "width": 100,
                },
              }
            }
            columns={
              Array [
                Object {
                  "cellClassName": "font-tabular-nums",
                  "field": "price",
                  "headerName": "Price",
                  "type": "number",
                  "valueFormatter": [Function],
                },
              ]
            }
            density="standard"
            disableColumnReorder={true}
            disableColumnResize={true}
            disableMultipleColumnsFiltering={true}
            disableMultipleColumnsSorting={true}
            disableMultipleSelection={true}
            filterMode="client"
            headerHeight={56}
            isRtl={false}
            licenseStatus="Valid"
            localeText={
              Object {
                "MuiTablePagination": Object {
                  "backIconButtonText": "Página anterior",
                  "labelDisplayedRows": [Function],
                  "labelRowsPerPage": "Linhas por página:",
                  "nextIconButtonText": "Próxima página",
                },
                "booleanCellFalseLabel": "não",
                "booleanCellTrueLabel": "sim",
                "checkboxSelectionHeaderName": "Seleção",
                "columnHeaderFiltersLabel": "Exibir Filtros",
                "columnHeaderFiltersTooltipActive": [Function],
                "columnHeaderSortIconLabel": "Ordenar",
                "columnMenuFilter": "Filtrar",
                "columnMenuHideColumn": "Ocultar",
                "columnMenuLabel": "Menu",
                "columnMenuShowColumns": "Exibir colunas",
                "columnMenuSortAsc": "Ordenar do menor para o maior",
                "columnMenuSortDesc": "Ordenar do maior para o menor",
                "columnMenuUnsort": "Desfazer ordenação",
                "columnsPanelDragIconLabel": "Reordenar Coluna",
                "columnsPanelHideAllButton": "Ocultar todas",
                "columnsPanelShowAllButton": "Mostrar todas",
                "columnsPanelTextFieldLabel": "Localizar coluna",
                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                "filterOperatorAfter": "após",
                "filterOperatorBefore": "antes de",
                "filterOperatorContains": "contém",
                "filterOperatorEndsWith": "termina com",
                "filterOperatorEquals": "é igual a",
                "filterOperatorIs": "é",
                "filterOperatorNot": "não é",
                "filterOperatorOnOrAfter": "em ou após",
                "filterOperatorOnOrBefore": "em ou antes de",
                "filterOperatorStartsWith": "começa com",
                "filterPanelAddFilter": "Adicionar filtro",
                "filterPanelColumns": "Colunas",
                "filterPanelDeleteIconLabel": "Excluir",
                "filterPanelInputLabel": "Valor",
                "filterPanelInputPlaceholder": "Filtrar valor",
                "filterPanelOperatorAnd": "E",
                "filterPanelOperatorOr": "Ou",
                "filterPanelOperators": "Operadores",
                "footerRowSelected": [Function],
                "footerTotalRows": "Total de linhas:",
                "footerTotalVisibleRows": [Function],
                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                "noRowsLabel": "Nenhuma linha",
                "toolbarColumns": "Colunas",
                "toolbarColumnsLabel": "Exibir seletor de colunas",
                "toolbarDensity": "Densidade",
                "toolbarDensityComfortable": "Confortável",
                "toolbarDensityCompact": "Compacto",
                "toolbarDensityLabel": "Densidade",
                "toolbarDensityStandard": "Padrão",
                "toolbarExport": "Exportar",
                "toolbarExportCSV": "Baixar como CSV",
                "toolbarExportLabel": "Exportar",
                "toolbarFilters": "Filtros",
                "toolbarFiltersLabel": "Exibir filtros",
                "toolbarFiltersTooltipActive": [Function],
                "toolbarFiltersTooltipHide": "Ocultar filtros",
                "toolbarFiltersTooltipShow": "Exibir filtros",
              }
            }
            logLevel="warn"
            logger={
              BufferedConsole {
                "Console": [Function],
                "_buffer": Array [],
                "_counters": Object {},
                "_groupDepth": 0,
                "_timers": Object {},
                "assert": [Function],
                "clear": [Function],
                "count": [Function],
                "countReset": [Function],
                "debug": [Function],
                "dir": [Function],
                "dirxml": [Function],
                "error": [Function],
                "group": [Function],
                "groupCollapsed": [Function],
                "groupEnd": [Function],
                "info": [Function],
                "log": [Function],
                "table": [Function],
                "time": [Function],
                "timeEnd": [Function],
                "timeLog": [Function],
                "trace": [Function],
                "warn": [Function],
              }
            }
            pageSize={100}
            pagination={true}
            paginationMode="client"
            rowHeight={52}
            rows={
              Array [
                Object {
                  "id": 1,
                  "price": 1.2,
                },
              ]
            }
            rowsPerPageOptions={
              Array [
                25,
                50,
                100,
              ]
            }
            scrollEndThreshold={80}
            sortingMode="client"
            sortingOrder={
              Array [
                "asc",
                "desc",
                null,
              ]
            }
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "rgb(17, 82, 147)",
                    "light": "rgb(71, 145, 219)",
                    "main": "#1976d2",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {
                  "MuiDataGrid": Object {
                    "localeText": Object {
                      "MuiTablePagination": Object {
                        "backIconButtonText": "Página anterior",
                        "labelDisplayedRows": [Function],
                        "labelRowsPerPage": "Linhas por página:",
                        "nextIconButtonText": "Próxima página",
                      },
                      "booleanCellFalseLabel": "não",
                      "booleanCellTrueLabel": "sim",
                      "checkboxSelectionHeaderName": "Seleção",
                      "columnHeaderFiltersLabel": "Exibir Filtros",
                      "columnHeaderFiltersTooltipActive": [Function],
                      "columnHeaderSortIconLabel": "Ordenar",
                      "columnMenuFilter": "Filtrar",
                      "columnMenuHideColumn": "Ocultar",
                      "columnMenuLabel": "Menu",
                      "columnMenuShowColumns": "Exibir colunas",
                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                      "columnMenuUnsort": "Desfazer ordenação",
                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                      "columnsPanelHideAllButton": "Ocultar todas",
                      "columnsPanelShowAllButton": "Mostrar todas",
                      "columnsPanelTextFieldLabel": "Localizar coluna",
                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                      "filterOperatorAfter": "após",
                      "filterOperatorBefore": "antes de",
                      "filterOperatorContains": "contém",
                      "filterOperatorEndsWith": "termina com",
                      "filterOperatorEquals": "é igual a",
                      "filterOperatorIs": "é",
                      "filterOperatorNot": "não é",
                      "filterOperatorOnOrAfter": "em ou após",
                      "filterOperatorOnOrBefore": "em ou antes de",
                      "filterOperatorStartsWith": "começa com",
                      "filterPanelAddFilter": "Adicionar filtro",
                      "filterPanelColumns": "Colunas",
                      "filterPanelDeleteIconLabel": "Excluir",
                      "filterPanelInputLabel": "Valor",
                      "filterPanelInputPlaceholder": "Filtrar valor",
                      "filterPanelOperatorAnd": "E",
                      "filterPanelOperatorOr": "Ou",
                      "filterPanelOperators": "Operadores",
                      "footerRowSelected": [Function],
                      "footerTotalRows": "Total de linhas:",
                      "footerTotalVisibleRows": [Function],
                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                      "noRowsLabel": "Nenhuma linha",
                      "toolbarColumns": "Colunas",
                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                      "toolbarDensity": "Densidade",
                      "toolbarDensityComfortable": "Confortável",
                      "toolbarDensityCompact": "Compacto",
                      "toolbarDensityLabel": "Densidade",
                      "toolbarDensityStandard": "Padrão",
                      "toolbarExport": "Exportar",
                      "toolbarExportCSV": "Baixar como CSV",
                      "toolbarExportLabel": "Exportar",
                      "toolbarFilters": "Filtros",
                      "toolbarFiltersLabel": "Exibir filtros",
                      "toolbarFiltersTooltipActive": [Function],
                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                      "toolbarFiltersTooltipShow": "Exibir filtros",
                    },
                  },
                },
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
                Symbol(mui.nested): false,
              }
            }
          >
            <bs
              apiRef={
                Object {
                  "current": Ti {
                    "applyFilter": [Function],
                    "applyFilterLinkOperator": [Function],
                    "applyFilters": [Function],
                    "applySorting": [Function],
                    "columnHeadersContainerElementRef": Object {
                      "current": <div
                        class="MuiDataGrid-columnsContainer"
                        style="min-height: 56px; max-height: 56px; line-height: 56px;"
                      >
                        <div
                          aria-rowindex="1"
                          class="MuiDataGrid-columnHeaderWrapper scroll"
                          role="row"
                          style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                            data-field="price"
                            role="columnheader"
                            style="width: 100px; min-width: 100px; max-width: 100px;"
                            tabindex="0"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderDraggableContainer"
                              draggable="false"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitleContainer"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderTitle"
                                  title=""
                                >
                                  Price
                                </div>
                                <div
                                  class="MuiDataGrid-iconButtonContainer"
                                >
                                  <button
                                    aria-label="Ordenar"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                    tabindex="-1"
                                    title="Ordenar"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                        />
                                      </svg>
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                </div>
                              </div>
                              <div
                                class="MuiDataGrid-menuIcon"
                              >
                                <button
                                  aria-controls="mui-100000"
                                  aria-haspopup="true"
                                  aria-label="Menu"
                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                  id="mui-100000"
                                  tabindex="-1"
                                  title="Menu"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-columnSeparator"
                              style="min-height: 56px; opacity: 1;"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M11 19V5h2v14z"
                                />
                              </svg>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "columnHeadersElementRef": Object {
                      "current": <div
                        aria-rowindex="1"
                        class="MuiDataGrid-columnHeaderWrapper scroll"
                        role="row"
                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                      >
                        <div
                          aria-colindex="1"
                          class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                          data-field="price"
                          role="columnheader"
                          style="width: 100px; min-width: 100px; max-width: 100px;"
                          tabindex="0"
                        >
                          <div
                            class="MuiDataGrid-columnHeaderDraggableContainer"
                            draggable="false"
                          >
                            <div
                              class="MuiDataGrid-columnHeaderTitleContainer"
                            >
                              <div
                                class="MuiDataGrid-columnHeaderTitle"
                                title=""
                              >
                                Price
                              </div>
                              <div
                                class="MuiDataGrid-iconButtonContainer"
                              >
                                <button
                                  aria-label="Ordenar"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                  tabindex="-1"
                                  title="Ordenar"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              class="MuiDataGrid-menuIcon"
                            >
                              <button
                                aria-controls="mui-100000"
                                aria-haspopup="true"
                                aria-label="Menu"
                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                id="mui-100000"
                                tabindex="-1"
                                title="Menu"
                                type="button"
                              >
                                <span
                                  class="MuiIconButton-label"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                    />
                                  </svg>
                                </span>
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </button>
                            </div>
                          </div>
                          <div
                            class="MuiDataGrid-columnSeparator"
                            style="min-height: 56px; opacity: 1;"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M11 19V5h2v14z"
                              />
                            </svg>
                          </div>
                        </div>
                      </div>,
                    },
                    "commitCellChange": [Function],
                    "components": Object {
                      "BooleanCellFalseIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "BooleanCellTrueIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Checkbox": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Naked": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "checked": [Function],
                            "checkedIcon": [Function],
                            "classes": [Function],
                            "color": [Function],
                            "disableRipple": [Function],
                            "disabled": [Function],
                            "icon": [Function],
                            "id": [Function],
                            "indeterminate": [Function],
                            "indeterminateIcon": [Function],
                            "inputProps": [Function],
                            "inputRef": [Function],
                            "onChange": [Function],
                            "required": [Function],
                            "size": [Function],
                            "value": [Function],
                          },
                          "render": [Function],
                        },
                        "displayName": "WithStyles(ForwardRef(Checkbox))",
                        "options": Object {
                          "defaultTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "activatedOpacity": 0.12,
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "disabledOpacity": 0.38,
                                "focus": "rgba(0, 0, 0, 0.12)",
                                "focusOpacity": 0.12,
                                "hover": "rgba(0, 0, 0, 0.04)",
                                "hoverOpacity": 0.04,
                                "selected": "rgba(0, 0, 0, 0.08)",
                                "selectedOpacity": 0.08,
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "info": Object {
                                "contrastText": "#fff",
                                "dark": "#1976d2",
                                "light": "#64b5f6",
                                "main": "#2196f3",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "success": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#388e3c",
                                "light": "#81c784",
                                "main": "#4caf50",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                              "warning": Object {
                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                "dark": "#f57c00",
                                "light": "#ffb74d",
                                "main": "#ff9800",
                              },
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": [Function],
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.5,
                              },
                              "body2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.01071em",
                                "lineHeight": 1.43,
                              },
                              "button": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.02857em",
                                "lineHeight": 1.75,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.03333em",
                                "lineHeight": 1.66,
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightBold": 700,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "h1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "6rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.01562em",
                                "lineHeight": 1.167,
                              },
                              "h2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.75rem",
                                "fontWeight": 300,
                                "letterSpacing": "-0.00833em",
                                "lineHeight": 1.2,
                              },
                              "h3": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.167,
                              },
                              "h4": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00735em",
                                "lineHeight": 1.235,
                              },
                              "h5": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "0em",
                                "lineHeight": 1.334,
                              },
                              "h6": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.25rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.0075em",
                                "lineHeight": 1.6,
                              },
                              "htmlFontSize": 16,
                              "overline": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.08333em",
                                "lineHeight": 2.66,
                                "textTransform": "uppercase",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subtitle1": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "letterSpacing": "0.00938em",
                                "lineHeight": 1.75,
                              },
                              "subtitle2": Object {
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "letterSpacing": "0.00714em",
                                "lineHeight": 1.57,
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "speedDial": 1050,
                              "tooltip": 1500,
                            },
                          },
                          "name": "MuiCheckbox",
                        },
                        "propTypes": Object {
                          "classes": [Function],
                          "innerRef": [Function],
                        },
                        "render": [Function],
                        "useStyles": [Function],
                      },
                      "ColumnFilteredIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnMenu": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ColumnMenuIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnResizeIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSelectorIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedAscendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnSortedDescendingIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ColumnUnsortedIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      },
                      "ColumnsPanel": [Function],
                      "DensityComfortableIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityCompactIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "DensityStandardIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "ErrorOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "ExportIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "FilterPanel": [Function],
                      "Footer": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Header": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "LoadingOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoResultsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "NoRowsOverlay": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "OpenFilterButtonIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "Pagination": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Panel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "PreferencesPanel": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Toolbar": undefined,
                    },
                    "componentsProps": undefined,
                    "copySelectedRowsToClipboard": [Function],
                    "deleteFilter": [Function],
                    "events": Object {
                      "cellClick": Array [
                        [Function],
                      ],
                      "cellDoubleClick": Array [
                        [Function],
                        [Function],
                      ],
                      "cellDragEnd": Array [
                        [Function],
                      ],
                      "cellDragEnter": Array [
                        [Function],
                      ],
                      "cellDragOver": Array [
                        [Function],
                      ],
                      "cellEditEnter": Array [
                        [Function],
                      ],
                      "cellEditExit": Array [
                        [Function],
                      ],
                      "cellEditPropsChange": Array [
                        [Function],
                      ],
                      "cellEditPropsChangeCommitted": Array [
                        [Function],
                      ],
                      "cellFocusOut": Array [
                        [Function],
                      ],
                      "cellKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "cellModeChange": Array [
                        [Function],
                      ],
                      "cellMouseDown": Array [
                        [Function],
                      ],
                      "cellMouseUp": Array [
                        [Function],
                      ],
                      "cellNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnHeaderBlur": Array [
                        [Function],
                      ],
                      "columnHeaderClick": Array [
                        [Function],
                      ],
                      "columnHeaderDragEnd": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderDragEnter": Array [
                        [Function],
                      ],
                      "columnHeaderDragOver": Array [
                        [Function],
                      ],
                      "columnHeaderDragStart": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "columnHeaderFocus": Array [
                        [Function],
                      ],
                      "columnHeaderKeyDown": Array [
                        [Function],
                        [Function],
                      ],
                      "columnHeaderNavigationKeyDown": Array [
                        [Function],
                      ],
                      "columnResizeStart": Array [
                        [Function],
                      ],
                      "columnResizeStop": Array [
                        [Function],
                      ],
                      "columnSeparatorMouseDown": Array [
                        [Function],
                      ],
                      "columnsChange": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "componentError": Array [
                        [Function],
                      ],
                      "debouncedResize": Array [
                        [Function],
                        [Function],
                      ],
                      "keydown": Array [
                        [Function],
                      ],
                      "resize": Array [
                        [Function],
                      ],
                      "rowClick": Array [
                        [Function],
                      ],
                      "rowsClear": Array [
                        [Function],
                      ],
                      "rowsScroll": Array [
                        [Function],
                        [Function],
                        [Function],
                      ],
                      "rowsSet": Array [
                        [Function],
                        [Function],
                      ],
                      "rowsUpdate": Array [
                        [Function],
                        [Function],
                      ],
                      "unmount": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                    },
                    "exportDataAsCsv": [Function],
                    "footerRef": Object {
                      "current": <div>
                        <div
                          class="MuiDataGrid-footerContainer"
                        >
                          <div />
                          <div
                            class="MuiTablePagination-root"
                          >
                            <div
                              class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                            >
                              <div
                                class="MuiTablePagination-spacer"
                              />
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                id="mui-100000"
                              >
                                Linhas por página:
                              </p>
                              <div
                                class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                              >
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="mui-100000 mui-100000"
                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                  id="mui-100000"
                                  role="button"
                                  tabindex="0"
                                >
                                  100
                                </div>
                                <input
                                  aria-hidden="true"
                                  class="MuiSelect-nativeInput"
                                  tabindex="-1"
                                  value="100"
                                />
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </div>
                              <p
                                class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                              >
                                1-1 de 1
                              </p>
                              <div
                                class="MuiTablePagination-actions"
                              >
                                <button
                                  aria-label="Página anterior"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Página anterior"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                                <button
                                  aria-label="Próxima página"
                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  title="Próxima página"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                      />
                                    </svg>
                                  </span>
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "forceUpdate": [Function],
                    "getAllColumns": [Function],
                    "getAllRowIds": [Function],
                    "getCellElement": [Function],
                    "getCellMode": [Function],
                    "getCellParams": [Function],
                    "getCellValue": [Function],
                    "getColumn": [Function],
                    "getColumnHeaderElement": [Function],
                    "getColumnHeaderParams": [Function],
                    "getColumnIndex": [Function],
                    "getColumnPosition": [Function],
                    "getColumnsMeta": [Function],
                    "getContainerPropsState": [Function],
                    "getDataAsCsv": [Function],
                    "getEditCellProps": [Function],
                    "getEditCellPropsParams": [Function],
                    "getEditRowsModel": [Function],
                    "getLocaleText": [Function],
                    "getRenderContextState": [Function],
                    "getRow": [Function],
                    "getRowElement": [Function],
                    "getRowIdFromRowIndex": [Function],
                    "getRowIndex": [Function],
                    "getRowModels": [Function],
                    "getRowParams": [Function],
                    "getRowsCount": [Function],
                    "getScrollPosition": [Function],
                    "getSelectedRows": [Function],
                    "getSortModel": [Function],
                    "getSortedRowIds": [Function],
                    "getSortedRows": [Function],
                    "getState": [Function],
                    "getVisibleColumns": [Function],
                    "getVisibleRowModels": [Function],
                    "headerRef": Object {
                      "current": <div>
                        <div />
                      </div>,
                    },
                    "hideColumnMenu": [Function],
                    "hideFilterPanel": [Function],
                    "hidePreferences": [Function],
                    "isCellEditable": [Function],
                    "isColumnVisibleInWindow": [Function],
                    "maxListeners": 10,
                    "publishEvent": [Function],
                    "renderingZoneRef": Object {
                      "current": <div
                        class="MuiDataGrid-renderingZone"
                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                      >
                        <div
                          aria-rowindex="2"
                          aria-selected="false"
                          class="Mui-even MuiDataGrid-row"
                          data-id="1"
                          data-rowindex="0"
                          role="row"
                          style="max-height: 52px; min-height: 52px;"
                        >
                          <div
                            aria-colindex="1"
                            class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                            data-colindex="0"
                            data-field="price"
                            data-mode="view"
                            data-rowindex="0"
                            data-rowselected="false"
                            data-value="1.2"
                            role="cell"
                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                            tabindex="-1"
                          >
                            R$ 1,20
                          </div>
                        </div>
                      </div>,
                    },
                    "resize": [Function],
                    "rootElementRef": Object {
                      "current": <div
                        aria-colcount="1"
                        aria-multiselectable="false"
                        aria-rowcount="1"
                        class="MuiDataGrid-root MuiDataGrid-root"
                        role="grid"
                      >
                        <div>
                          <div />
                        </div>
                        <div
                          class="MuiDataGrid-main"
                        >
                          <div
                            class="MuiDataGrid-columnsContainer"
                            style="min-height: 56px; max-height: 56px; line-height: 56px;"
                          >
                            <div
                              aria-rowindex="1"
                              class="MuiDataGrid-columnHeaderWrapper scroll"
                              role="row"
                              style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                            >
                              <div
                                aria-colindex="1"
                                class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                data-field="price"
                                role="columnheader"
                                style="width: 100px; min-width: 100px; max-width: 100px;"
                                tabindex="0"
                              >
                                <div
                                  class="MuiDataGrid-columnHeaderDraggableContainer"
                                  draggable="false"
                                >
                                  <div
                                    class="MuiDataGrid-columnHeaderTitleContainer"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderTitle"
                                      title=""
                                    >
                                      Price
                                    </div>
                                    <div
                                      class="MuiDataGrid-iconButtonContainer"
                                    >
                                      <button
                                        aria-label="Ordenar"
                                        class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                        tabindex="-1"
                                        title="Ordenar"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                            />
                                          </svg>
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    </div>
                                  </div>
                                  <div
                                    class="MuiDataGrid-menuIcon"
                                  >
                                    <button
                                      aria-controls="mui-100000"
                                      aria-haspopup="true"
                                      aria-label="Menu"
                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                      id="mui-100000"
                                      tabindex="-1"
                                      title="Menu"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  </div>
                                </div>
                                <div
                                  class="MuiDataGrid-columnSeparator"
                                  style="min-height: 56px; opacity: 1;"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M11 19V5h2v14z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            style="overflow: visible; height: 0px; width: 0px;"
                          >
                            <div
                              class="MuiDataGrid-windowContainer"
                              style="width: 0px; height: 0px;"
                            >
                              <div
                                class="MuiDataGrid-window"
                                style="top: 56px; overflow-y: auto;"
                              >
                                <div
                                  class="MuiDataGrid-dataContainer"
                                  style="min-width: 100px; min-height: 52px;"
                                >
                                  <div
                                    class="MuiDataGrid-viewport"
                                    style="min-width: 0; max-width: 0; max-height: 0;"
                                  >
                                    <div
                                      class="MuiDataGrid-renderingZone"
                                      style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                    >
                                      <div
                                        aria-rowindex="2"
                                        aria-selected="false"
                                        class="Mui-even MuiDataGrid-row"
                                        data-id="1"
                                        data-rowindex="0"
                                        role="row"
                                        style="max-height: 52px; min-height: 52px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                          data-colindex="0"
                                          data-field="price"
                                          data-mode="view"
                                          data-rowindex="0"
                                          data-rowselected="false"
                                          data-value="1.2"
                                          role="cell"
                                          style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                          tabindex="-1"
                                        >
                                          R$ 1,20
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="Mui-resizeTriggers"
                          >
                            <div
                              class="expand-trigger"
                            >
                              <div
                                style="width: 1px; height: 1px;"
                              />
                            </div>
                            <div
                              class="contract-trigger"
                            />
                          </div>
                        </div>
                        <div>
                          <div
                            class="MuiDataGrid-footerContainer"
                          >
                            <div />
                            <div
                              class="MuiTablePagination-root"
                            >
                              <div
                                class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                              >
                                <div
                                  class="MuiTablePagination-spacer"
                                />
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                  id="mui-100000"
                                >
                                  Linhas por página:
                                </p>
                                <div
                                  class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-100000 mui-100000"
                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-100000"
                                    role="button"
                                    tabindex="0"
                                  >
                                    100
                                  </div>
                                  <input
                                    aria-hidden="true"
                                    class="MuiSelect-nativeInput"
                                    tabindex="-1"
                                    value="100"
                                  />
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </div>
                                <p
                                  class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                >
                                  1-1 de 1
                                </p>
                                <div
                                  class="MuiTablePagination-actions"
                                >
                                  <button
                                    aria-label="Página anterior"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Página anterior"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                  <button
                                    aria-label="Próxima página"
                                    class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled=""
                                    tabindex="-1"
                                    title="Próxima página"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                        />
                                      </svg>
                                    </span>
                                  </button>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                    "scroll": [Function],
                    "scrollToIndexes": [Function],
                    "selectRow": [Function],
                    "selectRows": [Function],
                    "setCellFocus": [Function],
                    "setCellMode": [Function],
                    "setCellValue": [Function],
                    "setColumnHeaderFocus": [Function],
                    "setColumnIndex": [Function],
                    "setColumnVisibility": [Function],
                    "setColumnWidth": [Function],
                    "setDensity": [Function],
                    "setEditCellProps": [Function],
                    "setEditRowsModel": [Function],
                    "setFilterModel": [Function],
                    "setPage": [Function],
                    "setPageSize": [Function],
                    "setRows": [Function],
                    "setSelectionModel": [Function],
                    "setSortModel": [Function],
                    "setState": [Function],
                    "showColumnMenu": [Function],
                    "showError": [Function],
                    "showFilterPanel": [Function],
                    "showPreferences": [Function],
                    "sortColumn": [Function],
                    "state": Object {
                      "columnMenu": Object {
                        "open": false,
                      },
                      "columnReorder": Object {
                        "dragCol": "",
                      },
                      "columnResize": Object {
                        "resizingColumnField": "",
                      },
                      "columns": Object {
                        "all": Array [
                          "price",
                        ],
                        "lookup": Object {
                          "price": Object {
                            "align": "right",
                            "cellClassName": "font-tabular-nums",
                            "field": "price",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "headerName": "Price",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                        },
                      },
                      "containerSizes": Object {
                        "dataContainerSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "isVirtualized": false,
                        "lastPage": 1,
                        "renderingZone": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "renderingZonePageSize": 1,
                        "renderingZoneScrollHeight": 52,
                        "totalSizes": Object {
                          "height": 52,
                          "width": 100,
                        },
                        "viewportPageSize": 1,
                        "virtualRowsCount": 1,
                        "windowSizes": Object {
                          "height": 0,
                          "width": 0,
                        },
                      },
                      "density": Object {
                        "headerHeight": 56,
                        "rowHeight": 52,
                        "value": "standard",
                      },
                      "editRows": Object {},
                      "error": undefined,
                      "filter": Object {
                        "items": Array [],
                        "linkOperator": "and",
                      },
                      "focus": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "isScrolling": false,
                      "options": Object {
                        "checkboxSelectionVisibleOnly": false,
                        "classes": Object {
                          "cell": "MuiDataGrid-cell",
                          "columnHeader": "MuiDataGrid-columnHeader",
                          "root": "MuiDataGrid-root",
                          "row": "MuiDataGrid-row",
                        },
                        "columnBuffer": 2,
                        "columnTypes": Object {
                          "__default__": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                          "boolean": Object {
                            "align": "center",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "center",
                            "hide": false,
                            "renderCell": [Function],
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "boolean",
                            "width": 100,
                          },
                          "date": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "date",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "date",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "dateTime": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "after",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrAfter",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "before",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "datetime-local",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "onOrBefore",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "dateTime",
                            "valueFormatter": [Function],
                            "width": 100,
                          },
                          "number": Object {
                            "align": "right",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "=",
                                "value": "=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "!=",
                                "value": "!=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">",
                                "value": ">",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": ">=",
                                "value": ">=",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<",
                                "value": "<",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "number",
                                },
                                "getApplyFilterFn": [Function],
                                "label": "<=",
                                "value": "<=",
                              },
                            ],
                            "filterable": true,
                            "headerAlign": "right",
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "number",
                            "valueFormatter": [Function],
                            "valueParser": [Function],
                            "width": 100,
                          },
                          "singleSelect": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "is",
                              },
                              Object {
                                "InputComponent": [Function],
                                "InputComponentProps": Object {
                                  "type": "singleSelect",
                                },
                                "getApplyFilterFn": [Function],
                                "value": "not",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "singleSelect",
                            "width": 100,
                          },
                          "string": Object {
                            "align": "left",
                            "filterOperators": Array [
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "contains",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "equals",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "startsWith",
                              },
                              Object {
                                "InputComponent": [Function],
                                "getApplyFilterFn": [Function],
                                "value": "endsWith",
                              },
                            ],
                            "filterable": true,
                            "hide": false,
                            "renderEditCell": [Function],
                            "resizable": true,
                            "sortComparator": [Function],
                            "sortable": true,
                            "type": "string",
                            "width": 100,
                          },
                        },
                        "columns": Array [
                          Object {
                            "cellClassName": "font-tabular-nums",
                            "field": "price",
                            "headerName": "Price",
                            "type": "number",
                            "valueFormatter": [Function],
                          },
                        ],
                        "density": "standard",
                        "disableColumnReorder": true,
                        "disableColumnResize": true,
                        "disableMultipleColumnsFiltering": true,
                        "disableMultipleColumnsSorting": true,
                        "disableMultipleSelection": true,
                        "filterMode": "client",
                        "headerHeight": 56,
                        "isRtl": false,
                        "licenseStatus": "Valid",
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "filterValueAny": "any",
                          "filterValueFalse": "false",
                          "filterValueTrue": "true",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                        "logLevel": "warn",
                        "logger": BufferedConsole {
                          "Console": [Function],
                          "_buffer": Array [],
                          "_counters": Object {},
                          "_groupDepth": 0,
                          "_timers": Object {},
                          "assert": [Function],
                          "clear": [Function],
                          "count": [Function],
                          "countReset": [Function],
                          "debug": [Function],
                          "dir": [Function],
                          "dirxml": [Function],
                          "error": [Function],
                          "group": [Function],
                          "groupCollapsed": [Function],
                          "groupEnd": [Function],
                          "info": [Function],
                          "log": [Function],
                          "table": [Function],
                          "time": [Function],
                          "timeEnd": [Function],
                          "timeLog": [Function],
                          "trace": [Function],
                          "warn": [Function],
                        },
                        "pageSize": 100,
                        "pagination": true,
                        "paginationMode": "client",
                        "rowHeight": 52,
                        "rows": Array [
                          Object {
                            "id": 1,
                            "price": 1.2,
                          },
                        ],
                        "rowsPerPageOptions": Array [
                          25,
                          50,
                          100,
                        ],
                        "scrollEndThreshold": 80,
                        "scrollbarSize": 0,
                        "sortingMode": "client",
                        "sortingOrder": Array [
                          "asc",
                          "desc",
                          null,
                        ],
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "rgb(17, 82, 147)",
                              "light": "rgb(71, 145, 219)",
                              "main": "#1976d2",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {
                            "MuiDataGrid": Object {
                              "localeText": Object {
                                "MuiTablePagination": Object {
                                  "backIconButtonText": "Página anterior",
                                  "labelDisplayedRows": [Function],
                                  "labelRowsPerPage": "Linhas por página:",
                                  "nextIconButtonText": "Próxima página",
                                },
                                "booleanCellFalseLabel": "não",
                                "booleanCellTrueLabel": "sim",
                                "checkboxSelectionHeaderName": "Seleção",
                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                "columnHeaderFiltersTooltipActive": [Function],
                                "columnHeaderSortIconLabel": "Ordenar",
                                "columnMenuFilter": "Filtrar",
                                "columnMenuHideColumn": "Ocultar",
                                "columnMenuLabel": "Menu",
                                "columnMenuShowColumns": "Exibir colunas",
                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                "columnMenuUnsort": "Desfazer ordenação",
                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                "columnsPanelHideAllButton": "Ocultar todas",
                                "columnsPanelShowAllButton": "Mostrar todas",
                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                "filterOperatorAfter": "após",
                                "filterOperatorBefore": "antes de",
                                "filterOperatorContains": "contém",
                                "filterOperatorEndsWith": "termina com",
                                "filterOperatorEquals": "é igual a",
                                "filterOperatorIs": "é",
                                "filterOperatorNot": "não é",
                                "filterOperatorOnOrAfter": "em ou após",
                                "filterOperatorOnOrBefore": "em ou antes de",
                                "filterOperatorStartsWith": "começa com",
                                "filterPanelAddFilter": "Adicionar filtro",
                                "filterPanelColumns": "Colunas",
                                "filterPanelDeleteIconLabel": "Excluir",
                                "filterPanelInputLabel": "Valor",
                                "filterPanelInputPlaceholder": "Filtrar valor",
                                "filterPanelOperatorAnd": "E",
                                "filterPanelOperatorOr": "Ou",
                                "filterPanelOperators": "Operadores",
                                "footerRowSelected": [Function],
                                "footerTotalRows": "Total de linhas:",
                                "footerTotalVisibleRows": [Function],
                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                "noRowsLabel": "Nenhuma linha",
                                "toolbarColumns": "Colunas",
                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                "toolbarDensity": "Densidade",
                                "toolbarDensityComfortable": "Confortável",
                                "toolbarDensityCompact": "Compacto",
                                "toolbarDensityLabel": "Densidade",
                                "toolbarDensityStandard": "Padrão",
                                "toolbarExport": "Exportar",
                                "toolbarExportCSV": "Baixar como CSV",
                                "toolbarExportLabel": "Exportar",
                                "toolbarFilters": "Filtros",
                                "toolbarFiltersLabel": "Exibir filtros",
                                "toolbarFiltersTooltipActive": [Function],
                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                "toolbarFiltersTooltipShow": "Exibir filtros",
                              },
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                          Symbol(mui.nested): false,
                        },
                      },
                      "pagination": Object {
                        "page": 0,
                        "pageCount": 1,
                        "pageSize": 100,
                        "paginationMode": "client",
                        "rowCount": 1,
                      },
                      "preferencePanel": Object {
                        "open": false,
                      },
                      "rendering": Object {
                        "realScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "renderContext": Object {
                          "firstColIdx": 0,
                          "firstRowIdx": 0,
                          "lastColIdx": 0,
                          "lastRowIdx": 1,
                          "leftEmptyWidth": 0,
                          "page": 0,
                          "pageSize": 100,
                          "paginationCurrentPage": 0,
                          "rightEmptyWidth": 0,
                        },
                        "renderedSizes": Object {
                          "dataContainerSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "isVirtualized": false,
                          "lastPage": 1,
                          "renderingZone": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "renderingZonePageSize": 1,
                          "renderingZoneScrollHeight": 52,
                          "totalSizes": Object {
                            "height": 52,
                            "width": 100,
                          },
                          "viewportPageSize": 1,
                          "virtualRowsCount": 1,
                          "windowSizes": Object {
                            "height": 0,
                            "width": 0,
                          },
                        },
                        "renderingZoneScroll": Object {
                          "left": 0,
                          "top": 0,
                        },
                        "virtualPage": 0,
                        "virtualRowsCount": 0,
                      },
                      "rows": Object {
                        "allRows": Array [
                          1,
                        ],
                        "idRowsLookup": Object {
                          "1": Object {
                            "id": 1,
                            "price": 1.2,
                          },
                        },
                        "totalRowCount": 1,
                      },
                      "scrollBar": Object {
                        "hasScrollX": true,
                        "hasScrollY": true,
                        "scrollBarSize": Object {
                          "x": 0,
                          "y": 0,
                        },
                      },
                      "selection": Object {},
                      "sorting": Object {
                        "sortModel": Array [],
                        "sortedRows": Array [
                          1,
                        ],
                      },
                      "tabIndex": Object {
                        "cell": null,
                        "columnHeader": null,
                      },
                      "viewportSizes": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "visibleRows": Object {
                        "visibleRowsLookup": Object {},
                      },
                    },
                    "subscribeEvent": [Function],
                    "toggleColumnMenu": [Function],
                    "updateColumn": [Function],
                    "updateColumns": [Function],
                    "updateRows": [Function],
                    "updateViewport": [Function],
                    "upsertFilter": [Function],
                    "warnOnce": false,
                    "windowRef": Object {
                      "current": <div
                        class="MuiDataGrid-window"
                        style="top: 56px; overflow-y: auto;"
                      >
                        <div
                          class="MuiDataGrid-dataContainer"
                          style="min-width: 100px; min-height: 52px;"
                        >
                          <div
                            class="MuiDataGrid-viewport"
                            style="min-width: 0; max-width: 0; max-height: 0;"
                          >
                            <div
                              class="MuiDataGrid-renderingZone"
                              style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                            >
                              <div
                                aria-rowindex="2"
                                aria-selected="false"
                                class="Mui-even MuiDataGrid-row"
                                data-id="1"
                                data-rowindex="0"
                                role="row"
                                style="max-height: 52px; min-height: 52px;"
                              >
                                <div
                                  aria-colindex="1"
                                  class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                  data-colindex="0"
                                  data-field="price"
                                  data-mode="view"
                                  data-rowindex="0"
                                  data-rowselected="false"
                                  data-value="1.2"
                                  role="cell"
                                  style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                  tabindex="-1"
                                >
                                  R$ 1,20
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                    },
                  },
                }
              }
              props={
                Object {
                  "apiRef": undefined,
                  "checkboxSelectionVisibleOnly": false,
                  "columnBuffer": 2,
                  "columnTypes": Object {
                    "__default__": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                    "boolean": Object {
                      "align": "center",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "center",
                      "hide": false,
                      "renderCell": [Function],
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "boolean",
                      "width": 100,
                    },
                    "date": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "date",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "date",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "dateTime": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "after",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrAfter",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "before",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "datetime-local",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "onOrBefore",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "dateTime",
                      "valueFormatter": [Function],
                      "width": 100,
                    },
                    "number": Object {
                      "align": "right",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "=",
                          "value": "=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "!=",
                          "value": "!=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">",
                          "value": ">",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": ">=",
                          "value": ">=",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<",
                          "value": "<",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "number",
                          },
                          "getApplyFilterFn": [Function],
                          "label": "<=",
                          "value": "<=",
                        },
                      ],
                      "filterable": true,
                      "headerAlign": "right",
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "number",
                      "valueFormatter": [Function],
                      "valueParser": [Function],
                      "width": 100,
                    },
                    "singleSelect": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "is",
                        },
                        Object {
                          "InputComponent": [Function],
                          "InputComponentProps": Object {
                            "type": "singleSelect",
                          },
                          "getApplyFilterFn": [Function],
                          "value": "not",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "singleSelect",
                      "width": 100,
                    },
                    "string": Object {
                      "align": "left",
                      "filterOperators": Array [
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "contains",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "equals",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "startsWith",
                        },
                        Object {
                          "InputComponent": [Function],
                          "getApplyFilterFn": [Function],
                          "value": "endsWith",
                        },
                      ],
                      "filterable": true,
                      "hide": false,
                      "renderEditCell": [Function],
                      "resizable": true,
                      "sortComparator": [Function],
                      "sortable": true,
                      "type": "string",
                      "width": 100,
                    },
                  },
                  "columns": Array [
                    Object {
                      "cellClassName": "font-tabular-nums",
                      "field": "price",
                      "headerName": "Price",
                      "type": "number",
                      "valueFormatter": [Function],
                    },
                  ],
                  "density": "standard",
                  "disableColumnReorder": true,
                  "disableColumnResize": true,
                  "disableMultipleColumnsFiltering": true,
                  "disableMultipleColumnsSorting": true,
                  "disableMultipleSelection": true,
                  "filterMode": "client",
                  "getRowId": undefined,
                  "headerHeight": 56,
                  "isRtl": false,
                  "licenseStatus": "Valid",
                  "localeText": Object {
                    "MuiTablePagination": Object {
                      "backIconButtonText": "Página anterior",
                      "labelDisplayedRows": [Function],
                      "labelRowsPerPage": "Linhas por página:",
                      "nextIconButtonText": "Próxima página",
                    },
                    "booleanCellFalseLabel": "não",
                    "booleanCellTrueLabel": "sim",
                    "checkboxSelectionHeaderName": "Seleção",
                    "columnHeaderFiltersLabel": "Exibir Filtros",
                    "columnHeaderFiltersTooltipActive": [Function],
                    "columnHeaderSortIconLabel": "Ordenar",
                    "columnMenuFilter": "Filtrar",
                    "columnMenuHideColumn": "Ocultar",
                    "columnMenuLabel": "Menu",
                    "columnMenuShowColumns": "Exibir colunas",
                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                    "columnMenuUnsort": "Desfazer ordenação",
                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                    "columnsPanelHideAllButton": "Ocultar todas",
                    "columnsPanelShowAllButton": "Mostrar todas",
                    "columnsPanelTextFieldLabel": "Localizar coluna",
                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                    "filterOperatorAfter": "após",
                    "filterOperatorBefore": "antes de",
                    "filterOperatorContains": "contém",
                    "filterOperatorEndsWith": "termina com",
                    "filterOperatorEquals": "é igual a",
                    "filterOperatorIs": "é",
                    "filterOperatorNot": "não é",
                    "filterOperatorOnOrAfter": "em ou após",
                    "filterOperatorOnOrBefore": "em ou antes de",
                    "filterOperatorStartsWith": "começa com",
                    "filterPanelAddFilter": "Adicionar filtro",
                    "filterPanelColumns": "Colunas",
                    "filterPanelDeleteIconLabel": "Excluir",
                    "filterPanelInputLabel": "Valor",
                    "filterPanelInputPlaceholder": "Filtrar valor",
                    "filterPanelOperatorAnd": "E",
                    "filterPanelOperatorOr": "Ou",
                    "filterPanelOperators": "Operadores",
                    "footerRowSelected": [Function],
                    "footerTotalRows": "Total de linhas:",
                    "footerTotalVisibleRows": [Function],
                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                    "noRowsLabel": "Nenhuma linha",
                    "toolbarColumns": "Colunas",
                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                    "toolbarDensity": "Densidade",
                    "toolbarDensityComfortable": "Confortável",
                    "toolbarDensityCompact": "Compacto",
                    "toolbarDensityLabel": "Densidade",
                    "toolbarDensityStandard": "Padrão",
                    "toolbarExport": "Exportar",
                    "toolbarExportCSV": "Baixar como CSV",
                    "toolbarExportLabel": "Exportar",
                    "toolbarFilters": "Filtros",
                    "toolbarFiltersLabel": "Exibir filtros",
                    "toolbarFiltersTooltipActive": [Function],
                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                    "toolbarFiltersTooltipShow": "Exibir filtros",
                  },
                  "logLevel": "warn",
                  "logger": BufferedConsole {
                    "Console": [Function],
                    "_buffer": Array [],
                    "_counters": Object {},
                    "_groupDepth": 0,
                    "_timers": Object {},
                    "assert": [Function],
                    "clear": [Function],
                    "count": [Function],
                    "countReset": [Function],
                    "debug": [Function],
                    "dir": [Function],
                    "dirxml": [Function],
                    "error": [Function],
                    "group": [Function],
                    "groupCollapsed": [Function],
                    "groupEnd": [Function],
                    "info": [Function],
                    "log": [Function],
                    "table": [Function],
                    "time": [Function],
                    "timeEnd": [Function],
                    "timeLog": [Function],
                    "trace": [Function],
                    "warn": [Function],
                  },
                  "onRowsScrollEnd": undefined,
                  "pageSize": 100,
                  "pagination": true,
                  "paginationMode": "client",
                  "rowHeight": 52,
                  "rows": Array [
                    Object {
                      "id": 1,
                      "price": 1.2,
                    },
                  ],
                  "rowsPerPageOptions": Array [
                    25,
                    50,
                    100,
                  ],
                  "scrollEndThreshold": 80,
                  "sortingMode": "client",
                  "sortingOrder": Array [
                    "asc",
                    "desc",
                    null,
                  ],
                  "theme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "rgb(17, 82, 147)",
                        "light": "rgb(71, 145, 219)",
                        "main": "#1976d2",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {
                      "MuiDataGrid": Object {
                        "localeText": Object {
                          "MuiTablePagination": Object {
                            "backIconButtonText": "Página anterior",
                            "labelDisplayedRows": [Function],
                            "labelRowsPerPage": "Linhas por página:",
                            "nextIconButtonText": "Próxima página",
                          },
                          "booleanCellFalseLabel": "não",
                          "booleanCellTrueLabel": "sim",
                          "checkboxSelectionHeaderName": "Seleção",
                          "columnHeaderFiltersLabel": "Exibir Filtros",
                          "columnHeaderFiltersTooltipActive": [Function],
                          "columnHeaderSortIconLabel": "Ordenar",
                          "columnMenuFilter": "Filtrar",
                          "columnMenuHideColumn": "Ocultar",
                          "columnMenuLabel": "Menu",
                          "columnMenuShowColumns": "Exibir colunas",
                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                          "columnMenuUnsort": "Desfazer ordenação",
                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                          "columnsPanelHideAllButton": "Ocultar todas",
                          "columnsPanelShowAllButton": "Mostrar todas",
                          "columnsPanelTextFieldLabel": "Localizar coluna",
                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                          "filterOperatorAfter": "após",
                          "filterOperatorBefore": "antes de",
                          "filterOperatorContains": "contém",
                          "filterOperatorEndsWith": "termina com",
                          "filterOperatorEquals": "é igual a",
                          "filterOperatorIs": "é",
                          "filterOperatorNot": "não é",
                          "filterOperatorOnOrAfter": "em ou após",
                          "filterOperatorOnOrBefore": "em ou antes de",
                          "filterOperatorStartsWith": "começa com",
                          "filterPanelAddFilter": "Adicionar filtro",
                          "filterPanelColumns": "Colunas",
                          "filterPanelDeleteIconLabel": "Excluir",
                          "filterPanelInputLabel": "Valor",
                          "filterPanelInputPlaceholder": "Filtrar valor",
                          "filterPanelOperatorAnd": "E",
                          "filterPanelOperatorOr": "Ou",
                          "filterPanelOperators": "Operadores",
                          "footerRowSelected": [Function],
                          "footerTotalRows": "Total de linhas:",
                          "footerTotalVisibleRows": [Function],
                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                          "noRowsLabel": "Nenhuma linha",
                          "toolbarColumns": "Colunas",
                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                          "toolbarDensity": "Densidade",
                          "toolbarDensityComfortable": "Confortável",
                          "toolbarDensityCompact": "Compacto",
                          "toolbarDensityLabel": "Densidade",
                          "toolbarDensityStandard": "Padrão",
                          "toolbarExport": "Exportar",
                          "toolbarExportCSV": "Baixar como CSV",
                          "toolbarExportLabel": "Exportar",
                          "toolbarFilters": "Filtros",
                          "toolbarFiltersLabel": "Exibir filtros",
                          "toolbarFiltersTooltipActive": [Function],
                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                          "toolbarFiltersTooltipShow": "Exibir filtros",
                        },
                      },
                    },
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                    Symbol(mui.nested): false,
                  },
                }
              }
            >
              <ForwardRef>
                <NoSsr>
                  <div
                    aria-colcount={1}
                    aria-multiselectable={false}
                    aria-rowcount={1}
                    className="MuiDataGrid-root MuiDataGrid-root"
                    role="grid"
                  >
                    <vs>
                      <Cs
                        api={
                          Object {
                            "current": Ti {
                              "applyFilter": [Function],
                              "applyFilterLinkOperator": [Function],
                              "applyFilters": [Function],
                              "applySorting": [Function],
                              "columnHeadersContainerElementRef": Object {
                                "current": <div
                                  class="MuiDataGrid-columnsContainer"
                                  style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                >
                                  <div
                                    aria-rowindex="1"
                                    class="MuiDataGrid-columnHeaderWrapper scroll"
                                    role="row"
                                    style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                      data-field="price"
                                      role="columnheader"
                                      style="width: 100px; min-width: 100px; max-width: 100px;"
                                      tabindex="0"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderDraggableContainer"
                                        draggable="false"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitleContainer"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderTitle"
                                            title=""
                                          >
                                            Price
                                          </div>
                                          <div
                                            class="MuiDataGrid-iconButtonContainer"
                                          >
                                            <button
                                              aria-label="Ordenar"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                              tabindex="-1"
                                              title="Ordenar"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                  />
                                                </svg>
                                              </span>
                                              <span
                                                class="MuiTouchRipple-root"
                                              />
                                            </button>
                                          </div>
                                        </div>
                                        <div
                                          class="MuiDataGrid-menuIcon"
                                        >
                                          <button
                                            aria-controls="mui-100000"
                                            aria-haspopup="true"
                                            aria-label="Menu"
                                            class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                            id="mui-100000"
                                            tabindex="-1"
                                            title="Menu"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-columnSeparator"
                                        style="min-height: 56px; opacity: 1;"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M11 19V5h2v14z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "columnHeadersElementRef": Object {
                                "current": <div
                                  aria-rowindex="1"
                                  class="MuiDataGrid-columnHeaderWrapper scroll"
                                  role="row"
                                  style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                >
                                  <div
                                    aria-colindex="1"
                                    class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                    data-field="price"
                                    role="columnheader"
                                    style="width: 100px; min-width: 100px; max-width: 100px;"
                                    tabindex="0"
                                  >
                                    <div
                                      class="MuiDataGrid-columnHeaderDraggableContainer"
                                      draggable="false"
                                    >
                                      <div
                                        class="MuiDataGrid-columnHeaderTitleContainer"
                                      >
                                        <div
                                          class="MuiDataGrid-columnHeaderTitle"
                                          title=""
                                        >
                                          Price
                                        </div>
                                        <div
                                          class="MuiDataGrid-iconButtonContainer"
                                        >
                                          <button
                                            aria-label="Ordenar"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                            tabindex="-1"
                                            title="Ordenar"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                />
                                              </svg>
                                            </span>
                                            <span
                                              class="MuiTouchRipple-root"
                                            />
                                          </button>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDataGrid-menuIcon"
                                      >
                                        <button
                                          aria-controls="mui-100000"
                                          aria-haspopup="true"
                                          aria-label="Menu"
                                          class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                          id="mui-100000"
                                          tabindex="-1"
                                          title="Menu"
                                          type="button"
                                        >
                                          <span
                                            class="MuiIconButton-label"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                    <div
                                      class="MuiDataGrid-columnSeparator"
                                      style="min-height: 56px; opacity: 1;"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11 19V5h2v14z"
                                        />
                                      </svg>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "commitCellChange": [Function],
                              "components": Object {
                                "BooleanCellFalseIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "BooleanCellTrueIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Checkbox": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Naked": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "checked": [Function],
                                      "checkedIcon": [Function],
                                      "classes": [Function],
                                      "color": [Function],
                                      "disableRipple": [Function],
                                      "disabled": [Function],
                                      "icon": [Function],
                                      "id": [Function],
                                      "indeterminate": [Function],
                                      "indeterminateIcon": [Function],
                                      "inputProps": [Function],
                                      "inputRef": [Function],
                                      "onChange": [Function],
                                      "required": [Function],
                                      "size": [Function],
                                      "value": [Function],
                                    },
                                    "render": [Function],
                                  },
                                  "displayName": "WithStyles(ForwardRef(Checkbox))",
                                  "options": Object {
                                    "defaultTheme": Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "activatedOpacity": 0.12,
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "disabledOpacity": 0.38,
                                          "focus": "rgba(0, 0, 0, 0.12)",
                                          "focusOpacity": 0.12,
                                          "hover": "rgba(0, 0, 0, 0.04)",
                                          "hoverOpacity": 0.04,
                                          "selected": "rgba(0, 0, 0, 0.08)",
                                          "selectedOpacity": 0.08,
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "info": Object {
                                          "contrastText": "#fff",
                                          "dark": "#1976d2",
                                          "light": "#64b5f6",
                                          "main": "#2196f3",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                        "warning": Object {
                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                          "dark": "#f57c00",
                                          "light": "#ffb74d",
                                          "main": "#ff9800",
                                        },
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1.167,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1.2,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.167,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.235,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.334,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "speedDial": 1050,
                                        "tooltip": 1500,
                                      },
                                    },
                                    "name": "MuiCheckbox",
                                  },
                                  "propTypes": Object {
                                    "classes": [Function],
                                    "innerRef": [Function],
                                  },
                                  "render": [Function],
                                  "useStyles": [Function],
                                },
                                "ColumnFilteredIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnMenu": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ColumnMenuIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnResizeIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSelectorIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedAscendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnSortedDescendingIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ColumnUnsortedIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": [Function],
                                },
                                "ColumnsPanel": [Function],
                                "DensityComfortableIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityCompactIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "DensityStandardIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "ErrorOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "ExportIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "FilterPanel": [Function],
                                "Footer": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Header": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "LoadingOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoResultsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "NoRowsOverlay": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "OpenFilterButtonIcon": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "Pagination": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Panel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "PreferencesPanel": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "Toolbar": undefined,
                              },
                              "componentsProps": undefined,
                              "copySelectedRowsToClipboard": [Function],
                              "deleteFilter": [Function],
                              "events": Object {
                                "cellClick": Array [
                                  [Function],
                                ],
                                "cellDoubleClick": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellDragEnd": Array [
                                  [Function],
                                ],
                                "cellDragEnter": Array [
                                  [Function],
                                ],
                                "cellDragOver": Array [
                                  [Function],
                                ],
                                "cellEditEnter": Array [
                                  [Function],
                                ],
                                "cellEditExit": Array [
                                  [Function],
                                ],
                                "cellEditPropsChange": Array [
                                  [Function],
                                ],
                                "cellEditPropsChangeCommitted": Array [
                                  [Function],
                                ],
                                "cellFocusOut": Array [
                                  [Function],
                                ],
                                "cellKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "cellModeChange": Array [
                                  [Function],
                                ],
                                "cellMouseDown": Array [
                                  [Function],
                                ],
                                "cellMouseUp": Array [
                                  [Function],
                                ],
                                "cellNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnHeaderBlur": Array [
                                  [Function],
                                ],
                                "columnHeaderClick": Array [
                                  [Function],
                                ],
                                "columnHeaderDragEnd": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderDragEnter": Array [
                                  [Function],
                                ],
                                "columnHeaderDragOver": Array [
                                  [Function],
                                ],
                                "columnHeaderDragStart": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderFocus": Array [
                                  [Function],
                                ],
                                "columnHeaderKeyDown": Array [
                                  [Function],
                                  [Function],
                                ],
                                "columnHeaderNavigationKeyDown": Array [
                                  [Function],
                                ],
                                "columnResizeStart": Array [
                                  [Function],
                                ],
                                "columnResizeStop": Array [
                                  [Function],
                                ],
                                "columnSeparatorMouseDown": Array [
                                  [Function],
                                ],
                                "columnsChange": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "componentError": Array [
                                  [Function],
                                ],
                                "debouncedResize": Array [
                                  [Function],
                                  [Function],
                                ],
                                "keydown": Array [
                                  [Function],
                                ],
                                "resize": Array [
                                  [Function],
                                ],
                                "rowClick": Array [
                                  [Function],
                                ],
                                "rowsClear": Array [
                                  [Function],
                                ],
                                "rowsScroll": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "rowsSet": Array [
                                  [Function],
                                  [Function],
                                ],
                                "rowsUpdate": Array [
                                  [Function],
                                  [Function],
                                ],
                                "unmount": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "exportDataAsCsv": [Function],
                              "footerRef": Object {
                                "current": <div>
                                  <div
                                    class="MuiDataGrid-footerContainer"
                                  >
                                    <div />
                                    <div
                                      class="MuiTablePagination-root"
                                    >
                                      <div
                                        class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          class="MuiTablePagination-spacer"
                                        />
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          id="mui-100000"
                                        >
                                          Linhas por página:
                                        </p>
                                        <div
                                          class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                        >
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-100000 mui-100000"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-100000"
                                            role="button"
                                            tabindex="0"
                                          >
                                            100
                                          </div>
                                          <input
                                            aria-hidden="true"
                                            class="MuiSelect-nativeInput"
                                            tabindex="-1"
                                            value="100"
                                          />
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M7 10l5 5 5-5z"
                                            />
                                          </svg>
                                        </div>
                                        <p
                                          class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                        >
                                          1-1 de 1
                                        </p>
                                        <div
                                          class="MuiTablePagination-actions"
                                        >
                                          <button
                                            aria-label="Página anterior"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Página anterior"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                          <button
                                            aria-label="Próxima página"
                                            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                            disabled=""
                                            tabindex="-1"
                                            title="Próxima página"
                                            type="button"
                                          >
                                            <span
                                              class="MuiIconButton-label"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "forceUpdate": [Function],
                              "getAllColumns": [Function],
                              "getAllRowIds": [Function],
                              "getCellElement": [Function],
                              "getCellMode": [Function],
                              "getCellParams": [Function],
                              "getCellValue": [Function],
                              "getColumn": [Function],
                              "getColumnHeaderElement": [Function],
                              "getColumnHeaderParams": [Function],
                              "getColumnIndex": [Function],
                              "getColumnPosition": [Function],
                              "getColumnsMeta": [Function],
                              "getContainerPropsState": [Function],
                              "getDataAsCsv": [Function],
                              "getEditCellProps": [Function],
                              "getEditCellPropsParams": [Function],
                              "getEditRowsModel": [Function],
                              "getLocaleText": [Function],
                              "getRenderContextState": [Function],
                              "getRow": [Function],
                              "getRowElement": [Function],
                              "getRowIdFromRowIndex": [Function],
                              "getRowIndex": [Function],
                              "getRowModels": [Function],
                              "getRowParams": [Function],
                              "getRowsCount": [Function],
                              "getScrollPosition": [Function],
                              "getSelectedRows": [Function],
                              "getSortModel": [Function],
                              "getSortedRowIds": [Function],
                              "getSortedRows": [Function],
                              "getState": [Function],
                              "getVisibleColumns": [Function],
                              "getVisibleRowModels": [Function],
                              "headerRef": Object {
                                "current": <div>
                                  <div />
                                </div>,
                              },
                              "hideColumnMenu": [Function],
                              "hideFilterPanel": [Function],
                              "hidePreferences": [Function],
                              "isCellEditable": [Function],
                              "isColumnVisibleInWindow": [Function],
                              "maxListeners": 10,
                              "publishEvent": [Function],
                              "renderingZoneRef": Object {
                                "current": <div
                                  class="MuiDataGrid-renderingZone"
                                  style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                >
                                  <div
                                    aria-rowindex="2"
                                    aria-selected="false"
                                    class="Mui-even MuiDataGrid-row"
                                    data-id="1"
                                    data-rowindex="0"
                                    role="row"
                                    style="max-height: 52px; min-height: 52px;"
                                  >
                                    <div
                                      aria-colindex="1"
                                      class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                      data-colindex="0"
                                      data-field="price"
                                      data-mode="view"
                                      data-rowindex="0"
                                      data-rowselected="false"
                                      data-value="1.2"
                                      role="cell"
                                      style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                      tabindex="-1"
                                    >
                                      R$ 1,20
                                    </div>
                                  </div>
                                </div>,
                              },
                              "resize": [Function],
                              "rootElementRef": Object {
                                "current": <div
                                  aria-colcount="1"
                                  aria-multiselectable="false"
                                  aria-rowcount="1"
                                  class="MuiDataGrid-root MuiDataGrid-root"
                                  role="grid"
                                >
                                  <div>
                                    <div />
                                  </div>
                                  <div
                                    class="MuiDataGrid-main"
                                  >
                                    <div
                                      class="MuiDataGrid-columnsContainer"
                                      style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                    >
                                      <div
                                        aria-rowindex="1"
                                        class="MuiDataGrid-columnHeaderWrapper scroll"
                                        role="row"
                                        style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                      >
                                        <div
                                          aria-colindex="1"
                                          class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                          data-field="price"
                                          role="columnheader"
                                          style="width: 100px; min-width: 100px; max-width: 100px;"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiDataGrid-columnHeaderDraggableContainer"
                                            draggable="false"
                                          >
                                            <div
                                              class="MuiDataGrid-columnHeaderTitleContainer"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderTitle"
                                                title=""
                                              >
                                                Price
                                              </div>
                                              <div
                                                class="MuiDataGrid-iconButtonContainer"
                                              >
                                                <button
                                                  aria-label="Ordenar"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                  tabindex="-1"
                                                  title="Ordenar"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                            <div
                                              class="MuiDataGrid-menuIcon"
                                            >
                                              <button
                                                aria-controls="mui-100000"
                                                aria-haspopup="true"
                                                aria-label="Menu"
                                                class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                id="mui-100000"
                                                tabindex="-1"
                                                title="Menu"
                                                type="button"
                                              >
                                                <span
                                                  class="MuiIconButton-label"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                    />
                                                  </svg>
                                                </span>
                                                <span
                                                  class="MuiTouchRipple-root"
                                                />
                                              </button>
                                            </div>
                                          </div>
                                          <div
                                            class="MuiDataGrid-columnSeparator"
                                            style="min-height: 56px; opacity: 1;"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M11 19V5h2v14z"
                                              />
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      style="overflow: visible; height: 0px; width: 0px;"
                                    >
                                      <div
                                        class="MuiDataGrid-windowContainer"
                                        style="width: 0px; height: 0px;"
                                      >
                                        <div
                                          class="MuiDataGrid-window"
                                          style="top: 56px; overflow-y: auto;"
                                        >
                                          <div
                                            class="MuiDataGrid-dataContainer"
                                            style="min-width: 100px; min-height: 52px;"
                                          >
                                            <div
                                              class="MuiDataGrid-viewport"
                                              style="min-width: 0; max-width: 0; max-height: 0;"
                                            >
                                              <div
                                                class="MuiDataGrid-renderingZone"
                                                style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                              >
                                                <div
                                                  aria-rowindex="2"
                                                  aria-selected="false"
                                                  class="Mui-even MuiDataGrid-row"
                                                  data-id="1"
                                                  data-rowindex="0"
                                                  role="row"
                                                  style="max-height: 52px; min-height: 52px;"
                                                >
                                                  <div
                                                    aria-colindex="1"
                                                    class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                                    data-colindex="0"
                                                    data-field="price"
                                                    data-mode="view"
                                                    data-rowindex="0"
                                                    data-rowselected="false"
                                                    data-value="1.2"
                                                    role="cell"
                                                    style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                                    tabindex="-1"
                                                  >
                                                    R$ 1,20
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="Mui-resizeTriggers"
                                    >
                                      <div
                                        class="expand-trigger"
                                      >
                                        <div
                                          style="width: 1px; height: 1px;"
                                        />
                                      </div>
                                      <div
                                        class="contract-trigger"
                                      />
                                    </div>
                                  </div>
                                  <div>
                                    <div
                                      class="MuiDataGrid-footerContainer"
                                    >
                                      <div />
                                      <div
                                        class="MuiTablePagination-root"
                                      >
                                        <div
                                          class="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                        >
                                          <div
                                            class="MuiTablePagination-spacer"
                                          />
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                            id="mui-100000"
                                          >
                                            Linhas por página:
                                          </p>
                                          <div
                                            class="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                          >
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-100000 mui-100000"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-100000"
                                              role="button"
                                              tabindex="0"
                                            >
                                              100
                                            </div>
                                            <input
                                              aria-hidden="true"
                                              class="MuiSelect-nativeInput"
                                              tabindex="-1"
                                              value="100"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              class="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </div>
                                          <p
                                            class="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                          >
                                            1-1 de 1
                                          </p>
                                          <div
                                            class="MuiTablePagination-actions"
                                          >
                                            <button
                                              aria-label="Página anterior"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Página anterior"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                            <button
                                              aria-label="Próxima página"
                                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                              disabled=""
                                              tabindex="-1"
                                              title="Próxima página"
                                              type="button"
                                            >
                                              <span
                                                class="MuiIconButton-label"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                  />
                                                </svg>
                                              </span>
                                            </button>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                              "scroll": [Function],
                              "scrollToIndexes": [Function],
                              "selectRow": [Function],
                              "selectRows": [Function],
                              "setCellFocus": [Function],
                              "setCellMode": [Function],
                              "setCellValue": [Function],
                              "setColumnHeaderFocus": [Function],
                              "setColumnIndex": [Function],
                              "setColumnVisibility": [Function],
                              "setColumnWidth": [Function],
                              "setDensity": [Function],
                              "setEditCellProps": [Function],
                              "setEditRowsModel": [Function],
                              "setFilterModel": [Function],
                              "setPage": [Function],
                              "setPageSize": [Function],
                              "setRows": [Function],
                              "setSelectionModel": [Function],
                              "setSortModel": [Function],
                              "setState": [Function],
                              "showColumnMenu": [Function],
                              "showError": [Function],
                              "showFilterPanel": [Function],
                              "showPreferences": [Function],
                              "sortColumn": [Function],
                              "state": Object {
                                "columnMenu": Object {
                                  "open": false,
                                },
                                "columnReorder": Object {
                                  "dragCol": "",
                                },
                                "columnResize": Object {
                                  "resizingColumnField": "",
                                },
                                "columns": Object {
                                  "all": Array [
                                    "price",
                                  ],
                                  "lookup": Object {
                                    "price": Object {
                                      "align": "right",
                                      "cellClassName": "font-tabular-nums",
                                      "field": "price",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "headerName": "Price",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                  },
                                },
                                "containerSizes": Object {
                                  "dataContainerSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "isVirtualized": false,
                                  "lastPage": 1,
                                  "renderingZone": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "renderingZonePageSize": 1,
                                  "renderingZoneScrollHeight": 52,
                                  "totalSizes": Object {
                                    "height": 52,
                                    "width": 100,
                                  },
                                  "viewportPageSize": 1,
                                  "virtualRowsCount": 1,
                                  "windowSizes": Object {
                                    "height": 0,
                                    "width": 0,
                                  },
                                },
                                "density": Object {
                                  "headerHeight": 56,
                                  "rowHeight": 52,
                                  "value": "standard",
                                },
                                "editRows": Object {},
                                "error": undefined,
                                "filter": Object {
                                  "items": Array [],
                                  "linkOperator": "and",
                                },
                                "focus": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "isScrolling": false,
                                "options": Object {
                                  "checkboxSelectionVisibleOnly": false,
                                  "classes": Object {
                                    "cell": "MuiDataGrid-cell",
                                    "columnHeader": "MuiDataGrid-columnHeader",
                                    "root": "MuiDataGrid-root",
                                    "row": "MuiDataGrid-row",
                                  },
                                  "columnBuffer": 2,
                                  "columnTypes": Object {
                                    "__default__": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                    "boolean": Object {
                                      "align": "center",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "center",
                                      "hide": false,
                                      "renderCell": [Function],
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "boolean",
                                      "width": 100,
                                    },
                                    "date": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "date",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "date",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "dateTime": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "after",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrAfter",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "before",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "datetime-local",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "onOrBefore",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "dateTime",
                                      "valueFormatter": [Function],
                                      "width": 100,
                                    },
                                    "number": Object {
                                      "align": "right",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "=",
                                          "value": "=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "!=",
                                          "value": "!=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">",
                                          "value": ">",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": ">=",
                                          "value": ">=",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<",
                                          "value": "<",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "number",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "label": "<=",
                                          "value": "<=",
                                        },
                                      ],
                                      "filterable": true,
                                      "headerAlign": "right",
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "number",
                                      "valueFormatter": [Function],
                                      "valueParser": [Function],
                                      "width": 100,
                                    },
                                    "singleSelect": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "is",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "InputComponentProps": Object {
                                            "type": "singleSelect",
                                          },
                                          "getApplyFilterFn": [Function],
                                          "value": "not",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "singleSelect",
                                      "width": 100,
                                    },
                                    "string": Object {
                                      "align": "left",
                                      "filterOperators": Array [
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "contains",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "equals",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "startsWith",
                                        },
                                        Object {
                                          "InputComponent": [Function],
                                          "getApplyFilterFn": [Function],
                                          "value": "endsWith",
                                        },
                                      ],
                                      "filterable": true,
                                      "hide": false,
                                      "renderEditCell": [Function],
                                      "resizable": true,
                                      "sortComparator": [Function],
                                      "sortable": true,
                                      "type": "string",
                                      "width": 100,
                                    },
                                  },
                                  "columns": Array [
                                    Object {
                                      "cellClassName": "font-tabular-nums",
                                      "field": "price",
                                      "headerName": "Price",
                                      "type": "number",
                                      "valueFormatter": [Function],
                                    },
                                  ],
                                  "density": "standard",
                                  "disableColumnReorder": true,
                                  "disableColumnResize": true,
                                  "disableMultipleColumnsFiltering": true,
                                  "disableMultipleColumnsSorting": true,
                                  "disableMultipleSelection": true,
                                  "filterMode": "client",
                                  "headerHeight": 56,
                                  "isRtl": false,
                                  "licenseStatus": "Valid",
                                  "localeText": Object {
                                    "MuiTablePagination": Object {
                                      "backIconButtonText": "Página anterior",
                                      "labelDisplayedRows": [Function],
                                      "labelRowsPerPage": "Linhas por página:",
                                      "nextIconButtonText": "Próxima página",
                                    },
                                    "booleanCellFalseLabel": "não",
                                    "booleanCellTrueLabel": "sim",
                                    "checkboxSelectionHeaderName": "Seleção",
                                    "columnHeaderFiltersLabel": "Exibir Filtros",
                                    "columnHeaderFiltersTooltipActive": [Function],
                                    "columnHeaderSortIconLabel": "Ordenar",
                                    "columnMenuFilter": "Filtrar",
                                    "columnMenuHideColumn": "Ocultar",
                                    "columnMenuLabel": "Menu",
                                    "columnMenuShowColumns": "Exibir colunas",
                                    "columnMenuSortAsc": "Ordenar do menor para o maior",
                                    "columnMenuSortDesc": "Ordenar do maior para o menor",
                                    "columnMenuUnsort": "Desfazer ordenação",
                                    "columnsPanelDragIconLabel": "Reordenar Coluna",
                                    "columnsPanelHideAllButton": "Ocultar todas",
                                    "columnsPanelShowAllButton": "Mostrar todas",
                                    "columnsPanelTextFieldLabel": "Localizar coluna",
                                    "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                    "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                    "filterOperatorAfter": "após",
                                    "filterOperatorBefore": "antes de",
                                    "filterOperatorContains": "contém",
                                    "filterOperatorEndsWith": "termina com",
                                    "filterOperatorEquals": "é igual a",
                                    "filterOperatorIs": "é",
                                    "filterOperatorNot": "não é",
                                    "filterOperatorOnOrAfter": "em ou após",
                                    "filterOperatorOnOrBefore": "em ou antes de",
                                    "filterOperatorStartsWith": "começa com",
                                    "filterPanelAddFilter": "Adicionar filtro",
                                    "filterPanelColumns": "Colunas",
                                    "filterPanelDeleteIconLabel": "Excluir",
                                    "filterPanelInputLabel": "Valor",
                                    "filterPanelInputPlaceholder": "Filtrar valor",
                                    "filterPanelOperatorAnd": "E",
                                    "filterPanelOperatorOr": "Ou",
                                    "filterPanelOperators": "Operadores",
                                    "filterValueAny": "any",
                                    "filterValueFalse": "false",
                                    "filterValueTrue": "true",
                                    "footerRowSelected": [Function],
                                    "footerTotalRows": "Total de linhas:",
                                    "footerTotalVisibleRows": [Function],
                                    "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                    "noRowsLabel": "Nenhuma linha",
                                    "toolbarColumns": "Colunas",
                                    "toolbarColumnsLabel": "Exibir seletor de colunas",
                                    "toolbarDensity": "Densidade",
                                    "toolbarDensityComfortable": "Confortável",
                                    "toolbarDensityCompact": "Compacto",
                                    "toolbarDensityLabel": "Densidade",
                                    "toolbarDensityStandard": "Padrão",
                                    "toolbarExport": "Exportar",
                                    "toolbarExportCSV": "Baixar como CSV",
                                    "toolbarExportLabel": "Exportar",
                                    "toolbarFilters": "Filtros",
                                    "toolbarFiltersLabel": "Exibir filtros",
                                    "toolbarFiltersTooltipActive": [Function],
                                    "toolbarFiltersTooltipHide": "Ocultar filtros",
                                    "toolbarFiltersTooltipShow": "Exibir filtros",
                                  },
                                  "logLevel": "warn",
                                  "logger": BufferedConsole {
                                    "Console": [Function],
                                    "_buffer": Array [],
                                    "_counters": Object {},
                                    "_groupDepth": 0,
                                    "_timers": Object {},
                                    "assert": [Function],
                                    "clear": [Function],
                                    "count": [Function],
                                    "countReset": [Function],
                                    "debug": [Function],
                                    "dir": [Function],
                                    "dirxml": [Function],
                                    "error": [Function],
                                    "group": [Function],
                                    "groupCollapsed": [Function],
                                    "groupEnd": [Function],
                                    "info": [Function],
                                    "log": [Function],
                                    "table": [Function],
                                    "time": [Function],
                                    "timeEnd": [Function],
                                    "timeLog": [Function],
                                    "trace": [Function],
                                    "warn": [Function],
                                  },
                                  "pageSize": 100,
                                  "pagination": true,
                                  "paginationMode": "client",
                                  "rowHeight": 52,
                                  "rows": Array [
                                    Object {
                                      "id": 1,
                                      "price": 1.2,
                                    },
                                  ],
                                  "rowsPerPageOptions": Array [
                                    25,
                                    50,
                                    100,
                                  ],
                                  "scrollEndThreshold": 80,
                                  "scrollbarSize": 0,
                                  "sortingMode": "client",
                                  "sortingOrder": Array [
                                    "asc",
                                    "desc",
                                    null,
                                  ],
                                  "theme": Object {
                                    "breakpoints": Object {
                                      "between": [Function],
                                      "down": [Function],
                                      "keys": Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ],
                                      "only": [Function],
                                      "up": [Function],
                                      "values": Object {
                                        "lg": 1280,
                                        "md": 960,
                                        "sm": 600,
                                        "xl": 1920,
                                        "xs": 0,
                                      },
                                      "width": [Function],
                                    },
                                    "direction": "ltr",
                                    "mixins": Object {
                                      "gutters": [Function],
                                      "toolbar": Object {
                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                          "minHeight": 48,
                                        },
                                        "@media (min-width:600px)": Object {
                                          "minHeight": 64,
                                        },
                                        "minHeight": 56,
                                      },
                                    },
                                    "overrides": Object {},
                                    "palette": Object {
                                      "action": Object {
                                        "activatedOpacity": 0.12,
                                        "active": "rgba(0, 0, 0, 0.54)",
                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                        "disabledOpacity": 0.38,
                                        "focus": "rgba(0, 0, 0, 0.12)",
                                        "focusOpacity": 0.12,
                                        "hover": "rgba(0, 0, 0, 0.04)",
                                        "hoverOpacity": 0.04,
                                        "selected": "rgba(0, 0, 0, 0.08)",
                                        "selectedOpacity": 0.08,
                                      },
                                      "augmentColor": [Function],
                                      "background": Object {
                                        "default": "#fafafa",
                                        "paper": "#fff",
                                      },
                                      "common": Object {
                                        "black": "#000",
                                        "white": "#fff",
                                      },
                                      "contrastThreshold": 3,
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "error": Object {
                                        "contrastText": "#fff",
                                        "dark": "#d32f2f",
                                        "light": "#e57373",
                                        "main": "#f44336",
                                      },
                                      "getContrastText": [Function],
                                      "grey": Object {
                                        "100": "#f5f5f5",
                                        "200": "#eeeeee",
                                        "300": "#e0e0e0",
                                        "400": "#bdbdbd",
                                        "50": "#fafafa",
                                        "500": "#9e9e9e",
                                        "600": "#757575",
                                        "700": "#616161",
                                        "800": "#424242",
                                        "900": "#212121",
                                        "A100": "#d5d5d5",
                                        "A200": "#aaaaaa",
                                        "A400": "#303030",
                                        "A700": "#616161",
                                      },
                                      "info": Object {
                                        "contrastText": "#fff",
                                        "dark": "#1976d2",
                                        "light": "#64b5f6",
                                        "main": "#2196f3",
                                      },
                                      "primary": Object {
                                        "contrastText": "#fff",
                                        "dark": "rgb(17, 82, 147)",
                                        "light": "rgb(71, 145, 219)",
                                        "main": "#1976d2",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#c51162",
                                        "light": "#ff4081",
                                        "main": "#f50057",
                                      },
                                      "success": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#388e3c",
                                        "light": "#81c784",
                                        "main": "#4caf50",
                                      },
                                      "text": Object {
                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                        "hint": "rgba(0, 0, 0, 0.38)",
                                        "primary": "rgba(0, 0, 0, 0.87)",
                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                      },
                                      "tonalOffset": 0.2,
                                      "type": "light",
                                      "warning": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#f57c00",
                                        "light": "#ffb74d",
                                        "main": "#ff9800",
                                      },
                                    },
                                    "props": Object {
                                      "MuiDataGrid": Object {
                                        "localeText": Object {
                                          "MuiTablePagination": Object {
                                            "backIconButtonText": "Página anterior",
                                            "labelDisplayedRows": [Function],
                                            "labelRowsPerPage": "Linhas por página:",
                                            "nextIconButtonText": "Próxima página",
                                          },
                                          "booleanCellFalseLabel": "não",
                                          "booleanCellTrueLabel": "sim",
                                          "checkboxSelectionHeaderName": "Seleção",
                                          "columnHeaderFiltersLabel": "Exibir Filtros",
                                          "columnHeaderFiltersTooltipActive": [Function],
                                          "columnHeaderSortIconLabel": "Ordenar",
                                          "columnMenuFilter": "Filtrar",
                                          "columnMenuHideColumn": "Ocultar",
                                          "columnMenuLabel": "Menu",
                                          "columnMenuShowColumns": "Exibir colunas",
                                          "columnMenuSortAsc": "Ordenar do menor para o maior",
                                          "columnMenuSortDesc": "Ordenar do maior para o menor",
                                          "columnMenuUnsort": "Desfazer ordenação",
                                          "columnsPanelDragIconLabel": "Reordenar Coluna",
                                          "columnsPanelHideAllButton": "Ocultar todas",
                                          "columnsPanelShowAllButton": "Mostrar todas",
                                          "columnsPanelTextFieldLabel": "Localizar coluna",
                                          "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                          "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                          "filterOperatorAfter": "após",
                                          "filterOperatorBefore": "antes de",
                                          "filterOperatorContains": "contém",
                                          "filterOperatorEndsWith": "termina com",
                                          "filterOperatorEquals": "é igual a",
                                          "filterOperatorIs": "é",
                                          "filterOperatorNot": "não é",
                                          "filterOperatorOnOrAfter": "em ou após",
                                          "filterOperatorOnOrBefore": "em ou antes de",
                                          "filterOperatorStartsWith": "começa com",
                                          "filterPanelAddFilter": "Adicionar filtro",
                                          "filterPanelColumns": "Colunas",
                                          "filterPanelDeleteIconLabel": "Excluir",
                                          "filterPanelInputLabel": "Valor",
                                          "filterPanelInputPlaceholder": "Filtrar valor",
                                          "filterPanelOperatorAnd": "E",
                                          "filterPanelOperatorOr": "Ou",
                                          "filterPanelOperators": "Operadores",
                                          "footerRowSelected": [Function],
                                          "footerTotalRows": "Total de linhas:",
                                          "footerTotalVisibleRows": [Function],
                                          "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                          "noRowsLabel": "Nenhuma linha",
                                          "toolbarColumns": "Colunas",
                                          "toolbarColumnsLabel": "Exibir seletor de colunas",
                                          "toolbarDensity": "Densidade",
                                          "toolbarDensityComfortable": "Confortável",
                                          "toolbarDensityCompact": "Compacto",
                                          "toolbarDensityLabel": "Densidade",
                                          "toolbarDensityStandard": "Padrão",
                                          "toolbarExport": "Exportar",
                                          "toolbarExportCSV": "Baixar como CSV",
                                          "toolbarExportLabel": "Exportar",
                                          "toolbarFilters": "Filtros",
                                          "toolbarFiltersLabel": "Exibir filtros",
                                          "toolbarFiltersTooltipActive": [Function],
                                          "toolbarFiltersTooltipHide": "Ocultar filtros",
                                          "toolbarFiltersTooltipShow": "Exibir filtros",
                                        },
                                      },
                                    },
                                    "shadows": Array [
                                      "none",
                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                    ],
                                    "shape": Object {
                                      "borderRadius": 4,
                                    },
                                    "spacing": [Function],
                                    "transitions": Object {
                                      "create": [Function],
                                      "duration": Object {
                                        "complex": 375,
                                        "enteringScreen": 225,
                                        "leavingScreen": 195,
                                        "short": 250,
                                        "shorter": 200,
                                        "shortest": 150,
                                        "standard": 300,
                                      },
                                      "easing": Object {
                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                      },
                                      "getAutoHeightDuration": [Function],
                                    },
                                    "typography": Object {
                                      "body1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.5,
                                      },
                                      "body2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.01071em",
                                        "lineHeight": 1.43,
                                      },
                                      "button": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.02857em",
                                        "lineHeight": 1.75,
                                        "textTransform": "uppercase",
                                      },
                                      "caption": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.03333em",
                                        "lineHeight": 1.66,
                                      },
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": 14,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.01562em",
                                        "lineHeight": 1.167,
                                      },
                                      "h2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.00833em",
                                        "lineHeight": 1.2,
                                      },
                                      "h3": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.167,
                                      },
                                      "h4": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00735em",
                                        "lineHeight": 1.235,
                                      },
                                      "h5": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.334,
                                      },
                                      "h6": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.25rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.0075em",
                                        "lineHeight": 1.6,
                                      },
                                      "htmlFontSize": 16,
                                      "overline": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.08333em",
                                        "lineHeight": 2.66,
                                        "textTransform": "uppercase",
                                      },
                                      "pxToRem": [Function],
                                      "round": [Function],
                                      "subtitle1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.75,
                                      },
                                      "subtitle2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.00714em",
                                        "lineHeight": 1.57,
                                      },
                                    },
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "drawer": 1200,
                                      "mobileStepper": 1000,
                                      "modal": 1300,
                                      "snackbar": 1400,
                                      "speedDial": 1050,
                                      "tooltip": 1500,
                                    },
                                    Symbol(mui.nested): false,
                                  },
                                },
                                "pagination": Object {
                                  "page": 0,
                                  "pageCount": 1,
                                  "pageSize": 100,
                                  "paginationMode": "client",
                                  "rowCount": 1,
                                },
                                "preferencePanel": Object {
                                  "open": false,
                                },
                                "rendering": Object {
                                  "realScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "renderContext": Object {
                                    "firstColIdx": 0,
                                    "firstRowIdx": 0,
                                    "lastColIdx": 0,
                                    "lastRowIdx": 1,
                                    "leftEmptyWidth": 0,
                                    "page": 0,
                                    "pageSize": 100,
                                    "paginationCurrentPage": 0,
                                    "rightEmptyWidth": 0,
                                  },
                                  "renderedSizes": Object {
                                    "dataContainerSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "isVirtualized": false,
                                    "lastPage": 1,
                                    "renderingZone": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "renderingZonePageSize": 1,
                                    "renderingZoneScrollHeight": 52,
                                    "totalSizes": Object {
                                      "height": 52,
                                      "width": 100,
                                    },
                                    "viewportPageSize": 1,
                                    "virtualRowsCount": 1,
                                    "windowSizes": Object {
                                      "height": 0,
                                      "width": 0,
                                    },
                                  },
                                  "renderingZoneScroll": Object {
                                    "left": 0,
                                    "top": 0,
                                  },
                                  "virtualPage": 0,
                                  "virtualRowsCount": 0,
                                },
                                "rows": Object {
                                  "allRows": Array [
                                    1,
                                  ],
                                  "idRowsLookup": Object {
                                    "1": Object {
                                      "id": 1,
                                      "price": 1.2,
                                    },
                                  },
                                  "totalRowCount": 1,
                                },
                                "scrollBar": Object {
                                  "hasScrollX": true,
                                  "hasScrollY": true,
                                  "scrollBarSize": Object {
                                    "x": 0,
                                    "y": 0,
                                  },
                                },
                                "selection": Object {},
                                "sorting": Object {
                                  "sortModel": Array [],
                                  "sortedRows": Array [
                                    1,
                                  ],
                                },
                                "tabIndex": Object {
                                  "cell": null,
                                  "columnHeader": null,
                                },
                                "viewportSizes": Object {
                                  "height": 0,
                                  "width": 0,
                                },
                                "visibleRows": Object {
                                  "visibleRowsLookup": Object {},
                                },
                              },
                              "subscribeEvent": [Function],
                              "toggleColumnMenu": [Function],
                              "updateColumn": [Function],
                              "updateColumns": [Function],
                              "updateRows": [Function],
                              "updateViewport": [Function],
                              "upsertFilter": [Function],
                              "warnOnce": false,
                              "windowRef": Object {
                                "current": <div
                                  class="MuiDataGrid-window"
                                  style="top: 56px; overflow-y: auto;"
                                >
                                  <div
                                    class="MuiDataGrid-dataContainer"
                                    style="min-width: 100px; min-height: 52px;"
                                  >
                                    <div
                                      class="MuiDataGrid-viewport"
                                      style="min-width: 0; max-width: 0; max-height: 0;"
                                    >
                                      <div
                                        class="MuiDataGrid-renderingZone"
                                        style="max-height: 52px; width: 100px; transform: translate3d(-0px, -0px, 0);"
                                      >
                                        <div
                                          aria-rowindex="2"
                                          aria-selected="false"
                                          class="Mui-even MuiDataGrid-row"
                                          data-id="1"
                                          data-rowindex="0"
                                          role="row"
                                          style="max-height: 52px; min-height: 52px;"
                                        >
                                          <div
                                            aria-colindex="1"
                                            class="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                            data-colindex="0"
                                            data-field="price"
                                            data-mode="view"
                                            data-rowindex="0"
                                            data-rowselected="false"
                                            data-value="1.2"
                                            role="cell"
                                            style="min-width: 100px; max-width: 100px; line-height: 51px; min-height: 52px; max-height: 52px;"
                                            tabindex="-1"
                                          >
                                            R$ 1,20
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>,
                              },
                            },
                          }
                        }
                        hasError={false}
                        logger={
                          Object {
                            "debug": [Function],
                            "error": [Function],
                            "info": [Function],
                            "warn": [Function],
                          }
                        }
                        render={[Function]}
                      >
                        <Es>
                          <div>
                            <ForwardRef>
                              <div>
                                <ForwardRef>
                                  <ForwardRef
                                    open={false}
                                  >
                                    <ForwardRef(Popper)
                                      anchorEl={
                                        <div
                                          class="MuiDataGrid-columnsContainer"
                                          style="min-height: 56px; max-height: 56px; line-height: 56px;"
                                        >
                                          <div
                                            aria-rowindex="1"
                                            class="MuiDataGrid-columnHeaderWrapper scroll"
                                            role="row"
                                            style="transform: translate3d(-0px, 0, 0); min-width: 100px;"
                                          >
                                            <div
                                              aria-colindex="1"
                                              class="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                              data-field="price"
                                              role="columnheader"
                                              style="width: 100px; min-width: 100px; max-width: 100px;"
                                              tabindex="0"
                                            >
                                              <div
                                                class="MuiDataGrid-columnHeaderDraggableContainer"
                                                draggable="false"
                                              >
                                                <div
                                                  class="MuiDataGrid-columnHeaderTitleContainer"
                                                >
                                                  <div
                                                    class="MuiDataGrid-columnHeaderTitle"
                                                    title=""
                                                  >
                                                    Price
                                                  </div>
                                                  <div
                                                    class="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <button
                                                      aria-label="Ordenar"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                      tabindex="-1"
                                                      title="Ordenar"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiDataGrid-menuIcon"
                                                >
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDataGrid-columnSeparator"
                                                style="min-height: 56px; opacity: 1;"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  class="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M11 19V5h2v14z"
                                                  />
                                                </svg>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      className="MuiGridPanel-root"
                                      modifiers={
                                        Object {
                                          "flip": Object {
                                            "enabled": false,
                                          },
                                        }
                                      }
                                      open={false}
                                      placement="bottom-start"
                                    />
                                  </ForwardRef>
                                </ForwardRef>
                              </div>
                            </ForwardRef>
                          </div>
                        </Es>
                        <Ss>
                          <hs>
                            <div
                              className="MuiDataGrid-main"
                            >
                              <ws />
                              <ni
                                licenseStatus="Valid"
                              />
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-columnsContainer"
                                  style={
                                    Object {
                                      "lineHeight": "56px",
                                      "maxHeight": 56,
                                      "minHeight": 56,
                                    }
                                  }
                                >
                                  <ForwardRef>
                                    <Memo()
                                      scrollDirection="left"
                                    />
                                    <div
                                      aria-rowindex={1}
                                      className="MuiDataGrid-columnHeaderWrapper scroll"
                                      role="row"
                                      style={
                                        Object {
                                          "minWidth": 100,
                                        }
                                      }
                                    >
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                      <ia
                                        columns={
                                          Array [
                                            Object {
                                              "align": "right",
                                              "cellClassName": "font-tabular-nums",
                                              "field": "price",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "=",
                                                  "value": "=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "!=",
                                                  "value": "!=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">",
                                                  "value": ">",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">=",
                                                  "value": ">=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<",
                                                  "value": "<",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<=",
                                                  "value": "<=",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerAlign": "right",
                                              "headerName": "Price",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "number",
                                              "valueFormatter": [Function],
                                              "valueParser": [Function],
                                              "width": 100,
                                            },
                                          ]
                                        }
                                      >
                                        <Zn
                                          colIndex={0}
                                          column={
                                            Object {
                                              "align": "right",
                                              "cellClassName": "font-tabular-nums",
                                              "field": "price",
                                              "filterOperators": Array [
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "=",
                                                  "value": "=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "!=",
                                                  "value": "!=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">",
                                                  "value": ">",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": ">=",
                                                  "value": ">=",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<",
                                                  "value": "<",
                                                },
                                                Object {
                                                  "InputComponent": [Function],
                                                  "InputComponentProps": Object {
                                                    "type": "number",
                                                  },
                                                  "getApplyFilterFn": [Function],
                                                  "label": "<=",
                                                  "value": "<=",
                                                },
                                              ],
                                              "filterable": true,
                                              "headerAlign": "right",
                                              "headerName": "Price",
                                              "hide": false,
                                              "renderEditCell": [Function],
                                              "resizable": true,
                                              "sortComparator": [Function],
                                              "sortable": true,
                                              "type": "number",
                                              "valueFormatter": [Function],
                                              "valueParser": [Function],
                                              "width": 100,
                                            }
                                          }
                                          columnMenuOpen={false}
                                          hasFocus={false}
                                          headerHeight={56}
                                          isDragging={false}
                                          isResizing={false}
                                          key="price"
                                          options={
                                            Object {
                                              "checkboxSelectionVisibleOnly": false,
                                              "classes": Object {
                                                "cell": "MuiDataGrid-cell",
                                                "columnHeader": "MuiDataGrid-columnHeader",
                                                "root": "MuiDataGrid-root",
                                                "row": "MuiDataGrid-row",
                                              },
                                              "columnBuffer": 2,
                                              "columnTypes": Object {
                                                "__default__": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                                "boolean": Object {
                                                  "align": "center",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "center",
                                                  "hide": false,
                                                  "renderCell": [Function],
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "boolean",
                                                  "width": 100,
                                                },
                                                "date": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "date",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "date",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "dateTime": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "after",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrAfter",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "before",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "datetime-local",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "onOrBefore",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "dateTime",
                                                  "valueFormatter": [Function],
                                                  "width": 100,
                                                },
                                                "number": Object {
                                                  "align": "right",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "=",
                                                      "value": "=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "!=",
                                                      "value": "!=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">",
                                                      "value": ">",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": ">=",
                                                      "value": ">=",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<",
                                                      "value": "<",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "number",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "label": "<=",
                                                      "value": "<=",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "headerAlign": "right",
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                  "valueParser": [Function],
                                                  "width": 100,
                                                },
                                                "singleSelect": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "is",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "InputComponentProps": Object {
                                                        "type": "singleSelect",
                                                      },
                                                      "getApplyFilterFn": [Function],
                                                      "value": "not",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "singleSelect",
                                                  "width": 100,
                                                },
                                                "string": Object {
                                                  "align": "left",
                                                  "filterOperators": Array [
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "contains",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "equals",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "startsWith",
                                                    },
                                                    Object {
                                                      "InputComponent": [Function],
                                                      "getApplyFilterFn": [Function],
                                                      "value": "endsWith",
                                                    },
                                                  ],
                                                  "filterable": true,
                                                  "hide": false,
                                                  "renderEditCell": [Function],
                                                  "resizable": true,
                                                  "sortComparator": [Function],
                                                  "sortable": true,
                                                  "type": "string",
                                                  "width": 100,
                                                },
                                              },
                                              "columns": Array [
                                                Object {
                                                  "cellClassName": "font-tabular-nums",
                                                  "field": "price",
                                                  "headerName": "Price",
                                                  "type": "number",
                                                  "valueFormatter": [Function],
                                                },
                                              ],
                                              "density": "standard",
                                              "disableColumnReorder": true,
                                              "disableColumnResize": true,
                                              "disableMultipleColumnsFiltering": true,
                                              "disableMultipleColumnsSorting": true,
                                              "disableMultipleSelection": true,
                                              "filterMode": "client",
                                              "headerHeight": 56,
                                              "isRtl": false,
                                              "licenseStatus": "Valid",
                                              "localeText": Object {
                                                "MuiTablePagination": Object {
                                                  "backIconButtonText": "Página anterior",
                                                  "labelDisplayedRows": [Function],
                                                  "labelRowsPerPage": "Linhas por página:",
                                                  "nextIconButtonText": "Próxima página",
                                                },
                                                "booleanCellFalseLabel": "não",
                                                "booleanCellTrueLabel": "sim",
                                                "checkboxSelectionHeaderName": "Seleção",
                                                "columnHeaderFiltersLabel": "Exibir Filtros",
                                                "columnHeaderFiltersTooltipActive": [Function],
                                                "columnHeaderSortIconLabel": "Ordenar",
                                                "columnMenuFilter": "Filtrar",
                                                "columnMenuHideColumn": "Ocultar",
                                                "columnMenuLabel": "Menu",
                                                "columnMenuShowColumns": "Exibir colunas",
                                                "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                "columnMenuUnsort": "Desfazer ordenação",
                                                "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                "columnsPanelHideAllButton": "Ocultar todas",
                                                "columnsPanelShowAllButton": "Mostrar todas",
                                                "columnsPanelTextFieldLabel": "Localizar coluna",
                                                "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                "filterOperatorAfter": "após",
                                                "filterOperatorBefore": "antes de",
                                                "filterOperatorContains": "contém",
                                                "filterOperatorEndsWith": "termina com",
                                                "filterOperatorEquals": "é igual a",
                                                "filterOperatorIs": "é",
                                                "filterOperatorNot": "não é",
                                                "filterOperatorOnOrAfter": "em ou após",
                                                "filterOperatorOnOrBefore": "em ou antes de",
                                                "filterOperatorStartsWith": "começa com",
                                                "filterPanelAddFilter": "Adicionar filtro",
                                                "filterPanelColumns": "Colunas",
                                                "filterPanelDeleteIconLabel": "Excluir",
                                                "filterPanelInputLabel": "Valor",
                                                "filterPanelInputPlaceholder": "Filtrar valor",
                                                "filterPanelOperatorAnd": "E",
                                                "filterPanelOperatorOr": "Ou",
                                                "filterPanelOperators": "Operadores",
                                                "filterValueAny": "any",
                                                "filterValueFalse": "false",
                                                "filterValueTrue": "true",
                                                "footerRowSelected": [Function],
                                                "footerTotalRows": "Total de linhas:",
                                                "footerTotalVisibleRows": [Function],
                                                "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                "noRowsLabel": "Nenhuma linha",
                                                "toolbarColumns": "Colunas",
                                                "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                "toolbarDensity": "Densidade",
                                                "toolbarDensityComfortable": "Confortável",
                                                "toolbarDensityCompact": "Compacto",
                                                "toolbarDensityLabel": "Densidade",
                                                "toolbarDensityStandard": "Padrão",
                                                "toolbarExport": "Exportar",
                                                "toolbarExportCSV": "Baixar como CSV",
                                                "toolbarExportLabel": "Exportar",
                                                "toolbarFilters": "Filtros",
                                                "toolbarFiltersLabel": "Exibir filtros",
                                                "toolbarFiltersTooltipActive": [Function],
                                                "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                "toolbarFiltersTooltipShow": "Exibir filtros",
                                              },
                                              "logLevel": "warn",
                                              "logger": BufferedConsole {
                                                "Console": [Function],
                                                "_buffer": Array [],
                                                "_counters": Object {},
                                                "_groupDepth": 0,
                                                "_timers": Object {},
                                                "assert": [Function],
                                                "clear": [Function],
                                                "count": [Function],
                                                "countReset": [Function],
                                                "debug": [Function],
                                                "dir": [Function],
                                                "dirxml": [Function],
                                                "error": [Function],
                                                "group": [Function],
                                                "groupCollapsed": [Function],
                                                "groupEnd": [Function],
                                                "info": [Function],
                                                "log": [Function],
                                                "table": [Function],
                                                "time": [Function],
                                                "timeEnd": [Function],
                                                "timeLog": [Function],
                                                "trace": [Function],
                                                "warn": [Function],
                                              },
                                              "pageSize": 100,
                                              "pagination": true,
                                              "paginationMode": "client",
                                              "rowHeight": 52,
                                              "rows": Array [
                                                Object {
                                                  "id": 1,
                                                  "price": 1.2,
                                                },
                                              ],
                                              "rowsPerPageOptions": Array [
                                                25,
                                                50,
                                                100,
                                              ],
                                              "scrollEndThreshold": 80,
                                              "scrollbarSize": 0,
                                              "sortingMode": "client",
                                              "sortingOrder": Array [
                                                "asc",
                                                "desc",
                                                null,
                                              ],
                                              "theme": Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1280,
                                                    "md": 960,
                                                    "sm": 600,
                                                    "xl": 1920,
                                                    "xs": 0,
                                                  },
                                                  "width": [Function],
                                                },
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "gutters": [Function],
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "overrides": Object {},
                                                "palette": Object {
                                                  "action": Object {
                                                    "activatedOpacity": 0.12,
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "disabledOpacity": 0.38,
                                                    "focus": "rgba(0, 0, 0, 0.12)",
                                                    "focusOpacity": 0.12,
                                                    "hover": "rgba(0, 0, 0, 0.04)",
                                                    "hoverOpacity": 0.04,
                                                    "selected": "rgba(0, 0, 0, 0.08)",
                                                    "selectedOpacity": 0.08,
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#fafafa",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#d32f2f",
                                                    "light": "#e57373",
                                                    "main": "#f44336",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#d5d5d5",
                                                    "A200": "#aaaaaa",
                                                    "A400": "#303030",
                                                    "A700": "#616161",
                                                  },
                                                  "info": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#1976d2",
                                                    "light": "#64b5f6",
                                                    "main": "#2196f3",
                                                  },
                                                  "primary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "rgb(17, 82, 147)",
                                                    "light": "rgb(71, 145, 219)",
                                                    "main": "#1976d2",
                                                  },
                                                  "secondary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "success": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#388e3c",
                                                    "light": "#81c784",
                                                    "main": "#4caf50",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "type": "light",
                                                  "warning": Object {
                                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                                    "dark": "#f57c00",
                                                    "light": "#ffb74d",
                                                    "main": "#ff9800",
                                                  },
                                                },
                                                "props": Object {
                                                  "MuiDataGrid": Object {
                                                    "localeText": Object {
                                                      "MuiTablePagination": Object {
                                                        "backIconButtonText": "Página anterior",
                                                        "labelDisplayedRows": [Function],
                                                        "labelRowsPerPage": "Linhas por página:",
                                                        "nextIconButtonText": "Próxima página",
                                                      },
                                                      "booleanCellFalseLabel": "não",
                                                      "booleanCellTrueLabel": "sim",
                                                      "checkboxSelectionHeaderName": "Seleção",
                                                      "columnHeaderFiltersLabel": "Exibir Filtros",
                                                      "columnHeaderFiltersTooltipActive": [Function],
                                                      "columnHeaderSortIconLabel": "Ordenar",
                                                      "columnMenuFilter": "Filtrar",
                                                      "columnMenuHideColumn": "Ocultar",
                                                      "columnMenuLabel": "Menu",
                                                      "columnMenuShowColumns": "Exibir colunas",
                                                      "columnMenuSortAsc": "Ordenar do menor para o maior",
                                                      "columnMenuSortDesc": "Ordenar do maior para o menor",
                                                      "columnMenuUnsort": "Desfazer ordenação",
                                                      "columnsPanelDragIconLabel": "Reordenar Coluna",
                                                      "columnsPanelHideAllButton": "Ocultar todas",
                                                      "columnsPanelShowAllButton": "Mostrar todas",
                                                      "columnsPanelTextFieldLabel": "Localizar coluna",
                                                      "columnsPanelTextFieldPlaceholder": "Título da coluna",
                                                      "errorOverlayDefaultLabel": "Ocorreu um erro.",
                                                      "filterOperatorAfter": "após",
                                                      "filterOperatorBefore": "antes de",
                                                      "filterOperatorContains": "contém",
                                                      "filterOperatorEndsWith": "termina com",
                                                      "filterOperatorEquals": "é igual a",
                                                      "filterOperatorIs": "é",
                                                      "filterOperatorNot": "não é",
                                                      "filterOperatorOnOrAfter": "em ou após",
                                                      "filterOperatorOnOrBefore": "em ou antes de",
                                                      "filterOperatorStartsWith": "começa com",
                                                      "filterPanelAddFilter": "Adicionar filtro",
                                                      "filterPanelColumns": "Colunas",
                                                      "filterPanelDeleteIconLabel": "Excluir",
                                                      "filterPanelInputLabel": "Valor",
                                                      "filterPanelInputPlaceholder": "Filtrar valor",
                                                      "filterPanelOperatorAnd": "E",
                                                      "filterPanelOperatorOr": "Ou",
                                                      "filterPanelOperators": "Operadores",
                                                      "footerRowSelected": [Function],
                                                      "footerTotalRows": "Total de linhas:",
                                                      "footerTotalVisibleRows": [Function],
                                                      "noResultsOverlayLabel": "Nenhum resultado encontrado.",
                                                      "noRowsLabel": "Nenhuma linha",
                                                      "toolbarColumns": "Colunas",
                                                      "toolbarColumnsLabel": "Exibir seletor de colunas",
                                                      "toolbarDensity": "Densidade",
                                                      "toolbarDensityComfortable": "Confortável",
                                                      "toolbarDensityCompact": "Compacto",
                                                      "toolbarDensityLabel": "Densidade",
                                                      "toolbarDensityStandard": "Padrão",
                                                      "toolbarExport": "Exportar",
                                                      "toolbarExportCSV": "Baixar como CSV",
                                                      "toolbarExportLabel": "Exportar",
                                                      "toolbarFilters": "Filtros",
                                                      "toolbarFiltersLabel": "Exibir filtros",
                                                      "toolbarFiltersTooltipActive": [Function],
                                                      "toolbarFiltersTooltipHide": "Ocultar filtros",
                                                      "toolbarFiltersTooltipShow": "Exibir filtros",
                                                    },
                                                  },
                                                },
                                                "shadows": Array [
                                                  "none",
                                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1.2,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.167,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.235,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.334,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "round": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "speedDial": 1050,
                                                  "tooltip": 1500,
                                                },
                                                Symbol(mui.nested): false,
                                              },
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <div
                                            aria-colindex={1}
                                            className="MuiDataGrid-columnHeader--alignRight MuiDataGrid-columnHeader--sortable MuiDataGrid-columnHeader--numeric MuiDataGrid-columnHeader"
                                            data-field="price"
                                            key="price"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDoubleClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseOut={[Function]}
                                            onMouseOver={[Function]}
                                            role="columnheader"
                                            style={
                                              Object {
                                                "maxWidth": 100,
                                                "minWidth": 100,
                                                "width": 100,
                                              }
                                            }
                                            tabIndex={0}
                                          >
                                            <div
                                              className="MuiDataGrid-columnHeaderDraggableContainer"
                                              draggable={false}
                                              onDragEnd={[Function]}
                                              onDragEnter={[Function]}
                                              onDragOver={[Function]}
                                              onDragStart={[Function]}
                                            >
                                              <div
                                                className="MuiDataGrid-columnHeaderTitleContainer"
                                              >
                                                <An
                                                  columnWidth={100}
                                                  label="Price"
                                                >
                                                  <WithStyles(ForwardRef(Tooltip))
                                                    title=""
                                                  >
                                                    <ForwardRef(Tooltip)
                                                      classes={
                                                        Object {
                                                          "arrow": "MuiTooltip-arrow",
                                                          "popper": "MuiTooltip-popper",
                                                          "popperArrow": "MuiTooltip-popperArrow",
                                                          "popperInteractive": "MuiTooltip-popperInteractive",
                                                          "tooltip": "MuiTooltip-tooltip",
                                                          "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                          "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                          "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                          "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                          "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                          "touch": "MuiTooltip-touch",
                                                        }
                                                      }
                                                      title=""
                                                    >
                                                      <ForwardRef
                                                        aria-describedby={null}
                                                        className=""
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseOver={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        title=""
                                                      >
                                                        <div
                                                          aria-describedby={null}
                                                          className="MuiDataGrid-columnHeaderTitle"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOver={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          title=""
                                                        >
                                                          Price
                                                        </div>
                                                      </ForwardRef>
                                                      <ForwardRef(Popper)
                                                        anchorEl={
                                                          <div
                                                            class="MuiDataGrid-columnHeaderTitle"
                                                            title=""
                                                          >
                                                            Price
                                                          </div>
                                                        }
                                                        className="MuiTooltip-popper"
                                                        id={null}
                                                        open={false}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "arrow": Object {
                                                                "element": null,
                                                                "enabled": false,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        transition={true}
                                                      />
                                                    </ForwardRef(Tooltip)>
                                                  </WithStyles(ForwardRef(Tooltip))>
                                                </An>
                                                <Bn />
                                                <Memo()>
                                                  <div
                                                    className="MuiDataGrid-iconButtonContainer"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Ordenar"
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Ordenar"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Ordenar"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        size="small"
                                                        tabIndex={-1}
                                                        title="Ordenar"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Ordenar"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          tabIndex={-1}
                                                          title="Ordenar"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Ordenar"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={false}
                                                            focusRipple={true}
                                                            tabIndex={-1}
                                                            title="Ordenar"
                                                          >
                                                            <button
                                                              aria-label="Ordenar"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Ordenar"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <Memo()
                                                                  className="MuiDataGrid-sortIcon"
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(ArrowUpwardIcon)
                                                                    className="MuiDataGrid-sortIcon"
                                                                    fontSize="small"
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiDataGrid-sortIcon"
                                                                      fontSize="small"
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiDataGrid-sortIcon"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        fontSize="small"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiDataGrid-sortIcon MuiSvgIcon-fontSizeSmall"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(ArrowUpwardIcon)>
                                                                </Memo()>
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={true}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={true}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </Memo()>
                                              </div>
                                              <Memo()
                                                column={
                                                  Object {
                                                    "align": "right",
                                                    "cellClassName": "font-tabular-nums",
                                                    "field": "price",
                                                    "filterOperators": Array [
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "=",
                                                        "value": "=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "!=",
                                                        "value": "!=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": ">",
                                                        "value": ">",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": ">=",
                                                        "value": ">=",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "<",
                                                        "value": "<",
                                                      },
                                                      Object {
                                                        "InputComponent": [Function],
                                                        "InputComponentProps": Object {
                                                          "type": "number",
                                                        },
                                                        "getApplyFilterFn": [Function],
                                                        "label": "<=",
                                                        "value": "<=",
                                                      },
                                                    ],
                                                    "filterable": true,
                                                    "headerAlign": "right",
                                                    "headerName": "Price",
                                                    "hide": false,
                                                    "renderEditCell": [Function],
                                                    "resizable": true,
                                                    "sortComparator": [Function],
                                                    "sortable": true,
                                                    "type": "number",
                                                    "valueFormatter": [Function],
                                                    "valueParser": [Function],
                                                    "width": 100,
                                                  }
                                                }
                                                columnMenuButtonId="mui-100000"
                                                columnMenuId="mui-100000"
                                                iconButtonRef={
                                                  Object {
                                                    "current": <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>,
                                                  }
                                                }
                                                open={false}
                                              >
                                                <div
                                                  className="MuiDataGrid-menuIcon"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    className="MuiDataGrid-menuIconButton"
                                                    id="mui-100000"
                                                    onClick={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                    title="Menu"
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      className="MuiDataGrid-menuIconButton"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      id="mui-100000"
                                                      onClick={[Function]}
                                                      size="small"
                                                      tabIndex={-1}
                                                      title="Menu"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-controls="mui-100000"
                                                        aria-haspopup="true"
                                                        aria-label="Menu"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        id="mui-100000"
                                                        onClick={[Function]}
                                                        tabIndex={-1}
                                                        title="Menu"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-controls="mui-100000"
                                                          aria-haspopup="true"
                                                          aria-label="Menu"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusRipple={true}
                                                          id="mui-100000"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Menu"
                                                        >
                                                          <button
                                                            aria-controls="mui-100000"
                                                            aria-haspopup="true"
                                                            aria-label="Menu"
                                                            className="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                            disabled={false}
                                                            id="mui-100000"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={-1}
                                                            title="Menu"
                                                            type="button"
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(TripleDotsVerticalIcon)
                                                                fontSize="small"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  fontSize="small"
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    fontSize="small"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(TripleDotsVerticalIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </Memo()>
                                            </div>
                                            <Memo()
                                              height={56}
                                              onMouseDown={[Function]}
                                              resizable={false}
                                              resizing={false}
                                            >
                                              <div
                                                className="MuiDataGrid-columnSeparator"
                                                onClick={[Function]}
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "minHeight": 56,
                                                    "opacity": 1,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SeparatorIcon)
                                                  className="MuiDataGrid-iconSeparator"
                                                >
                                                  <WithStyles(ForwardRef(SvgIcon))
                                                    className="MuiDataGrid-iconSeparator"
                                                  >
                                                    <ForwardRef(SvgIcon)
                                                      className="MuiDataGrid-iconSeparator"
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root MuiDataGrid-iconSeparator"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M11 19V5h2v14z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(SeparatorIcon)>
                                              </div>
                                            </Memo()>
                                            <qn
                                              ContentComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              columnMenuButtonId="mui-100000"
                                              columnMenuId="mui-100000"
                                              field="price"
                                              open={false}
                                              target={
                                                <button
                                                  aria-controls="mui-100000"
                                                  aria-haspopup="true"
                                                  aria-label="Menu"
                                                  class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                  id="mui-100000"
                                                  tabindex="-1"
                                                  title="Menu"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiIconButton-label"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                      />
                                                    </svg>
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              }
                                            >
                                              <Kn
                                                onClickAway={[Function]}
                                                open={false}
                                                placement="bottom-start"
                                                target={
                                                  <button
                                                    aria-controls="mui-100000"
                                                    aria-haspopup="true"
                                                    aria-label="Menu"
                                                    class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                    id="mui-100000"
                                                    tabindex="-1"
                                                    title="Menu"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="MuiIconButton-label"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </button>
                                                }
                                              >
                                                <ForwardRef(Popper)
                                                  anchorEl={
                                                    <button
                                                      aria-controls="mui-100000"
                                                      aria-haspopup="true"
                                                      aria-label="Menu"
                                                      class="MuiButtonBase-root MuiIconButton-root MuiDataGrid-menuIconButton MuiIconButton-sizeSmall"
                                                      id="mui-100000"
                                                      tabindex="-1"
                                                      title="Menu"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiIconButton-label"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  }
                                                  className="MuiGridMenu-root"
                                                  open={false}
                                                  placement="bottom-start"
                                                  transition={true}
                                                />
                                              </Kn>
                                            </qn>
                                          </div>
                                        </Zn>
                                      </ia>
                                      <Memo()
                                        height={56}
                                        width={0}
                                      />
                                    </div>
                                    <Memo()
                                      scrollDirection="right"
                                    />
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                              <ForwardRef
                                onResize={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "visible",
                                      "width": 0,
                                    }
                                  }
                                >
                                  <ForwardRef
                                    size={
                                      Object {
                                        "height": 0,
                                        "width": 0,
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDataGrid-windowContainer"
                                      style={
                                        Object {
                                          "height": 0,
                                          "width": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDataGrid-window"
                                        style={
                                          Object {
                                            "overflowY": "auto",
                                            "top": 56,
                                          }
                                        }
                                      >
                                        <ForwardRef>
                                          <Zl>
                                            <div
                                              className="MuiDataGrid-dataContainer"
                                              style={
                                                Object {
                                                  "minHeight": 52,
                                                  "minWidth": 100,
                                                }
                                              }
                                            >
                                              <ti
                                                height={0}
                                                width={0}
                                              >
                                                <div
                                                  className="MuiDataGrid-viewport"
                                                  style={
                                                    Object {
                                                      "maxHeight": 0,
                                                      "maxWidth": 0,
                                                      "minWidth": 0,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef
                                                    height={52}
                                                    width={100}
                                                  >
                                                    <div
                                                      className="MuiDataGrid-renderingZone"
                                                      style={
                                                        Object {
                                                          "maxHeight": 52,
                                                          "width": 100,
                                                        }
                                                      }
                                                    >
                                                      <ei
                                                        className="Mui-even"
                                                        id={1}
                                                        key="1"
                                                        rowIndex={0}
                                                        selected={false}
                                                      >
                                                        <div
                                                          aria-rowindex={2}
                                                          aria-selected={false}
                                                          className="Mui-even MuiDataGrid-row"
                                                          data-id={1}
                                                          data-rowindex={0}
                                                          key="1"
                                                          onClick={[Function]}
                                                          onDoubleClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOut={[Function]}
                                                          onMouseOver={[Function]}
                                                          role="row"
                                                          style={
                                                            Object {
                                                              "maxHeight": 52,
                                                              "minHeight": 52,
                                                            }
                                                          }
                                                        >
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                          <Memo()
                                                            cellClassName="MuiDataGrid-cell"
                                                            cellFocus={null}
                                                            cellTabIndex={null}
                                                            columns={
                                                              Array [
                                                                Object {
                                                                  "align": "right",
                                                                  "cellClassName": "font-tabular-nums",
                                                                  "field": "price",
                                                                  "filterOperators": Array [
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "=",
                                                                      "value": "=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "!=",
                                                                      "value": "!=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": ">",
                                                                      "value": ">",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": ">=",
                                                                      "value": ">=",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "<",
                                                                      "value": "<",
                                                                    },
                                                                    Object {
                                                                      "InputComponent": [Function],
                                                                      "InputComponentProps": Object {
                                                                        "type": "number",
                                                                      },
                                                                      "getApplyFilterFn": [Function],
                                                                      "label": "<=",
                                                                      "value": "<=",
                                                                    },
                                                                  ],
                                                                  "filterable": true,
                                                                  "headerAlign": "right",
                                                                  "headerName": "Price",
                                                                  "hide": false,
                                                                  "renderEditCell": [Function],
                                                                  "resizable": true,
                                                                  "sortComparator": [Function],
                                                                  "sortable": true,
                                                                  "type": "number",
                                                                  "valueFormatter": [Function],
                                                                  "valueParser": [Function],
                                                                  "width": 100,
                                                                },
                                                              ]
                                                            }
                                                            extendRowFullWidth={true}
                                                            firstColIdx={0}
                                                            hasScrollX={true}
                                                            hasScrollY={true}
                                                            height={52}
                                                            id={1}
                                                            isSelected={false}
                                                            lastColIdx={0}
                                                            row={
                                                              Object {
                                                                "id": 1,
                                                                "price": 1.2,
                                                              }
                                                            }
                                                            rowIndex={0}
                                                            showCellRightBorder={false}
                                                          >
                                                            <Memo()
                                                              align="right"
                                                              cellMode="view"
                                                              className="MuiDataGrid-cell font-tabular-nums"
                                                              colIndex={0}
                                                              extendRowFullWidth={true}
                                                              field="price"
                                                              formattedValue="R$ 1,20"
                                                              hasFocus={false}
                                                              height={52}
                                                              isSelected={false}
                                                              key="price"
                                                              row={
                                                                Object {
                                                                  "id": 1,
                                                                  "price": 1.2,
                                                                }
                                                              }
                                                              rowId={1}
                                                              rowIndex={0}
                                                              showRightBorder={false}
                                                              tabIndex={-1}
                                                              value={1.2}
                                                              width={100}
                                                            >
                                                              <div
                                                                aria-colindex={1}
                                                                className="MuiDataGrid-cell font-tabular-nums MuiDataGrid-cell--textRight"
                                                                data-colindex={0}
                                                                data-field="price"
                                                                data-mode="view"
                                                                data-rowindex={0}
                                                                data-rowselected={false}
                                                                data-value={1.2}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onDoubleClick={[Function]}
                                                                onDragEnter={[Function]}
                                                                onDragOver={[Function]}
                                                                onDragStart={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                                onMouseUp={[Function]}
                                                                role="cell"
                                                                style={
                                                                  Object {
                                                                    "lineHeight": "51px",
                                                                    "maxHeight": 52,
                                                                    "maxWidth": 100,
                                                                    "minHeight": 52,
                                                                    "minWidth": 100,
                                                                  }
                                                                }
                                                                tabIndex={-1}
                                                              >
                                                                R$ 1,20
                                                              </div>
                                                            </Memo()>
                                                          </Memo()>
                                                          <Memo()
                                                            height={52}
                                                            width={0}
                                                          />
                                                        </div>
                                                      </ei>
                                                    </div>
                                                  </ForwardRef>
                                                </div>
                                              </ti>
                                            </div>
                                          </Zl>
                                        </ForwardRef>
                                      </div>
                                    </div>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </div>
                          </hs>
                        </Ss>
                        <Os>
                          <div>
                            <ForwardRef>
                              <ForwardRef>
                                <div
                                  className="MuiDataGrid-footerContainer"
                                >
                                  <div />
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(TablePagination))
                                      backIconButtonText="Página anterior"
                                      classes={
                                        Object {
                                          "caption": "makeStyles-caption-2",
                                          "input": "makeStyles-input-3",
                                        }
                                      }
                                      component="div"
                                      count={1}
                                      labelDisplayedRows={[Function]}
                                      labelRowsPerPage="Linhas por página:"
                                      nextIconButtonText="Próxima página"
                                      onChangePage={[Function]}
                                      onChangeRowsPerPage={[Function]}
                                      page={0}
                                      rowsPerPage={100}
                                      rowsPerPageOptions={
                                        Array [
                                          25,
                                          50,
                                          100,
                                        ]
                                      }
                                    >
                                      <ForwardRef(TablePagination)
                                        backIconButtonText="Página anterior"
                                        classes={
                                          Object {
                                            "actions": "MuiTablePagination-actions",
                                            "caption": "MuiTablePagination-caption makeStyles-caption-2",
                                            "input": "MuiTablePagination-input makeStyles-input-3",
                                            "menuItem": "MuiTablePagination-menuItem",
                                            "root": "MuiTablePagination-root",
                                            "select": "MuiTablePagination-select",
                                            "selectIcon": "MuiTablePagination-selectIcon",
                                            "selectRoot": "MuiTablePagination-selectRoot",
                                            "spacer": "MuiTablePagination-spacer",
                                            "toolbar": "MuiTablePagination-toolbar",
                                          }
                                        }
                                        component="div"
                                        count={1}
                                        labelDisplayedRows={[Function]}
                                        labelRowsPerPage="Linhas por página:"
                                        nextIconButtonText="Próxima página"
                                        onChangePage={[Function]}
                                        onChangeRowsPerPage={[Function]}
                                        page={0}
                                        rowsPerPage={100}
                                        rowsPerPageOptions={
                                          Array [
                                            25,
                                            50,
                                            100,
                                          ]
                                        }
                                      >
                                        <div
                                          className="MuiTablePagination-root"
                                        >
                                          <WithStyles(ForwardRef(Toolbar))
                                            className="MuiTablePagination-toolbar"
                                          >
                                            <ForwardRef(Toolbar)
                                              className="MuiTablePagination-toolbar"
                                              classes={
                                                Object {
                                                  "dense": "MuiToolbar-dense",
                                                  "gutters": "MuiToolbar-gutters",
                                                  "regular": "MuiToolbar-regular",
                                                  "root": "MuiToolbar-root",
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                              >
                                                <div
                                                  className="MuiTablePagination-spacer"
                                                />
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  id="mui-100000"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    id="mui-100000"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                      id="mui-100000"
                                                    >
                                                      Linhas por página:
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Select))
                                                  classes={
                                                    Object {
                                                      "icon": "MuiTablePagination-selectIcon",
                                                      "select": "MuiTablePagination-select",
                                                    }
                                                  }
                                                  id="mui-100000"
                                                  input={
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                    />
                                                  }
                                                  labelId="mui-100000"
                                                  onChange={[Function]}
                                                  value={100}
                                                >
                                                  <ForwardRef(Select)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    id="mui-100000"
                                                    input={
                                                      <WithStyles(ForwardRef(InputBase))
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      />
                                                    }
                                                    labelId="mui-100000"
                                                    onChange={[Function]}
                                                    value={100}
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                      inputComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": [Function],
                                                            "SelectDisplayProps": [Function],
                                                            "aria-label": [Function],
                                                            "autoFocus": [Function],
                                                            "autoWidth": [Function],
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "defaultValue": [Function],
                                                            "disabled": [Function],
                                                            "displayEmpty": [Function],
                                                            "inputRef": [Function],
                                                            "labelId": [Function],
                                                            "multiple": [Function],
                                                            "name": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onClose": [Function],
                                                            "onFocus": [Function],
                                                            "onOpen": [Function],
                                                            "open": [Function],
                                                            "readOnly": [Function],
                                                            "renderValue": [Function],
                                                            "tabIndex": [Function],
                                                            "type": [Function],
                                                            "value": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      inputProps={
                                                        Object {
                                                          "IconComponent": Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          },
                                                          "MenuProps": undefined,
                                                          "SelectDisplayProps": Object {
                                                            "id": "mui-100000",
                                                          },
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={25}
                                                            >
                                                              25
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={50}
                                                            >
                                                              50
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              className="MuiTablePagination-menuItem"
                                                              value={100}
                                                            >
                                                              100
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select MuiTablePagination-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          },
                                                          "displayEmpty": false,
                                                          "labelId": "mui-100000",
                                                          "multiple": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                          "type": undefined,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      value={100}
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputBase-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth",
                                                            "input": "MuiInputBase-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense",
                                                            "multiline": "MuiInputBase-multiline",
                                                            "root": "MuiInputBase-root",
                                                          }
                                                        }
                                                        inputComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": [Function],
                                                              "SelectDisplayProps": [Function],
                                                              "aria-label": [Function],
                                                              "autoFocus": [Function],
                                                              "autoWidth": [Function],
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "defaultValue": [Function],
                                                              "disabled": [Function],
                                                              "displayEmpty": [Function],
                                                              "inputRef": [Function],
                                                              "labelId": [Function],
                                                              "multiple": [Function],
                                                              "name": [Function],
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onClose": [Function],
                                                              "onFocus": [Function],
                                                              "onOpen": [Function],
                                                              "open": [Function],
                                                              "readOnly": [Function],
                                                              "renderValue": [Function],
                                                              "tabIndex": [Function],
                                                              "type": [Function],
                                                              "value": [Function],
                                                              "variant": [Function],
                                                            },
                                                            "render": [Function],
                                                          }
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            },
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": "mui-100000",
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={25}
                                                              >
                                                                25
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={50}
                                                              >
                                                                50
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                              <WithStyles(ForwardRef(MenuItem))
                                                                className="MuiTablePagination-menuItem"
                                                                value={100}
                                                              >
                                                                100
                                                              </WithStyles(ForwardRef(MenuItem))>,
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select MuiTablePagination-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            },
                                                            "displayEmpty": false,
                                                            "labelId": "mui-100000",
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        value={100}
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiTablePagination-input makeStyles-input-3 MuiTablePagination-selectRoot"
                                                          onClick={[Function]}
                                                        >
                                                          <ForwardRef(SelectInput)
                                                            IconComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              }
                                                            }
                                                            SelectDisplayProps={
                                                              Object {
                                                                "id": "mui-100000",
                                                              }
                                                            }
                                                            autoWidth={false}
                                                            className="MuiInputBase-input"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              }
                                                            }
                                                            displayEmpty={false}
                                                            inputRef={[Function]}
                                                            labelId="mui-100000"
                                                            multiple={false}
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value={100}
                                                            variant="standard"
                                                          >
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-100000 mui-100000"
                                                              className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-100000"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              100
                                                            </div>
                                                            <input
                                                              aria-hidden={true}
                                                              className="MuiSelect-nativeInput"
                                                              onAnimationStart={[Function]}
                                                              onChange={[Function]}
                                                              tabIndex={-1}
                                                              value={100}
                                                            />
                                                            <ForwardRef(ArrowDropDownIcon)
                                                              className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M7 10l5 5 5-5z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef(ArrowDropDownIcon)>
                                                            <WithStyles(ForwardRef(Menu))
                                                              MenuListProps={
                                                                Object {
                                                                  "aria-labelledby": "mui-100000",
                                                                  "disableListWrap": true,
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={
                                                                <div
                                                                  aria-haspopup="listbox"
                                                                  aria-labelledby="mui-100000 mui-100000"
                                                                  class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                  id="mui-100000"
                                                                  role="button"
                                                                  tabindex="0"
                                                                >
                                                                  100
                                                                </div>
                                                              }
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <ForwardRef(Menu)
                                                                MenuListProps={
                                                                  Object {
                                                                    "aria-labelledby": "mui-100000",
                                                                    "disableListWrap": true,
                                                                    "role": "listbox",
                                                                  }
                                                                }
                                                                PaperProps={
                                                                  Object {
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                anchorEl={
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    aria-labelledby="mui-100000 mui-100000"
                                                                    class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                    id="mui-100000"
                                                                    role="button"
                                                                    tabindex="0"
                                                                  >
                                                                    100
                                                                  </div>
                                                                }
                                                                classes={
                                                                  Object {
                                                                    "list": "MuiMenu-list",
                                                                    "paper": "MuiMenu-paper",
                                                                  }
                                                                }
                                                                id="menu-"
                                                                onClose={[Function]}
                                                                open={false}
                                                              >
                                                                <WithStyles(ForwardRef(Popover))
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  anchorEl={
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-100000 mui-100000"
                                                                      class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                      id="mui-100000"
                                                                      role="button"
                                                                      tabindex="0"
                                                                    >
                                                                      100
                                                                    </div>
                                                                  }
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-"
                                                                  onClose={[Function]}
                                                                  onEntering={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <ForwardRef(Popover)
                                                                    PaperProps={
                                                                      Object {
                                                                        "classes": Object {
                                                                          "root": "MuiMenu-paper",
                                                                        },
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        aria-labelledby="mui-100000 mui-100000"
                                                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                        id="mui-100000"
                                                                        role="button"
                                                                        tabindex="0"
                                                                      >
                                                                        100
                                                                      </div>
                                                                    }
                                                                    anchorOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "paper": "MuiPopover-paper",
                                                                        "root": "MuiPopover-root",
                                                                      }
                                                                    }
                                                                    getContentAnchorEl={[Function]}
                                                                    id="menu-"
                                                                    onClose={[Function]}
                                                                    onEntering={[Function]}
                                                                    open={false}
                                                                    transformOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    transitionDuration="auto"
                                                                  >
                                                                    <ForwardRef(Modal)
                                                                      BackdropProps={
                                                                        Object {
                                                                          "invisible": true,
                                                                        }
                                                                      }
                                                                      className="MuiPopover-root"
                                                                      container={<body />}
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    />
                                                                  </ForwardRef(Popover)>
                                                                </WithStyles(ForwardRef(Popover))>
                                                              </ForwardRef(Menu)>
                                                            </WithStyles(ForwardRef(Menu))>
                                                          </ForwardRef(SelectInput)>
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Select)>
                                                </WithStyles(ForwardRef(Select))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiTablePagination-caption makeStyles-caption-2"
                                                  color="inherit"
                                                  variant="body2"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiTablePagination-caption makeStyles-caption-2"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="inherit"
                                                    variant="body2"
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTablePagination-caption makeStyles-caption-2 MuiTypography-body2 MuiTypography-colorInherit"
                                                    >
                                                      1-1 de 1
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <ForwardRef(TablePaginationActions)
                                                  backIconButtonProps={
                                                    Object {
                                                      "aria-label": "Página anterior",
                                                      "title": "Página anterior",
                                                    }
                                                  }
                                                  className="MuiTablePagination-actions"
                                                  count={1}
                                                  nextIconButtonProps={
                                                    Object {
                                                      "aria-label": "Próxima página",
                                                      "title": "Próxima página",
                                                    }
                                                  }
                                                  onChangePage={[Function]}
                                                  page={0}
                                                  rowsPerPage={100}
                                                >
                                                  <div
                                                    className="MuiTablePagination-actions"
                                                  >
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Página anterior"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Página anterior"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Página anterior"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Página anterior"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Página anterior"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Página anterior"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Página anterior"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Página anterior"
                                                          >
                                                            <button
                                                              aria-label="Página anterior"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Página anterior"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowLeftIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowLeftIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                    <WithStyles(ForwardRef(IconButton))
                                                      aria-label="Próxima página"
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      title="Próxima página"
                                                    >
                                                      <ForwardRef(IconButton)
                                                        aria-label="Próxima página"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                            "label": "MuiIconButton-label",
                                                            "root": "MuiIconButton-root",
                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                          }
                                                        }
                                                        color="inherit"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        title="Próxima página"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          aria-label="Próxima página"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                          title="Próxima página"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            aria-label="Próxima página"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            disabled={true}
                                                            focusRipple={true}
                                                            onClick={[Function]}
                                                            title="Próxima página"
                                                          >
                                                            <button
                                                              aria-label="Próxima página"
                                                              className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={-1}
                                                              title="Próxima página"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label"
                                                              >
                                                                <ForwardRef(KeyboardArrowRightIcon)>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef(KeyboardArrowRightIcon)>
                                                              </span>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(IconButton)>
                                                    </WithStyles(ForwardRef(IconButton))>
                                                  </div>
                                                </ForwardRef(TablePaginationActions)>
                                              </div>
                                            </ForwardRef(Toolbar)>
                                          </WithStyles(ForwardRef(Toolbar))>
                                        </div>
                                      </ForwardRef(TablePagination)>
                                    </WithStyles(ForwardRef(TablePagination))>
                                  </ForwardRef>
                                </div>
                              </ForwardRef>
                            </ForwardRef>
                          </div>
                        </Os>
                      </Cs>
                    </vs>
                  </div>
                </NoSsr>
              </ForwardRef>
            </bs>
          </ForwardRef>
        </ForwardRef>
      </ThemeProvider>
    </div>
  </ScrollBar>
</Memo()>
`;
